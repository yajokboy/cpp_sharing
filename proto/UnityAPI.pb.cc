// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnityAPI.proto

#include "UnityAPI.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace UnityAPI {
constexpr setDBRequest::setDBRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setDBRequestDefaultTypeInternal {
  constexpr setDBRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDBRequestDefaultTypeInternal() {}
  union {
    setDBRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDBRequestDefaultTypeInternal _setDBRequest_default_instance_;
constexpr setDBReply::setDBReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct setDBReplyDefaultTypeInternal {
  constexpr setDBReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDBReplyDefaultTypeInternal() {}
  union {
    setDBReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDBReplyDefaultTypeInternal _setDBReply_default_instance_;
constexpr getDBRequest::getDBRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getDBRequestDefaultTypeInternal {
  constexpr getDBRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDBRequestDefaultTypeInternal() {}
  union {
    getDBRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDBRequestDefaultTypeInternal _getDBRequest_default_instance_;
constexpr getDBReply::getDBReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getDBReplyDefaultTypeInternal {
  constexpr getDBReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDBReplyDefaultTypeInternal() {}
  union {
    getDBReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDBReplyDefaultTypeInternal _getDBReply_default_instance_;
constexpr FrontLowLightRequest::FrontLowLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontLowLightRequestDefaultTypeInternal {
  constexpr FrontLowLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLowLightRequestDefaultTypeInternal() {}
  union {
    FrontLowLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLowLightRequestDefaultTypeInternal _FrontLowLightRequest_default_instance_;
constexpr FrontHighLightRequest::FrontHighLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontHighLightRequestDefaultTypeInternal {
  constexpr FrontHighLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontHighLightRequestDefaultTypeInternal() {}
  union {
    FrontHighLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontHighLightRequestDefaultTypeInternal _FrontHighLightRequest_default_instance_;
constexpr RearLightRequest::RearLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearLightRequestDefaultTypeInternal {
  constexpr RearLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLightRequestDefaultTypeInternal() {}
  union {
    RearLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLightRequestDefaultTypeInternal _RearLightRequest_default_instance_;
constexpr FrontDaytimeLightRequest::FrontDaytimeLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontDaytimeLightRequestDefaultTypeInternal {
  constexpr FrontDaytimeLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontDaytimeLightRequestDefaultTypeInternal() {}
  union {
    FrontDaytimeLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontDaytimeLightRequestDefaultTypeInternal _FrontDaytimeLightRequest_default_instance_;
constexpr BrakeLightRequest::BrakeLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct BrakeLightRequestDefaultTypeInternal {
  constexpr BrakeLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BrakeLightRequestDefaultTypeInternal() {}
  union {
    BrakeLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BrakeLightRequestDefaultTypeInternal _BrakeLightRequest_default_instance_;
constexpr ReverseLightRequest::ReverseLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct ReverseLightRequestDefaultTypeInternal {
  constexpr ReverseLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReverseLightRequestDefaultTypeInternal() {}
  union {
    ReverseLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReverseLightRequestDefaultTypeInternal _ReverseLightRequest_default_instance_;
constexpr FrontFogLightRequest::FrontFogLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontFogLightRequestDefaultTypeInternal {
  constexpr FrontFogLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontFogLightRequestDefaultTypeInternal() {}
  union {
    FrontFogLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontFogLightRequestDefaultTypeInternal _FrontFogLightRequest_default_instance_;
constexpr RearFogLightRequest::RearFogLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearFogLightRequestDefaultTypeInternal {
  constexpr RearFogLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearFogLightRequestDefaultTypeInternal() {}
  union {
    RearFogLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearFogLightRequestDefaultTypeInternal _RearFogLightRequest_default_instance_;
constexpr ClearanceLampRequest::ClearanceLampRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct ClearanceLampRequestDefaultTypeInternal {
  constexpr ClearanceLampRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClearanceLampRequestDefaultTypeInternal() {}
  union {
    ClearanceLampRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClearanceLampRequestDefaultTypeInternal _ClearanceLampRequest_default_instance_;
constexpr FrontLeftBlinkerLightRequest::FrontLeftBlinkerLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontLeftBlinkerLightRequestDefaultTypeInternal {
  constexpr FrontLeftBlinkerLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftBlinkerLightRequestDefaultTypeInternal() {}
  union {
    FrontLeftBlinkerLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftBlinkerLightRequestDefaultTypeInternal _FrontLeftBlinkerLightRequest_default_instance_;
constexpr FrontRightBlinkerLightRequest::FrontRightBlinkerLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontRightBlinkerLightRequestDefaultTypeInternal {
  constexpr FrontRightBlinkerLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightBlinkerLightRequestDefaultTypeInternal() {}
  union {
    FrontRightBlinkerLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightBlinkerLightRequestDefaultTypeInternal _FrontRightBlinkerLightRequest_default_instance_;
constexpr RearLeftBlinkerLightRequest::RearLeftBlinkerLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearLeftBlinkerLightRequestDefaultTypeInternal {
  constexpr RearLeftBlinkerLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftBlinkerLightRequestDefaultTypeInternal() {}
  union {
    RearLeftBlinkerLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftBlinkerLightRequestDefaultTypeInternal _RearLeftBlinkerLightRequest_default_instance_;
constexpr RearRightBlinkerLightRequest::RearRightBlinkerLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearRightBlinkerLightRequestDefaultTypeInternal {
  constexpr RearRightBlinkerLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightBlinkerLightRequestDefaultTypeInternal() {}
  union {
    RearRightBlinkerLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightBlinkerLightRequestDefaultTypeInternal _RearRightBlinkerLightRequest_default_instance_;
constexpr FrontWiperRequest::FrontWiperRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontWiperRequestDefaultTypeInternal {
  constexpr FrontWiperRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontWiperRequestDefaultTypeInternal() {}
  union {
    FrontWiperRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontWiperRequestDefaultTypeInternal _FrontWiperRequest_default_instance_;
constexpr RearWiperRequest::RearWiperRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearWiperRequestDefaultTypeInternal {
  constexpr RearWiperRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearWiperRequestDefaultTypeInternal() {}
  union {
    RearWiperRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearWiperRequestDefaultTypeInternal _RearWiperRequest_default_instance_;
constexpr LeftSideMirrorRequest::LeftSideMirrorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : angle_(0)
  , setmode_(false){}
struct LeftSideMirrorRequestDefaultTypeInternal {
  constexpr LeftSideMirrorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LeftSideMirrorRequestDefaultTypeInternal() {}
  union {
    LeftSideMirrorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LeftSideMirrorRequestDefaultTypeInternal _LeftSideMirrorRequest_default_instance_;
constexpr RightSideMirrorRequest::RightSideMirrorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : angle_(0)
  , setmode_(false){}
struct RightSideMirrorRequestDefaultTypeInternal {
  constexpr RightSideMirrorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RightSideMirrorRequestDefaultTypeInternal() {}
  union {
    RightSideMirrorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RightSideMirrorRequestDefaultTypeInternal _RightSideMirrorRequest_default_instance_;
constexpr FrontRightDoorRequest::FrontRightDoorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontRightDoorRequestDefaultTypeInternal {
  constexpr FrontRightDoorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightDoorRequestDefaultTypeInternal() {}
  union {
    FrontRightDoorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightDoorRequestDefaultTypeInternal _FrontRightDoorRequest_default_instance_;
constexpr FrontLeftDoorRequest::FrontLeftDoorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontLeftDoorRequestDefaultTypeInternal {
  constexpr FrontLeftDoorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftDoorRequestDefaultTypeInternal() {}
  union {
    FrontLeftDoorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftDoorRequestDefaultTypeInternal _FrontLeftDoorRequest_default_instance_;
constexpr RearRightDoorRequest::RearRightDoorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearRightDoorRequestDefaultTypeInternal {
  constexpr RearRightDoorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightDoorRequestDefaultTypeInternal() {}
  union {
    RearRightDoorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightDoorRequestDefaultTypeInternal _RearRightDoorRequest_default_instance_;
constexpr RearLeftDoorRequest::RearLeftDoorRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearLeftDoorRequestDefaultTypeInternal {
  constexpr RearLeftDoorRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftDoorRequestDefaultTypeInternal() {}
  union {
    RearLeftDoorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftDoorRequestDefaultTypeInternal _RearLeftDoorRequest_default_instance_;
constexpr TrunkRequest::TrunkRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct TrunkRequestDefaultTypeInternal {
  constexpr TrunkRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TrunkRequestDefaultTypeInternal() {}
  union {
    TrunkRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TrunkRequestDefaultTypeInternal _TrunkRequest_default_instance_;
constexpr SunRoofRequest::SunRoofRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct SunRoofRequestDefaultTypeInternal {
  constexpr SunRoofRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SunRoofRequestDefaultTypeInternal() {}
  union {
    SunRoofRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SunRoofRequestDefaultTypeInternal _SunRoofRequest_default_instance_;
constexpr FrontRightPowerWindowsRequest::FrontRightPowerWindowsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0)
  , setmode_(false){}
struct FrontRightPowerWindowsRequestDefaultTypeInternal {
  constexpr FrontRightPowerWindowsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightPowerWindowsRequestDefaultTypeInternal() {}
  union {
    FrontRightPowerWindowsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightPowerWindowsRequestDefaultTypeInternal _FrontRightPowerWindowsRequest_default_instance_;
constexpr FrontLeftPowerWindowsRequest::FrontLeftPowerWindowsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0)
  , setmode_(false){}
struct FrontLeftPowerWindowsRequestDefaultTypeInternal {
  constexpr FrontLeftPowerWindowsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftPowerWindowsRequestDefaultTypeInternal() {}
  union {
    FrontLeftPowerWindowsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftPowerWindowsRequestDefaultTypeInternal _FrontLeftPowerWindowsRequest_default_instance_;
constexpr RearRightPowerWindowsRequest::RearRightPowerWindowsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0)
  , setmode_(false){}
struct RearRightPowerWindowsRequestDefaultTypeInternal {
  constexpr RearRightPowerWindowsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightPowerWindowsRequestDefaultTypeInternal() {}
  union {
    RearRightPowerWindowsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightPowerWindowsRequestDefaultTypeInternal _RearRightPowerWindowsRequest_default_instance_;
constexpr RearLeftPowerWindowsRequest::RearLeftPowerWindowsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0)
  , setmode_(false){}
struct RearLeftPowerWindowsRequestDefaultTypeInternal {
  constexpr RearLeftPowerWindowsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftPowerWindowsRequestDefaultTypeInternal() {}
  union {
    RearLeftPowerWindowsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftPowerWindowsRequestDefaultTypeInternal _RearLeftPowerWindowsRequest_default_instance_;
constexpr SideMirrorSwitchRequest::SideMirrorSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct SideMirrorSwitchRequestDefaultTypeInternal {
  constexpr SideMirrorSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SideMirrorSwitchRequestDefaultTypeInternal() {}
  union {
    SideMirrorSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SideMirrorSwitchRequestDefaultTypeInternal _SideMirrorSwitchRequest_default_instance_;
constexpr InstrumentLightRequest::InstrumentLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct InstrumentLightRequestDefaultTypeInternal {
  constexpr InstrumentLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InstrumentLightRequestDefaultTypeInternal() {}
  union {
    InstrumentLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InstrumentLightRequestDefaultTypeInternal _InstrumentLightRequest_default_instance_;
constexpr PassgenerRoomDomeLightRequest::PassgenerRoomDomeLightRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct PassgenerRoomDomeLightRequestDefaultTypeInternal {
  constexpr PassgenerRoomDomeLightRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PassgenerRoomDomeLightRequestDefaultTypeInternal() {}
  union {
    PassgenerRoomDomeLightRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PassgenerRoomDomeLightRequestDefaultTypeInternal _PassgenerRoomDomeLightRequest_default_instance_;
constexpr ReadingLightDriverSideRequest::ReadingLightDriverSideRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct ReadingLightDriverSideRequestDefaultTypeInternal {
  constexpr ReadingLightDriverSideRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadingLightDriverSideRequestDefaultTypeInternal() {}
  union {
    ReadingLightDriverSideRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadingLightDriverSideRequestDefaultTypeInternal _ReadingLightDriverSideRequest_default_instance_;
constexpr ReadingLightPassgenerSideRequest::ReadingLightPassgenerSideRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct ReadingLightPassgenerSideRequestDefaultTypeInternal {
  constexpr ReadingLightPassgenerSideRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadingLightPassgenerSideRequestDefaultTypeInternal() {}
  union {
    ReadingLightPassgenerSideRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadingLightPassgenerSideRequestDefaultTypeInternal _ReadingLightPassgenerSideRequest_default_instance_;
constexpr FrontRightPowerWindowsSwitchRequest::FrontRightPowerWindowsSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontRightPowerWindowsSwitchRequestDefaultTypeInternal {
  constexpr FrontRightPowerWindowsSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightPowerWindowsSwitchRequestDefaultTypeInternal() {}
  union {
    FrontRightPowerWindowsSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightPowerWindowsSwitchRequestDefaultTypeInternal _FrontRightPowerWindowsSwitchRequest_default_instance_;
constexpr FrontLeftPowerWindowsSwitchRequest::FrontLeftPowerWindowsSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontLeftPowerWindowsSwitchRequestDefaultTypeInternal {
  constexpr FrontLeftPowerWindowsSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftPowerWindowsSwitchRequestDefaultTypeInternal() {}
  union {
    FrontLeftPowerWindowsSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftPowerWindowsSwitchRequestDefaultTypeInternal _FrontLeftPowerWindowsSwitchRequest_default_instance_;
constexpr RearRightPowerWindowsSwitchRequest::RearRightPowerWindowsSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearRightPowerWindowsSwitchRequestDefaultTypeInternal {
  constexpr RearRightPowerWindowsSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightPowerWindowsSwitchRequestDefaultTypeInternal() {}
  union {
    RearRightPowerWindowsSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightPowerWindowsSwitchRequestDefaultTypeInternal _RearRightPowerWindowsSwitchRequest_default_instance_;
constexpr RearLeftPowerWindowsSwitchRequest::RearLeftPowerWindowsSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearLeftPowerWindowsSwitchRequestDefaultTypeInternal {
  constexpr RearLeftPowerWindowsSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftPowerWindowsSwitchRequestDefaultTypeInternal() {}
  union {
    RearLeftPowerWindowsSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftPowerWindowsSwitchRequestDefaultTypeInternal _RearLeftPowerWindowsSwitchRequest_default_instance_;
constexpr HornRequest::HornRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct HornRequestDefaultTypeInternal {
  constexpr HornRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HornRequestDefaultTypeInternal() {}
  union {
    HornRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HornRequestDefaultTypeInternal _HornRequest_default_instance_;
constexpr BuzzerRequest::BuzzerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct BuzzerRequestDefaultTypeInternal {
  constexpr BuzzerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuzzerRequestDefaultTypeInternal() {}
  union {
    BuzzerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuzzerRequestDefaultTypeInternal _BuzzerRequest_default_instance_;
constexpr AirConditionerRequest::AirConditionerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct AirConditionerRequestDefaultTypeInternal {
  constexpr AirConditionerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AirConditionerRequestDefaultTypeInternal() {}
  union {
    AirConditionerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AirConditionerRequestDefaultTypeInternal _AirConditionerRequest_default_instance_;
constexpr AirCondTemperatureRequest::AirCondTemperatureRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : temperature_(0)
  , setmode_(false){}
struct AirCondTemperatureRequestDefaultTypeInternal {
  constexpr AirCondTemperatureRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AirCondTemperatureRequestDefaultTypeInternal() {}
  union {
    AirCondTemperatureRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AirCondTemperatureRequestDefaultTypeInternal _AirCondTemperatureRequest_default_instance_;
constexpr AirConditionerFanSpeedRequest::AirConditionerFanSpeedRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , fanspeed_(0){}
struct AirConditionerFanSpeedRequestDefaultTypeInternal {
  constexpr AirConditionerFanSpeedRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AirConditionerFanSpeedRequestDefaultTypeInternal() {}
  union {
    AirConditionerFanSpeedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AirConditionerFanSpeedRequestDefaultTypeInternal _AirConditionerFanSpeedRequest_default_instance_;
constexpr HandlingRequest::HandlingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct HandlingRequestDefaultTypeInternal {
  constexpr HandlingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HandlingRequestDefaultTypeInternal() {}
  union {
    HandlingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HandlingRequestDefaultTypeInternal _HandlingRequest_default_instance_;
constexpr CentralDoorLockSwitchRequest::CentralDoorLockSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct CentralDoorLockSwitchRequestDefaultTypeInternal {
  constexpr CentralDoorLockSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CentralDoorLockSwitchRequestDefaultTypeInternal() {}
  union {
    CentralDoorLockSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CentralDoorLockSwitchRequestDefaultTypeInternal _CentralDoorLockSwitchRequest_default_instance_;
constexpr FrontRightDoorLockSwitchRequest::FrontRightDoorLockSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontRightDoorLockSwitchRequestDefaultTypeInternal {
  constexpr FrontRightDoorLockSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightDoorLockSwitchRequestDefaultTypeInternal() {}
  union {
    FrontRightDoorLockSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightDoorLockSwitchRequestDefaultTypeInternal _FrontRightDoorLockSwitchRequest_default_instance_;
constexpr FrontLeftDoorLockSwitchRequest::FrontLeftDoorLockSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct FrontLeftDoorLockSwitchRequestDefaultTypeInternal {
  constexpr FrontLeftDoorLockSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftDoorLockSwitchRequestDefaultTypeInternal() {}
  union {
    FrontLeftDoorLockSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftDoorLockSwitchRequestDefaultTypeInternal _FrontLeftDoorLockSwitchRequest_default_instance_;
constexpr RearRightDoorLockSwitchRequest::RearRightDoorLockSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearRightDoorLockSwitchRequestDefaultTypeInternal {
  constexpr RearRightDoorLockSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightDoorLockSwitchRequestDefaultTypeInternal() {}
  union {
    RearRightDoorLockSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightDoorLockSwitchRequestDefaultTypeInternal _RearRightDoorLockSwitchRequest_default_instance_;
constexpr RearLeftDoorLockSwitchRequest::RearLeftDoorLockSwitchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setmode_(false)
  , flag_(false){}
struct RearLeftDoorLockSwitchRequestDefaultTypeInternal {
  constexpr RearLeftDoorLockSwitchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftDoorLockSwitchRequestDefaultTypeInternal() {}
  union {
    RearLeftDoorLockSwitchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftDoorLockSwitchRequestDefaultTypeInternal _RearLeftDoorLockSwitchRequest_default_instance_;
constexpr FrontLowLightReply::FrontLowLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontLowLightReplyDefaultTypeInternal {
  constexpr FrontLowLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLowLightReplyDefaultTypeInternal() {}
  union {
    FrontLowLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLowLightReplyDefaultTypeInternal _FrontLowLightReply_default_instance_;
constexpr FrontHighLightReply::FrontHighLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontHighLightReplyDefaultTypeInternal {
  constexpr FrontHighLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontHighLightReplyDefaultTypeInternal() {}
  union {
    FrontHighLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontHighLightReplyDefaultTypeInternal _FrontHighLightReply_default_instance_;
constexpr RearLightReply::RearLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearLightReplyDefaultTypeInternal {
  constexpr RearLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLightReplyDefaultTypeInternal() {}
  union {
    RearLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLightReplyDefaultTypeInternal _RearLightReply_default_instance_;
constexpr FrontDaytimeLightReply::FrontDaytimeLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontDaytimeLightReplyDefaultTypeInternal {
  constexpr FrontDaytimeLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontDaytimeLightReplyDefaultTypeInternal() {}
  union {
    FrontDaytimeLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontDaytimeLightReplyDefaultTypeInternal _FrontDaytimeLightReply_default_instance_;
constexpr BrakeLightReply::BrakeLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct BrakeLightReplyDefaultTypeInternal {
  constexpr BrakeLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BrakeLightReplyDefaultTypeInternal() {}
  union {
    BrakeLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BrakeLightReplyDefaultTypeInternal _BrakeLightReply_default_instance_;
constexpr ReverseLightReply::ReverseLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct ReverseLightReplyDefaultTypeInternal {
  constexpr ReverseLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReverseLightReplyDefaultTypeInternal() {}
  union {
    ReverseLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReverseLightReplyDefaultTypeInternal _ReverseLightReply_default_instance_;
constexpr FrontFogLightReply::FrontFogLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontFogLightReplyDefaultTypeInternal {
  constexpr FrontFogLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontFogLightReplyDefaultTypeInternal() {}
  union {
    FrontFogLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontFogLightReplyDefaultTypeInternal _FrontFogLightReply_default_instance_;
constexpr RearFogLightReply::RearFogLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearFogLightReplyDefaultTypeInternal {
  constexpr RearFogLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearFogLightReplyDefaultTypeInternal() {}
  union {
    RearFogLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearFogLightReplyDefaultTypeInternal _RearFogLightReply_default_instance_;
constexpr ClearanceLampReply::ClearanceLampReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct ClearanceLampReplyDefaultTypeInternal {
  constexpr ClearanceLampReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClearanceLampReplyDefaultTypeInternal() {}
  union {
    ClearanceLampReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClearanceLampReplyDefaultTypeInternal _ClearanceLampReply_default_instance_;
constexpr FrontLeftBlinkerLightReply::FrontLeftBlinkerLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontLeftBlinkerLightReplyDefaultTypeInternal {
  constexpr FrontLeftBlinkerLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftBlinkerLightReplyDefaultTypeInternal() {}
  union {
    FrontLeftBlinkerLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftBlinkerLightReplyDefaultTypeInternal _FrontLeftBlinkerLightReply_default_instance_;
constexpr FrontRightBlinkerLightReply::FrontRightBlinkerLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontRightBlinkerLightReplyDefaultTypeInternal {
  constexpr FrontRightBlinkerLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightBlinkerLightReplyDefaultTypeInternal() {}
  union {
    FrontRightBlinkerLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightBlinkerLightReplyDefaultTypeInternal _FrontRightBlinkerLightReply_default_instance_;
constexpr RearLeftBlinkerLightReply::RearLeftBlinkerLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearLeftBlinkerLightReplyDefaultTypeInternal {
  constexpr RearLeftBlinkerLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftBlinkerLightReplyDefaultTypeInternal() {}
  union {
    RearLeftBlinkerLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftBlinkerLightReplyDefaultTypeInternal _RearLeftBlinkerLightReply_default_instance_;
constexpr RearRightBlinkerLightReply::RearRightBlinkerLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearRightBlinkerLightReplyDefaultTypeInternal {
  constexpr RearRightBlinkerLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightBlinkerLightReplyDefaultTypeInternal() {}
  union {
    RearRightBlinkerLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightBlinkerLightReplyDefaultTypeInternal _RearRightBlinkerLightReply_default_instance_;
constexpr FrontWiperReply::FrontWiperReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontWiperReplyDefaultTypeInternal {
  constexpr FrontWiperReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontWiperReplyDefaultTypeInternal() {}
  union {
    FrontWiperReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontWiperReplyDefaultTypeInternal _FrontWiperReply_default_instance_;
constexpr RearWiperReply::RearWiperReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearWiperReplyDefaultTypeInternal {
  constexpr RearWiperReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearWiperReplyDefaultTypeInternal() {}
  union {
    RearWiperReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearWiperReplyDefaultTypeInternal _RearWiperReply_default_instance_;
constexpr LeftSideMirrorReply::LeftSideMirrorReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : angle_(0){}
struct LeftSideMirrorReplyDefaultTypeInternal {
  constexpr LeftSideMirrorReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LeftSideMirrorReplyDefaultTypeInternal() {}
  union {
    LeftSideMirrorReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LeftSideMirrorReplyDefaultTypeInternal _LeftSideMirrorReply_default_instance_;
constexpr RightSideMirrorReply::RightSideMirrorReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : angle_(0){}
struct RightSideMirrorReplyDefaultTypeInternal {
  constexpr RightSideMirrorReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RightSideMirrorReplyDefaultTypeInternal() {}
  union {
    RightSideMirrorReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RightSideMirrorReplyDefaultTypeInternal _RightSideMirrorReply_default_instance_;
constexpr FrontRightDoorReply::FrontRightDoorReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontRightDoorReplyDefaultTypeInternal {
  constexpr FrontRightDoorReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightDoorReplyDefaultTypeInternal() {}
  union {
    FrontRightDoorReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightDoorReplyDefaultTypeInternal _FrontRightDoorReply_default_instance_;
constexpr FrontLeftDoorReply::FrontLeftDoorReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontLeftDoorReplyDefaultTypeInternal {
  constexpr FrontLeftDoorReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftDoorReplyDefaultTypeInternal() {}
  union {
    FrontLeftDoorReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftDoorReplyDefaultTypeInternal _FrontLeftDoorReply_default_instance_;
constexpr RearRightDoorReply::RearRightDoorReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearRightDoorReplyDefaultTypeInternal {
  constexpr RearRightDoorReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightDoorReplyDefaultTypeInternal() {}
  union {
    RearRightDoorReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightDoorReplyDefaultTypeInternal _RearRightDoorReply_default_instance_;
constexpr RearLeftDoorReply::RearLeftDoorReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearLeftDoorReplyDefaultTypeInternal {
  constexpr RearLeftDoorReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftDoorReplyDefaultTypeInternal() {}
  union {
    RearLeftDoorReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftDoorReplyDefaultTypeInternal _RearLeftDoorReply_default_instance_;
constexpr TrunkReply::TrunkReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct TrunkReplyDefaultTypeInternal {
  constexpr TrunkReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TrunkReplyDefaultTypeInternal() {}
  union {
    TrunkReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TrunkReplyDefaultTypeInternal _TrunkReply_default_instance_;
constexpr SunRoofReply::SunRoofReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct SunRoofReplyDefaultTypeInternal {
  constexpr SunRoofReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SunRoofReplyDefaultTypeInternal() {}
  union {
    SunRoofReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SunRoofReplyDefaultTypeInternal _SunRoofReply_default_instance_;
constexpr FrontRightPowerWindowsReply::FrontRightPowerWindowsReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0){}
struct FrontRightPowerWindowsReplyDefaultTypeInternal {
  constexpr FrontRightPowerWindowsReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightPowerWindowsReplyDefaultTypeInternal() {}
  union {
    FrontRightPowerWindowsReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightPowerWindowsReplyDefaultTypeInternal _FrontRightPowerWindowsReply_default_instance_;
constexpr FrontLeftPowerWindowsReply::FrontLeftPowerWindowsReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0){}
struct FrontLeftPowerWindowsReplyDefaultTypeInternal {
  constexpr FrontLeftPowerWindowsReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftPowerWindowsReplyDefaultTypeInternal() {}
  union {
    FrontLeftPowerWindowsReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftPowerWindowsReplyDefaultTypeInternal _FrontLeftPowerWindowsReply_default_instance_;
constexpr RearRightPowerWindowsReply::RearRightPowerWindowsReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0){}
struct RearRightPowerWindowsReplyDefaultTypeInternal {
  constexpr RearRightPowerWindowsReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightPowerWindowsReplyDefaultTypeInternal() {}
  union {
    RearRightPowerWindowsReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightPowerWindowsReplyDefaultTypeInternal _RearRightPowerWindowsReply_default_instance_;
constexpr RearLeftPowerWindowsReply::RearLeftPowerWindowsReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : highlevel_(0){}
struct RearLeftPowerWindowsReplyDefaultTypeInternal {
  constexpr RearLeftPowerWindowsReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftPowerWindowsReplyDefaultTypeInternal() {}
  union {
    RearLeftPowerWindowsReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftPowerWindowsReplyDefaultTypeInternal _RearLeftPowerWindowsReply_default_instance_;
constexpr SideMirrorSwitchReply::SideMirrorSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct SideMirrorSwitchReplyDefaultTypeInternal {
  constexpr SideMirrorSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SideMirrorSwitchReplyDefaultTypeInternal() {}
  union {
    SideMirrorSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SideMirrorSwitchReplyDefaultTypeInternal _SideMirrorSwitchReply_default_instance_;
constexpr InstrumentLightReply::InstrumentLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct InstrumentLightReplyDefaultTypeInternal {
  constexpr InstrumentLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InstrumentLightReplyDefaultTypeInternal() {}
  union {
    InstrumentLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InstrumentLightReplyDefaultTypeInternal _InstrumentLightReply_default_instance_;
constexpr PassgenerRoomDomeLightReply::PassgenerRoomDomeLightReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct PassgenerRoomDomeLightReplyDefaultTypeInternal {
  constexpr PassgenerRoomDomeLightReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PassgenerRoomDomeLightReplyDefaultTypeInternal() {}
  union {
    PassgenerRoomDomeLightReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PassgenerRoomDomeLightReplyDefaultTypeInternal _PassgenerRoomDomeLightReply_default_instance_;
constexpr ReadingLightDriverSideReply::ReadingLightDriverSideReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct ReadingLightDriverSideReplyDefaultTypeInternal {
  constexpr ReadingLightDriverSideReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadingLightDriverSideReplyDefaultTypeInternal() {}
  union {
    ReadingLightDriverSideReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadingLightDriverSideReplyDefaultTypeInternal _ReadingLightDriverSideReply_default_instance_;
constexpr ReadingLightPassgenerSideReply::ReadingLightPassgenerSideReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct ReadingLightPassgenerSideReplyDefaultTypeInternal {
  constexpr ReadingLightPassgenerSideReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadingLightPassgenerSideReplyDefaultTypeInternal() {}
  union {
    ReadingLightPassgenerSideReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadingLightPassgenerSideReplyDefaultTypeInternal _ReadingLightPassgenerSideReply_default_instance_;
constexpr FrontRightPowerWindowsSwitchReply::FrontRightPowerWindowsSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontRightPowerWindowsSwitchReplyDefaultTypeInternal {
  constexpr FrontRightPowerWindowsSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightPowerWindowsSwitchReplyDefaultTypeInternal() {}
  union {
    FrontRightPowerWindowsSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightPowerWindowsSwitchReplyDefaultTypeInternal _FrontRightPowerWindowsSwitchReply_default_instance_;
constexpr FrontLeftPowerWindowsSwitchReply::FrontLeftPowerWindowsSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontLeftPowerWindowsSwitchReplyDefaultTypeInternal {
  constexpr FrontLeftPowerWindowsSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftPowerWindowsSwitchReplyDefaultTypeInternal() {}
  union {
    FrontLeftPowerWindowsSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftPowerWindowsSwitchReplyDefaultTypeInternal _FrontLeftPowerWindowsSwitchReply_default_instance_;
constexpr RearRightPowerWindowsSwitchReply::RearRightPowerWindowsSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearRightPowerWindowsSwitchReplyDefaultTypeInternal {
  constexpr RearRightPowerWindowsSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightPowerWindowsSwitchReplyDefaultTypeInternal() {}
  union {
    RearRightPowerWindowsSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightPowerWindowsSwitchReplyDefaultTypeInternal _RearRightPowerWindowsSwitchReply_default_instance_;
constexpr RearLeftPowerWindowsSwitchReply::RearLeftPowerWindowsSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearLeftPowerWindowsSwitchReplyDefaultTypeInternal {
  constexpr RearLeftPowerWindowsSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftPowerWindowsSwitchReplyDefaultTypeInternal() {}
  union {
    RearLeftPowerWindowsSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftPowerWindowsSwitchReplyDefaultTypeInternal _RearLeftPowerWindowsSwitchReply_default_instance_;
constexpr HornReply::HornReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct HornReplyDefaultTypeInternal {
  constexpr HornReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HornReplyDefaultTypeInternal() {}
  union {
    HornReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HornReplyDefaultTypeInternal _HornReply_default_instance_;
constexpr BuzzerReply::BuzzerReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct BuzzerReplyDefaultTypeInternal {
  constexpr BuzzerReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BuzzerReplyDefaultTypeInternal() {}
  union {
    BuzzerReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BuzzerReplyDefaultTypeInternal _BuzzerReply_default_instance_;
constexpr AirConditionerReply::AirConditionerReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct AirConditionerReplyDefaultTypeInternal {
  constexpr AirConditionerReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AirConditionerReplyDefaultTypeInternal() {}
  union {
    AirConditionerReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AirConditionerReplyDefaultTypeInternal _AirConditionerReply_default_instance_;
constexpr AirCondTemperatureReply::AirCondTemperatureReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : temperature_(0){}
struct AirCondTemperatureReplyDefaultTypeInternal {
  constexpr AirCondTemperatureReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AirCondTemperatureReplyDefaultTypeInternal() {}
  union {
    AirCondTemperatureReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AirCondTemperatureReplyDefaultTypeInternal _AirCondTemperatureReply_default_instance_;
constexpr AirConditionerFanSpeedReply::AirConditionerFanSpeedReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fanspeed_(0){}
struct AirConditionerFanSpeedReplyDefaultTypeInternal {
  constexpr AirConditionerFanSpeedReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AirConditionerFanSpeedReplyDefaultTypeInternal() {}
  union {
    AirConditionerFanSpeedReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AirConditionerFanSpeedReplyDefaultTypeInternal _AirConditionerFanSpeedReply_default_instance_;
constexpr HandlingReply::HandlingReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct HandlingReplyDefaultTypeInternal {
  constexpr HandlingReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HandlingReplyDefaultTypeInternal() {}
  union {
    HandlingReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HandlingReplyDefaultTypeInternal _HandlingReply_default_instance_;
constexpr CentralDoorLockSwitchReply::CentralDoorLockSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct CentralDoorLockSwitchReplyDefaultTypeInternal {
  constexpr CentralDoorLockSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CentralDoorLockSwitchReplyDefaultTypeInternal() {}
  union {
    CentralDoorLockSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CentralDoorLockSwitchReplyDefaultTypeInternal _CentralDoorLockSwitchReply_default_instance_;
constexpr FrontRightDoorLockSwitchReply::FrontRightDoorLockSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontRightDoorLockSwitchReplyDefaultTypeInternal {
  constexpr FrontRightDoorLockSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontRightDoorLockSwitchReplyDefaultTypeInternal() {}
  union {
    FrontRightDoorLockSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontRightDoorLockSwitchReplyDefaultTypeInternal _FrontRightDoorLockSwitchReply_default_instance_;
constexpr FrontLeftDoorLockSwitchReply::FrontLeftDoorLockSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct FrontLeftDoorLockSwitchReplyDefaultTypeInternal {
  constexpr FrontLeftDoorLockSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrontLeftDoorLockSwitchReplyDefaultTypeInternal() {}
  union {
    FrontLeftDoorLockSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrontLeftDoorLockSwitchReplyDefaultTypeInternal _FrontLeftDoorLockSwitchReply_default_instance_;
constexpr RearRightDoorLockSwitchReply::RearRightDoorLockSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearRightDoorLockSwitchReplyDefaultTypeInternal {
  constexpr RearRightDoorLockSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearRightDoorLockSwitchReplyDefaultTypeInternal() {}
  union {
    RearRightDoorLockSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearRightDoorLockSwitchReplyDefaultTypeInternal _RearRightDoorLockSwitchReply_default_instance_;
constexpr RearLeftDoorLockSwitchReply::RearLeftDoorLockSwitchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct RearLeftDoorLockSwitchReplyDefaultTypeInternal {
  constexpr RearLeftDoorLockSwitchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RearLeftDoorLockSwitchReplyDefaultTypeInternal() {}
  union {
    RearLeftDoorLockSwitchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RearLeftDoorLockSwitchReplyDefaultTypeInternal _RearLeftDoorLockSwitchReply_default_instance_;
}  // namespace UnityAPI
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_UnityAPI_2eproto[98];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_UnityAPI_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_UnityAPI_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_UnityAPI_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::setDBRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::setDBRequest, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::setDBReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::setDBReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::getDBRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::getDBRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::getDBReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::getDBReply, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLowLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLowLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLowLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontHighLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontHighLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontHighLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontDaytimeLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontDaytimeLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontDaytimeLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BrakeLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BrakeLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BrakeLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReverseLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReverseLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReverseLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontFogLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontFogLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontFogLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearFogLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearFogLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearFogLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ClearanceLampRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ClearanceLampRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ClearanceLampRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftBlinkerLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftBlinkerLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftBlinkerLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightBlinkerLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightBlinkerLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightBlinkerLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftBlinkerLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftBlinkerLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftBlinkerLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightBlinkerLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightBlinkerLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightBlinkerLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontWiperRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontWiperRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontWiperRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearWiperRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearWiperRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearWiperRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::LeftSideMirrorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::LeftSideMirrorRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::LeftSideMirrorRequest, angle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RightSideMirrorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RightSideMirrorRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RightSideMirrorRequest, angle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::TrunkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::TrunkRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::TrunkRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SunRoofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SunRoofRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SunRoofRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsRequest, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsRequest, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsRequest, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsRequest, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SideMirrorSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SideMirrorSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SideMirrorSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::InstrumentLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::InstrumentLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::InstrumentLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::PassgenerRoomDomeLightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::PassgenerRoomDomeLightRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::PassgenerRoomDomeLightRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightDriverSideRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightDriverSideRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightDriverSideRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightPassgenerSideRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightPassgenerSideRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightPassgenerSideRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HornRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HornRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HornRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BuzzerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BuzzerRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BuzzerRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirCondTemperatureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirCondTemperatureRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirCondTemperatureRequest, temperature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerFanSpeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerFanSpeedRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerFanSpeedRequest, fanspeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HandlingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HandlingRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HandlingRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::CentralDoorLockSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::CentralDoorLockSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::CentralDoorLockSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorLockSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorLockSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorLockSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorLockSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorLockSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorLockSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorLockSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorLockSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorLockSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorLockSwitchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorLockSwitchRequest, setmode_),
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorLockSwitchRequest, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLowLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLowLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontHighLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontHighLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontDaytimeLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontDaytimeLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BrakeLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BrakeLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReverseLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReverseLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontFogLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontFogLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearFogLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearFogLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ClearanceLampReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ClearanceLampReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftBlinkerLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftBlinkerLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightBlinkerLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightBlinkerLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftBlinkerLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftBlinkerLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightBlinkerLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightBlinkerLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontWiperReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontWiperReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearWiperReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearWiperReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::LeftSideMirrorReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::LeftSideMirrorReply, angle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RightSideMirrorReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RightSideMirrorReply, angle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::TrunkReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::TrunkReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SunRoofReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SunRoofReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsReply, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsReply, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsReply, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsReply, highlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SideMirrorSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::SideMirrorSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::InstrumentLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::InstrumentLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::PassgenerRoomDomeLightReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::PassgenerRoomDomeLightReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightDriverSideReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightDriverSideReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightPassgenerSideReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::ReadingLightPassgenerSideReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightPowerWindowsSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftPowerWindowsSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightPowerWindowsSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftPowerWindowsSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HornReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HornReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BuzzerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::BuzzerReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirCondTemperatureReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirCondTemperatureReply, temperature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerFanSpeedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::AirConditionerFanSpeedReply, fanspeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HandlingReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::HandlingReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::CentralDoorLockSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::CentralDoorLockSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorLockSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontRightDoorLockSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorLockSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::FrontLeftDoorLockSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorLockSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearRightDoorLockSwitchReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorLockSwitchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::UnityAPI::RearLeftDoorLockSwitchReply, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::UnityAPI::setDBRequest)},
  { 6, -1, sizeof(::UnityAPI::setDBReply)},
  { 12, -1, sizeof(::UnityAPI::getDBRequest)},
  { 18, -1, sizeof(::UnityAPI::getDBReply)},
  { 24, -1, sizeof(::UnityAPI::FrontLowLightRequest)},
  { 31, -1, sizeof(::UnityAPI::FrontHighLightRequest)},
  { 38, -1, sizeof(::UnityAPI::RearLightRequest)},
  { 45, -1, sizeof(::UnityAPI::FrontDaytimeLightRequest)},
  { 52, -1, sizeof(::UnityAPI::BrakeLightRequest)},
  { 59, -1, sizeof(::UnityAPI::ReverseLightRequest)},
  { 66, -1, sizeof(::UnityAPI::FrontFogLightRequest)},
  { 73, -1, sizeof(::UnityAPI::RearFogLightRequest)},
  { 80, -1, sizeof(::UnityAPI::ClearanceLampRequest)},
  { 87, -1, sizeof(::UnityAPI::FrontLeftBlinkerLightRequest)},
  { 94, -1, sizeof(::UnityAPI::FrontRightBlinkerLightRequest)},
  { 101, -1, sizeof(::UnityAPI::RearLeftBlinkerLightRequest)},
  { 108, -1, sizeof(::UnityAPI::RearRightBlinkerLightRequest)},
  { 115, -1, sizeof(::UnityAPI::FrontWiperRequest)},
  { 122, -1, sizeof(::UnityAPI::RearWiperRequest)},
  { 129, -1, sizeof(::UnityAPI::LeftSideMirrorRequest)},
  { 136, -1, sizeof(::UnityAPI::RightSideMirrorRequest)},
  { 143, -1, sizeof(::UnityAPI::FrontRightDoorRequest)},
  { 150, -1, sizeof(::UnityAPI::FrontLeftDoorRequest)},
  { 157, -1, sizeof(::UnityAPI::RearRightDoorRequest)},
  { 164, -1, sizeof(::UnityAPI::RearLeftDoorRequest)},
  { 171, -1, sizeof(::UnityAPI::TrunkRequest)},
  { 178, -1, sizeof(::UnityAPI::SunRoofRequest)},
  { 185, -1, sizeof(::UnityAPI::FrontRightPowerWindowsRequest)},
  { 192, -1, sizeof(::UnityAPI::FrontLeftPowerWindowsRequest)},
  { 199, -1, sizeof(::UnityAPI::RearRightPowerWindowsRequest)},
  { 206, -1, sizeof(::UnityAPI::RearLeftPowerWindowsRequest)},
  { 213, -1, sizeof(::UnityAPI::SideMirrorSwitchRequest)},
  { 220, -1, sizeof(::UnityAPI::InstrumentLightRequest)},
  { 227, -1, sizeof(::UnityAPI::PassgenerRoomDomeLightRequest)},
  { 234, -1, sizeof(::UnityAPI::ReadingLightDriverSideRequest)},
  { 241, -1, sizeof(::UnityAPI::ReadingLightPassgenerSideRequest)},
  { 248, -1, sizeof(::UnityAPI::FrontRightPowerWindowsSwitchRequest)},
  { 255, -1, sizeof(::UnityAPI::FrontLeftPowerWindowsSwitchRequest)},
  { 262, -1, sizeof(::UnityAPI::RearRightPowerWindowsSwitchRequest)},
  { 269, -1, sizeof(::UnityAPI::RearLeftPowerWindowsSwitchRequest)},
  { 276, -1, sizeof(::UnityAPI::HornRequest)},
  { 283, -1, sizeof(::UnityAPI::BuzzerRequest)},
  { 290, -1, sizeof(::UnityAPI::AirConditionerRequest)},
  { 297, -1, sizeof(::UnityAPI::AirCondTemperatureRequest)},
  { 304, -1, sizeof(::UnityAPI::AirConditionerFanSpeedRequest)},
  { 311, -1, sizeof(::UnityAPI::HandlingRequest)},
  { 318, -1, sizeof(::UnityAPI::CentralDoorLockSwitchRequest)},
  { 325, -1, sizeof(::UnityAPI::FrontRightDoorLockSwitchRequest)},
  { 332, -1, sizeof(::UnityAPI::FrontLeftDoorLockSwitchRequest)},
  { 339, -1, sizeof(::UnityAPI::RearRightDoorLockSwitchRequest)},
  { 346, -1, sizeof(::UnityAPI::RearLeftDoorLockSwitchRequest)},
  { 353, -1, sizeof(::UnityAPI::FrontLowLightReply)},
  { 359, -1, sizeof(::UnityAPI::FrontHighLightReply)},
  { 365, -1, sizeof(::UnityAPI::RearLightReply)},
  { 371, -1, sizeof(::UnityAPI::FrontDaytimeLightReply)},
  { 377, -1, sizeof(::UnityAPI::BrakeLightReply)},
  { 383, -1, sizeof(::UnityAPI::ReverseLightReply)},
  { 389, -1, sizeof(::UnityAPI::FrontFogLightReply)},
  { 395, -1, sizeof(::UnityAPI::RearFogLightReply)},
  { 401, -1, sizeof(::UnityAPI::ClearanceLampReply)},
  { 407, -1, sizeof(::UnityAPI::FrontLeftBlinkerLightReply)},
  { 413, -1, sizeof(::UnityAPI::FrontRightBlinkerLightReply)},
  { 419, -1, sizeof(::UnityAPI::RearLeftBlinkerLightReply)},
  { 425, -1, sizeof(::UnityAPI::RearRightBlinkerLightReply)},
  { 431, -1, sizeof(::UnityAPI::FrontWiperReply)},
  { 437, -1, sizeof(::UnityAPI::RearWiperReply)},
  { 443, -1, sizeof(::UnityAPI::LeftSideMirrorReply)},
  { 449, -1, sizeof(::UnityAPI::RightSideMirrorReply)},
  { 455, -1, sizeof(::UnityAPI::FrontRightDoorReply)},
  { 461, -1, sizeof(::UnityAPI::FrontLeftDoorReply)},
  { 467, -1, sizeof(::UnityAPI::RearRightDoorReply)},
  { 473, -1, sizeof(::UnityAPI::RearLeftDoorReply)},
  { 479, -1, sizeof(::UnityAPI::TrunkReply)},
  { 485, -1, sizeof(::UnityAPI::SunRoofReply)},
  { 491, -1, sizeof(::UnityAPI::FrontRightPowerWindowsReply)},
  { 497, -1, sizeof(::UnityAPI::FrontLeftPowerWindowsReply)},
  { 503, -1, sizeof(::UnityAPI::RearRightPowerWindowsReply)},
  { 509, -1, sizeof(::UnityAPI::RearLeftPowerWindowsReply)},
  { 515, -1, sizeof(::UnityAPI::SideMirrorSwitchReply)},
  { 521, -1, sizeof(::UnityAPI::InstrumentLightReply)},
  { 527, -1, sizeof(::UnityAPI::PassgenerRoomDomeLightReply)},
  { 533, -1, sizeof(::UnityAPI::ReadingLightDriverSideReply)},
  { 539, -1, sizeof(::UnityAPI::ReadingLightPassgenerSideReply)},
  { 545, -1, sizeof(::UnityAPI::FrontRightPowerWindowsSwitchReply)},
  { 551, -1, sizeof(::UnityAPI::FrontLeftPowerWindowsSwitchReply)},
  { 557, -1, sizeof(::UnityAPI::RearRightPowerWindowsSwitchReply)},
  { 563, -1, sizeof(::UnityAPI::RearLeftPowerWindowsSwitchReply)},
  { 569, -1, sizeof(::UnityAPI::HornReply)},
  { 575, -1, sizeof(::UnityAPI::BuzzerReply)},
  { 581, -1, sizeof(::UnityAPI::AirConditionerReply)},
  { 587, -1, sizeof(::UnityAPI::AirCondTemperatureReply)},
  { 593, -1, sizeof(::UnityAPI::AirConditionerFanSpeedReply)},
  { 599, -1, sizeof(::UnityAPI::HandlingReply)},
  { 605, -1, sizeof(::UnityAPI::CentralDoorLockSwitchReply)},
  { 611, -1, sizeof(::UnityAPI::FrontRightDoorLockSwitchReply)},
  { 617, -1, sizeof(::UnityAPI::FrontLeftDoorLockSwitchReply)},
  { 623, -1, sizeof(::UnityAPI::RearRightDoorLockSwitchReply)},
  { 629, -1, sizeof(::UnityAPI::RearLeftDoorLockSwitchReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_setDBRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_setDBReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_getDBRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_getDBReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLowLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontHighLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontDaytimeLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_BrakeLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ReverseLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontFogLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearFogLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ClearanceLampRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftBlinkerLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightBlinkerLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftBlinkerLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightBlinkerLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontWiperRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearWiperRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_LeftSideMirrorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RightSideMirrorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightDoorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftDoorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightDoorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftDoorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_TrunkRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_SunRoofRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightPowerWindowsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftPowerWindowsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightPowerWindowsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftPowerWindowsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_SideMirrorSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_InstrumentLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_PassgenerRoomDomeLightRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ReadingLightDriverSideRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ReadingLightPassgenerSideRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightPowerWindowsSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftPowerWindowsSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightPowerWindowsSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftPowerWindowsSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_HornRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_BuzzerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_AirConditionerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_AirCondTemperatureRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_AirConditionerFanSpeedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_HandlingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_CentralDoorLockSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightDoorLockSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftDoorLockSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightDoorLockSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftDoorLockSwitchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLowLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontHighLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontDaytimeLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_BrakeLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ReverseLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontFogLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearFogLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ClearanceLampReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftBlinkerLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightBlinkerLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftBlinkerLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightBlinkerLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontWiperReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearWiperReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_LeftSideMirrorReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RightSideMirrorReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightDoorReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftDoorReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightDoorReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftDoorReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_TrunkReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_SunRoofReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightPowerWindowsReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftPowerWindowsReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightPowerWindowsReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftPowerWindowsReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_SideMirrorSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_InstrumentLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_PassgenerRoomDomeLightReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ReadingLightDriverSideReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_ReadingLightPassgenerSideReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightPowerWindowsSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftPowerWindowsSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightPowerWindowsSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftPowerWindowsSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_HornReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_BuzzerReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_AirConditionerReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_AirCondTemperatureReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_AirConditionerFanSpeedReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_HandlingReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_CentralDoorLockSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontRightDoorLockSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_FrontLeftDoorLockSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearRightDoorLockSwitchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::UnityAPI::_RearLeftDoorLockSwitchReply_default_instance_),
};

const char descriptor_table_protodef_UnityAPI_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016UnityAPI.proto\022\010UnityAPI\"\037\n\014setDBReque"
  "st\022\017\n\007message\030\001 \001(\t\"\034\n\nsetDBReply\022\016\n\006sta"
  "tus\030\001 \001(\010\"\034\n\014getDBRequest\022\014\n\004name\030\001 \001(\t\""
  "\035\n\ngetDBReply\022\017\n\007message\030\001 \001(\t\"5\n\024FrontL"
  "owLightRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030"
  "\002 \001(\010\"6\n\025FrontHighLightRequest\022\017\n\007setMod"
  "e\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"1\n\020RearLightReques"
  "t\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"9\n\030Fron"
  "tDaytimeLightRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n"
  "\004flag\030\002 \001(\010\"2\n\021BrakeLightRequest\022\017\n\007setM"
  "ode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"4\n\023ReverseLightR"
  "equest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"5\n"
  "\024FrontFogLightRequest\022\017\n\007setMode\030\001 \001(\010\022\014"
  "\n\004flag\030\002 \001(\010\"4\n\023RearFogLightRequest\022\017\n\007s"
  "etMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"5\n\024ClearanceL"
  "ampRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001("
  "\010\"=\n\034FrontLeftBlinkerLightRequest\022\017\n\007set"
  "Mode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\">\n\035FrontRightBl"
  "inkerLightRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004fl"
  "ag\030\002 \001(\010\"<\n\033RearLeftBlinkerLightRequest\022"
  "\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"=\n\034RearRi"
  "ghtBlinkerLightRequest\022\017\n\007setMode\030\001 \001(\010\022"
  "\014\n\004flag\030\002 \001(\010\"2\n\021FrontWiperRequest\022\017\n\007se"
  "tMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"1\n\020RearWiperRe"
  "quest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"7\n\025"
  "LeftSideMirrorRequest\022\017\n\007setMode\030\001 \001(\010\022\r"
  "\n\005angle\030\002 \001(\001\"8\n\026RightSideMirrorRequest\022"
  "\017\n\007setMode\030\001 \001(\010\022\r\n\005angle\030\002 \001(\001\"6\n\025Front"
  "RightDoorRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004fla"
  "g\030\002 \001(\010\"5\n\024FrontLeftDoorRequest\022\017\n\007setMo"
  "de\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"5\n\024RearRightDoorR"
  "equest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"4\n"
  "\023RearLeftDoorRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n"
  "\004flag\030\002 \001(\010\"-\n\014TrunkRequest\022\017\n\007setMode\030\001"
  " \001(\010\022\014\n\004flag\030\002 \001(\010\"/\n\016SunRoofRequest\022\017\n\007"
  "setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"C\n\035FrontRigh"
  "tPowerWindowsRequest\022\017\n\007setMode\030\001 \001(\010\022\021\n"
  "\thighLevel\030\002 \001(\001\"B\n\034FrontLeftPowerWindow"
  "sRequest\022\017\n\007setMode\030\001 \001(\010\022\021\n\thighLevel\030\002"
  " \001(\001\"B\n\034RearRightPowerWindowsRequest\022\017\n\007"
  "setMode\030\001 \001(\010\022\021\n\thighLevel\030\002 \001(\001\"A\n\033Rear"
  "LeftPowerWindowsRequest\022\017\n\007setMode\030\001 \001(\010"
  "\022\021\n\thighLevel\030\002 \001(\001\"8\n\027SideMirrorSwitchR"
  "equest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"7\n"
  "\026InstrumentLightRequest\022\017\n\007setMode\030\001 \001(\010"
  "\022\014\n\004flag\030\002 \001(\010\">\n\035PassgenerRoomDomeLight"
  "Request\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\">"
  "\n\035ReadingLightDriverSideRequest\022\017\n\007setMo"
  "de\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"A\n ReadingLightPa"
  "ssgenerSideRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004f"
  "lag\030\002 \001(\010\"D\n#FrontRightPowerWindowsSwitc"
  "hRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\""
  "C\n\"FrontLeftPowerWindowsSwitchRequest\022\017\n"
  "\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"C\n\"RearRigh"
  "tPowerWindowsSwitchRequest\022\017\n\007setMode\030\001 "
  "\001(\010\022\014\n\004flag\030\002 \001(\010\"B\n!RearLeftPowerWindow"
  "sSwitchRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030"
  "\002 \001(\010\",\n\013HornRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n"
  "\004flag\030\002 \001(\010\".\n\rBuzzerRequest\022\017\n\007setMode\030"
  "\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"6\n\025AirConditionerReq"
  "uest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"A\n\031A"
  "irCondTemperatureRequest\022\017\n\007setMode\030\001 \001("
  "\010\022\023\n\013temperature\030\002 \001(\001\"B\n\035AirConditioner"
  "FanSpeedRequest\022\017\n\007setMode\030\001 \001(\010\022\020\n\010fanS"
  "peed\030\002 \001(\005\"0\n\017HandlingRequest\022\017\n\007setMode"
  "\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"=\n\034CentralDoorLockS"
  "witchRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 "
  "\001(\010\"@\n\037FrontRightDoorLockSwitchRequest\022\017"
  "\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"\?\n\036FrontLe"
  "ftDoorLockSwitchRequest\022\017\n\007setMode\030\001 \001(\010"
  "\022\014\n\004flag\030\002 \001(\010\"\?\n\036RearRightDoorLockSwitc"
  "hRequest\022\017\n\007setMode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\""
  ">\n\035RearLeftDoorLockSwitchRequest\022\017\n\007setM"
  "ode\030\001 \001(\010\022\014\n\004flag\030\002 \001(\010\"$\n\022FrontLowLight"
  "Reply\022\016\n\006status\030\001 \001(\010\"%\n\023FrontHighLightR"
  "eply\022\016\n\006status\030\001 \001(\010\" \n\016RearLightReply\022\016"
  "\n\006status\030\001 \001(\010\"(\n\026FrontDaytimeLightReply"
  "\022\016\n\006status\030\001 \001(\010\"!\n\017BrakeLightReply\022\016\n\006s"
  "tatus\030\001 \001(\010\"#\n\021ReverseLightReply\022\016\n\006stat"
  "us\030\001 \001(\010\"$\n\022FrontFogLightReply\022\016\n\006status"
  "\030\001 \001(\010\"#\n\021RearFogLightReply\022\016\n\006status\030\001 "
  "\001(\010\"$\n\022ClearanceLampReply\022\016\n\006status\030\001 \001("
  "\010\",\n\032FrontLeftBlinkerLightReply\022\016\n\006statu"
  "s\030\001 \001(\010\"-\n\033FrontRightBlinkerLightReply\022\016"
  "\n\006status\030\001 \001(\010\"+\n\031RearLeftBlinkerLightRe"
  "ply\022\016\n\006status\030\001 \001(\010\",\n\032RearRightBlinkerL"
  "ightReply\022\016\n\006status\030\001 \001(\010\"!\n\017FrontWiperR"
  "eply\022\016\n\006status\030\001 \001(\010\" \n\016RearWiperReply\022\016"
  "\n\006status\030\001 \001(\010\"$\n\023LeftSideMirrorReply\022\r\n"
  "\005angle\030\001 \001(\001\"%\n\024RightSideMirrorReply\022\r\n\005"
  "angle\030\001 \001(\001\"%\n\023FrontRightDoorReply\022\016\n\006st"
  "atus\030\001 \001(\010\"$\n\022FrontLeftDoorReply\022\016\n\006stat"
  "us\030\001 \001(\010\"$\n\022RearRightDoorReply\022\016\n\006status"
  "\030\001 \001(\010\"#\n\021RearLeftDoorReply\022\016\n\006status\030\001 "
  "\001(\010\"\034\n\nTrunkReply\022\016\n\006status\030\001 \001(\010\"\036\n\014Sun"
  "RoofReply\022\016\n\006status\030\001 \001(\010\"0\n\033FrontRightP"
  "owerWindowsReply\022\021\n\thighLevel\030\001 \001(\001\"/\n\032F"
  "rontLeftPowerWindowsReply\022\021\n\thighLevel\030\001"
  " \001(\001\"/\n\032RearRightPowerWindowsReply\022\021\n\thi"
  "ghLevel\030\001 \001(\001\".\n\031RearLeftPowerWindowsRep"
  "ly\022\021\n\thighLevel\030\001 \001(\001\"\'\n\025SideMirrorSwitc"
  "hReply\022\016\n\006status\030\001 \001(\010\"&\n\024InstrumentLigh"
  "tReply\022\016\n\006status\030\001 \001(\010\"-\n\033PassgenerRoomD"
  "omeLightReply\022\016\n\006status\030\001 \001(\010\"-\n\033Reading"
  "LightDriverSideReply\022\016\n\006status\030\001 \001(\010\"0\n\036"
  "ReadingLightPassgenerSideReply\022\016\n\006status"
  "\030\001 \001(\010\"3\n!FrontRightPowerWindowsSwitchRe"
  "ply\022\016\n\006status\030\001 \001(\010\"2\n FrontLeftPowerWin"
  "dowsSwitchReply\022\016\n\006status\030\001 \001(\010\"2\n RearR"
  "ightPowerWindowsSwitchReply\022\016\n\006status\030\001 "
  "\001(\010\"1\n\037RearLeftPowerWindowsSwitchReply\022\016"
  "\n\006status\030\001 \001(\010\"\033\n\tHornReply\022\016\n\006status\030\001 "
  "\001(\010\"\035\n\013BuzzerReply\022\016\n\006status\030\001 \001(\010\"%\n\023Ai"
  "rConditionerReply\022\016\n\006status\030\001 \001(\010\".\n\027Air"
  "CondTemperatureReply\022\023\n\013temperature\030\001 \001("
  "\001\"/\n\033AirConditionerFanSpeedReply\022\020\n\010fanS"
  "peed\030\001 \001(\005\"\037\n\rHandlingReply\022\016\n\006status\030\001 "
  "\001(\010\",\n\032CentralDoorLockSwitchReply\022\016\n\006sta"
  "tus\030\001 \001(\010\"/\n\035FrontRightDoorLockSwitchRep"
  "ly\022\016\n\006status\030\001 \001(\010\".\n\034FrontLeftDoorLockS"
  "witchReply\022\016\n\006status\030\001 \001(\010\".\n\034RearRightD"
  "oorLockSwitchReply\022\016\n\006status\030\001 \001(\010\"-\n\033Re"
  "arLeftDoorLockSwitchReply\022\016\n\006status\030\001 \001("
  "\0102\330%\n\017UnityAPIService\022V\n\024FrontLowLightCo"
  "ntrol\022\036.UnityAPI.FrontLowLightRequest\032\034."
  "UnityAPI.FrontLowLightReply\"\000\022Y\n\025FrontHi"
  "ghLightControl\022\037.UnityAPI.FrontHighLight"
  "Request\032\035.UnityAPI.FrontHighLightReply\"\000"
  "\022J\n\020RearLightControl\022\032.UnityAPI.RearLigh"
  "tRequest\032\030.UnityAPI.RearLightReply\"\000\022b\n\030"
  "FrontDaytimeLightControl\022\".UnityAPI.Fron"
  "tDaytimeLightRequest\032 .UnityAPI.FrontDay"
  "timeLightReply\"\000\022M\n\021BrakeLightControl\022\033."
  "UnityAPI.BrakeLightRequest\032\031.UnityAPI.Br"
  "akeLightReply\"\000\022S\n\023ReverseLightControl\022\035"
  ".UnityAPI.ReverseLightRequest\032\033.UnityAPI"
  ".ReverseLightReply\"\000\022V\n\024FrontFogLightCon"
  "trol\022\036.UnityAPI.FrontFogLightRequest\032\034.U"
  "nityAPI.FrontFogLightReply\"\000\022S\n\023RearFogL"
  "ightControl\022\035.UnityAPI.RearFogLightReque"
  "st\032\033.UnityAPI.RearFogLightReply\"\000\022V\n\024Cle"
  "aranceLampControl\022\036.UnityAPI.ClearanceLa"
  "mpRequest\032\034.UnityAPI.ClearanceLampReply\""
  "\000\022n\n\034FrontLeftBlinkerLightControl\022&.Unit"
  "yAPI.FrontLeftBlinkerLightRequest\032$.Unit"
  "yAPI.FrontLeftBlinkerLightReply\"\000\022q\n\035Fro"
  "ntRightBlinkerLightControl\022\'.UnityAPI.Fr"
  "ontRightBlinkerLightRequest\032%.UnityAPI.F"
  "rontRightBlinkerLightReply\"\000\022k\n\033RearLeft"
  "BlinkerLightControl\022%.UnityAPI.RearLeftB"
  "linkerLightRequest\032#.UnityAPI.RearLeftBl"
  "inkerLightReply\"\000\022n\n\034RearRightBlinkerLig"
  "htControl\022&.UnityAPI.RearRightBlinkerLig"
  "htRequest\032$.UnityAPI.RearRightBlinkerLig"
  "htReply\"\000\022M\n\021FrontWiperControl\022\033.UnityAP"
  "I.FrontWiperRequest\032\031.UnityAPI.FrontWipe"
  "rReply\"\000\022J\n\020RearWiperControl\022\032.UnityAPI."
  "RearWiperRequest\032\030.UnityAPI.RearWiperRep"
  "ly\"\000\022Y\n\025LeftSideMirrorControl\022\037.UnityAPI"
  ".LeftSideMirrorRequest\032\035.UnityAPI.LeftSi"
  "deMirrorReply\"\000\022\\\n\026RightSideMirrorContro"
  "l\022 .UnityAPI.RightSideMirrorRequest\032\036.Un"
  "ityAPI.RightSideMirrorReply\"\000\022Y\n\025FrontRi"
  "ghtDoorControl\022\037.UnityAPI.FrontRightDoor"
  "Request\032\035.UnityAPI.FrontRightDoorReply\"\000"
  "\022V\n\024FrontLeftDoorControl\022\036.UnityAPI.Fron"
  "tLeftDoorRequest\032\034.UnityAPI.FrontLeftDoo"
  "rReply\"\000\022V\n\024RearRightDoorControl\022\036.Unity"
  "API.RearRightDoorRequest\032\034.UnityAPI.Rear"
  "RightDoorReply\"\000\022S\n\023RearLeftDoorControl\022"
  "\035.UnityAPI.RearLeftDoorRequest\032\033.UnityAP"
  "I.RearLeftDoorReply\"\000\022>\n\014TrunkControl\022\026."
  "UnityAPI.TrunkRequest\032\024.UnityAPI.TrunkRe"
  "ply\"\000\022D\n\016SunRoofControl\022\030.UnityAPI.SunRo"
  "ofRequest\032\026.UnityAPI.SunRoofReply\"\000\022q\n\035F"
  "rontRightPowerWindowsControl\022\'.UnityAPI."
  "FrontRightPowerWindowsRequest\032%.UnityAPI"
  ".FrontRightPowerWindowsReply\"\000\022n\n\034FrontL"
  "eftPowerWindowsControl\022&.UnityAPI.FrontL"
  "eftPowerWindowsRequest\032$.UnityAPI.FrontL"
  "eftPowerWindowsReply\"\000\022n\n\034RearRightPower"
  "WindowsControl\022&.UnityAPI.RearRightPower"
  "WindowsRequest\032$.UnityAPI.RearRightPower"
  "WindowsReply\"\000\022k\n\033RearLeftPowerWindowsCo"
  "ntrol\022%.UnityAPI.RearLeftPowerWindowsReq"
  "uest\032#.UnityAPI.RearLeftPowerWindowsRepl"
  "y\"\000\022_\n\027SideMirrorSwitchControl\022!.UnityAP"
  "I.SideMirrorSwitchRequest\032\037.UnityAPI.Sid"
  "eMirrorSwitchReply\"\000\022\\\n\026InstrumentLightC"
  "ontrol\022 .UnityAPI.InstrumentLightRequest"
  "\032\036.UnityAPI.InstrumentLightReply\"\000\022q\n\035Pa"
  "ssgenerRoomDomeLightControl\022\'.UnityAPI.P"
  "assgenerRoomDomeLightRequest\032%.UnityAPI."
  "PassgenerRoomDomeLightReply\"\000\022q\n\035Reading"
  "LightDriverSideControl\022\'.UnityAPI.Readin"
  "gLightDriverSideRequest\032%.UnityAPI.Readi"
  "ngLightDriverSideReply\"\000\022z\n ReadingLight"
  "PassgenerSideControl\022*.UnityAPI.ReadingL"
  "ightPassgenerSideRequest\032(.UnityAPI.Read"
  "ingLightPassgenerSideReply\"\000\022\203\001\n#FrontRi"
  "ghtPowerWindowsSwitchControl\022-.UnityAPI."
  "FrontRightPowerWindowsSwitchRequest\032+.Un"
  "ityAPI.FrontRightPowerWindowsSwitchReply"
  "\"\000\022\200\001\n\"FrontLeftPowerWindowsSwitchContro"
  "l\022,.UnityAPI.FrontLeftPowerWindowsSwitch"
  "Request\032*.UnityAPI.FrontLeftPowerWindows"
  "SwitchReply\"\000\022\200\001\n\"RearRightPowerWindowsS"
  "witchControl\022,.UnityAPI.RearRightPowerWi"
  "ndowsSwitchRequest\032*.UnityAPI.RearRightP"
  "owerWindowsSwitchReply\"\000\022}\n!RearLeftPowe"
  "rWindowsSwitchControl\022+.UnityAPI.RearLef"
  "tPowerWindowsSwitchRequest\032).UnityAPI.Re"
  "arLeftPowerWindowsSwitchReply\"\000\022;\n\013HornC"
  "ontrol\022\025.UnityAPI.HornRequest\032\023.UnityAPI"
  ".HornReply\"\000\022A\n\rBuzzerControl\022\027.UnityAPI"
  ".BuzzerRequest\032\025.UnityAPI.BuzzerReply\"\000\022"
  "Y\n\025AirConditionerControl\022\037.UnityAPI.AirC"
  "onditionerRequest\032\035.UnityAPI.AirConditio"
  "nerReply\"\000\022l\n AirConditionerTemperatureC"
  "ontrol\022#.UnityAPI.AirCondTemperatureRequ"
  "est\032!.UnityAPI.AirCondTemperatureReply\"\000"
  "\022q\n\035AirConditionerFanSpeedControl\022\'.Unit"
  "yAPI.AirConditionerFanSpeedRequest\032%.Uni"
  "tyAPI.AirConditionerFanSpeedReply\"\000\022G\n\017H"
  "andlingControl\022\031.UnityAPI.HandlingReques"
  "t\032\027.UnityAPI.HandlingReply\"\000\022n\n\034CentralD"
  "oorLockSwitchControl\022&.UnityAPI.CentralD"
  "oorLockSwitchRequest\032$.UnityAPI.CentralD"
  "oorLockSwitchReply\"\000\022w\n\037FrontRightDoorLo"
  "ckSwitchControl\022).UnityAPI.FrontRightDoo"
  "rLockSwitchRequest\032\'.UnityAPI.FrontRight"
  "DoorLockSwitchReply\"\000\022t\n\036FrontLeftDoorLo"
  "ckSwitchControl\022(.UnityAPI.FrontLeftDoor"
  "LockSwitchRequest\032&.UnityAPI.FrontLeftDo"
  "orLockSwitchReply\"\000\022t\n\036RearRightDoorLock"
  "SwitchControl\022(.UnityAPI.RearRightDoorLo"
  "ckSwitchRequest\032&.UnityAPI.RearRightDoor"
  "LockSwitchReply\"\000\022q\n\035RearLeftDoorLockSwi"
  "tchControl\022\'.UnityAPI.RearLeftDoorLockSw"
  "itchRequest\032%.UnityAPI.RearLeftDoorLockS"
  "witchReply\"\000\022>\n\014get_database\022\026.UnityAPI."
  "getDBRequest\032\024.UnityAPI.getDBReply\"\000\022F\n\024"
  "send_update_database\022\026.UnityAPI.setDBReq"
  "uest\032\024.UnityAPI.setDBReply\"\000B3\n\031io.grpc."
  "examples.UnityAPIB\rUnityAPIProtoP\001\242\002\004UAP"
  "Ib\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_UnityAPI_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_UnityAPI_2eproto = {
  false, false, 9809, descriptor_table_protodef_UnityAPI_2eproto, "UnityAPI.proto", 
  &descriptor_table_UnityAPI_2eproto_once, nullptr, 0, 98,
  schemas, file_default_instances, TableStruct_UnityAPI_2eproto::offsets,
  file_level_metadata_UnityAPI_2eproto, file_level_enum_descriptors_UnityAPI_2eproto, file_level_service_descriptors_UnityAPI_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_UnityAPI_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_UnityAPI_2eproto);
  return descriptor_table_UnityAPI_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_UnityAPI_2eproto(&descriptor_table_UnityAPI_2eproto);
namespace UnityAPI {

// ===================================================================

class setDBRequest::_Internal {
 public:
};

setDBRequest::setDBRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.setDBRequest)
}
setDBRequest::setDBRequest(const setDBRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:UnityAPI.setDBRequest)
}

void setDBRequest::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setDBRequest::~setDBRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.setDBRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDBRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setDBRequest::ArenaDtor(void* object) {
  setDBRequest* _this = reinterpret_cast< setDBRequest* >(object);
  (void)_this;
}
void setDBRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDBRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDBRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.setDBRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDBRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "UnityAPI.setDBRequest.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDBRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.setDBRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "UnityAPI.setDBRequest.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.setDBRequest)
  return target;
}

size_t setDBRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.setDBRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDBRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.setDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setDBRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDBRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.setDBRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.setDBRequest)
    MergeFrom(*source);
  }
}

void setDBRequest::MergeFrom(const setDBRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.setDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void setDBRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.setDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDBRequest::CopyFrom(const setDBRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.setDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDBRequest::IsInitialized() const {
  return true;
}

void setDBRequest::InternalSwap(setDBRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setDBRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDBReply::_Internal {
 public:
};

setDBReply::setDBReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.setDBReply)
}
setDBReply::setDBReply(const setDBReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.setDBReply)
}

void setDBReply::SharedCtor() {
status_ = false;
}

setDBReply::~setDBReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.setDBReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDBReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setDBReply::ArenaDtor(void* object) {
  setDBReply* _this = reinterpret_cast< setDBReply* >(object);
  (void)_this;
}
void setDBReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDBReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDBReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.setDBReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDBReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDBReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.setDBReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.setDBReply)
  return target;
}

size_t setDBReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.setDBReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDBReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.setDBReply)
  GOOGLE_DCHECK_NE(&from, this);
  const setDBReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDBReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.setDBReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.setDBReply)
    MergeFrom(*source);
  }
}

void setDBReply::MergeFrom(const setDBReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.setDBReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void setDBReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.setDBReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDBReply::CopyFrom(const setDBReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.setDBReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDBReply::IsInitialized() const {
  return true;
}

void setDBReply::InternalSwap(setDBReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setDBReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDBRequest::_Internal {
 public:
};

getDBRequest::getDBRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.getDBRequest)
}
getDBRequest::getDBRequest(const getDBRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:UnityAPI.getDBRequest)
}

void getDBRequest::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getDBRequest::~getDBRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.getDBRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDBRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getDBRequest::ArenaDtor(void* object) {
  getDBRequest* _this = reinterpret_cast< getDBRequest* >(object);
  (void)_this;
}
void getDBRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDBRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDBRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.getDBRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDBRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "UnityAPI.getDBRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDBRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.getDBRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "UnityAPI.getDBRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.getDBRequest)
  return target;
}

size_t getDBRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.getDBRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDBRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.getDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getDBRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDBRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.getDBRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.getDBRequest)
    MergeFrom(*source);
  }
}

void getDBRequest::MergeFrom(const getDBRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.getDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void getDBRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.getDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDBRequest::CopyFrom(const getDBRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.getDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDBRequest::IsInitialized() const {
  return true;
}

void getDBRequest::InternalSwap(getDBRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getDBRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDBReply::_Internal {
 public:
};

getDBReply::getDBReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.getDBReply)
}
getDBReply::getDBReply(const getDBReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:UnityAPI.getDBReply)
}

void getDBReply::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getDBReply::~getDBReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.getDBReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDBReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getDBReply::ArenaDtor(void* object) {
  getDBReply* _this = reinterpret_cast< getDBReply* >(object);
  (void)_this;
}
void getDBReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDBReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDBReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.getDBReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDBReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "UnityAPI.getDBReply.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDBReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.getDBReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "UnityAPI.getDBReply.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.getDBReply)
  return target;
}

size_t getDBReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.getDBReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDBReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.getDBReply)
  GOOGLE_DCHECK_NE(&from, this);
  const getDBReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDBReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.getDBReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.getDBReply)
    MergeFrom(*source);
  }
}

void getDBReply::MergeFrom(const getDBReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.getDBReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void getDBReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.getDBReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDBReply::CopyFrom(const getDBReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.getDBReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDBReply::IsInitialized() const {
  return true;
}

void getDBReply::InternalSwap(getDBReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getDBReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLowLightRequest::_Internal {
 public:
};

FrontLowLightRequest::FrontLowLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLowLightRequest)
}
FrontLowLightRequest::FrontLowLightRequest(const FrontLowLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLowLightRequest)
}

void FrontLowLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontLowLightRequest::~FrontLowLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLowLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLowLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLowLightRequest::ArenaDtor(void* object) {
  FrontLowLightRequest* _this = reinterpret_cast< FrontLowLightRequest* >(object);
  (void)_this;
}
void FrontLowLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLowLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLowLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLowLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLowLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLowLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLowLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLowLightRequest)
  return target;
}

size_t FrontLowLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLowLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLowLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLowLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLowLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLowLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLowLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLowLightRequest)
    MergeFrom(*source);
  }
}

void FrontLowLightRequest::MergeFrom(const FrontLowLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLowLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontLowLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLowLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLowLightRequest::CopyFrom(const FrontLowLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLowLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLowLightRequest::IsInitialized() const {
  return true;
}

void FrontLowLightRequest::InternalSwap(FrontLowLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontLowLightRequest, flag_)
      + sizeof(FrontLowLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontLowLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLowLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontHighLightRequest::_Internal {
 public:
};

FrontHighLightRequest::FrontHighLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontHighLightRequest)
}
FrontHighLightRequest::FrontHighLightRequest(const FrontHighLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontHighLightRequest)
}

void FrontHighLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontHighLightRequest::~FrontHighLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontHighLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontHighLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontHighLightRequest::ArenaDtor(void* object) {
  FrontHighLightRequest* _this = reinterpret_cast< FrontHighLightRequest* >(object);
  (void)_this;
}
void FrontHighLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontHighLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontHighLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontHighLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontHighLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontHighLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontHighLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontHighLightRequest)
  return target;
}

size_t FrontHighLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontHighLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontHighLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontHighLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontHighLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontHighLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontHighLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontHighLightRequest)
    MergeFrom(*source);
  }
}

void FrontHighLightRequest::MergeFrom(const FrontHighLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontHighLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontHighLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontHighLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontHighLightRequest::CopyFrom(const FrontHighLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontHighLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontHighLightRequest::IsInitialized() const {
  return true;
}

void FrontHighLightRequest::InternalSwap(FrontHighLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontHighLightRequest, flag_)
      + sizeof(FrontHighLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontHighLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontHighLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLightRequest::_Internal {
 public:
};

RearLightRequest::RearLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLightRequest)
}
RearLightRequest::RearLightRequest(const RearLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLightRequest)
}

void RearLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearLightRequest::~RearLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLightRequest::ArenaDtor(void* object) {
  RearLightRequest* _this = reinterpret_cast< RearLightRequest* >(object);
  (void)_this;
}
void RearLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLightRequest)
  return target;
}

size_t RearLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLightRequest)
    MergeFrom(*source);
  }
}

void RearLightRequest::MergeFrom(const RearLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLightRequest::CopyFrom(const RearLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLightRequest::IsInitialized() const {
  return true;
}

void RearLightRequest::InternalSwap(RearLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearLightRequest, flag_)
      + sizeof(RearLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontDaytimeLightRequest::_Internal {
 public:
};

FrontDaytimeLightRequest::FrontDaytimeLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontDaytimeLightRequest)
}
FrontDaytimeLightRequest::FrontDaytimeLightRequest(const FrontDaytimeLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontDaytimeLightRequest)
}

void FrontDaytimeLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontDaytimeLightRequest::~FrontDaytimeLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontDaytimeLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontDaytimeLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontDaytimeLightRequest::ArenaDtor(void* object) {
  FrontDaytimeLightRequest* _this = reinterpret_cast< FrontDaytimeLightRequest* >(object);
  (void)_this;
}
void FrontDaytimeLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontDaytimeLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontDaytimeLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontDaytimeLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontDaytimeLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontDaytimeLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontDaytimeLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontDaytimeLightRequest)
  return target;
}

size_t FrontDaytimeLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontDaytimeLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontDaytimeLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontDaytimeLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontDaytimeLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontDaytimeLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontDaytimeLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontDaytimeLightRequest)
    MergeFrom(*source);
  }
}

void FrontDaytimeLightRequest::MergeFrom(const FrontDaytimeLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontDaytimeLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontDaytimeLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontDaytimeLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontDaytimeLightRequest::CopyFrom(const FrontDaytimeLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontDaytimeLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontDaytimeLightRequest::IsInitialized() const {
  return true;
}

void FrontDaytimeLightRequest::InternalSwap(FrontDaytimeLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontDaytimeLightRequest, flag_)
      + sizeof(FrontDaytimeLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontDaytimeLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontDaytimeLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BrakeLightRequest::_Internal {
 public:
};

BrakeLightRequest::BrakeLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.BrakeLightRequest)
}
BrakeLightRequest::BrakeLightRequest(const BrakeLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.BrakeLightRequest)
}

void BrakeLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

BrakeLightRequest::~BrakeLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.BrakeLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BrakeLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BrakeLightRequest::ArenaDtor(void* object) {
  BrakeLightRequest* _this = reinterpret_cast< BrakeLightRequest* >(object);
  (void)_this;
}
void BrakeLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BrakeLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BrakeLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.BrakeLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BrakeLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BrakeLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.BrakeLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.BrakeLightRequest)
  return target;
}

size_t BrakeLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.BrakeLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BrakeLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.BrakeLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BrakeLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BrakeLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.BrakeLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.BrakeLightRequest)
    MergeFrom(*source);
  }
}

void BrakeLightRequest::MergeFrom(const BrakeLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.BrakeLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void BrakeLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.BrakeLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrakeLightRequest::CopyFrom(const BrakeLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.BrakeLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrakeLightRequest::IsInitialized() const {
  return true;
}

void BrakeLightRequest::InternalSwap(BrakeLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BrakeLightRequest, flag_)
      + sizeof(BrakeLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(BrakeLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BrakeLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReverseLightRequest::_Internal {
 public:
};

ReverseLightRequest::ReverseLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ReverseLightRequest)
}
ReverseLightRequest::ReverseLightRequest(const ReverseLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ReverseLightRequest)
}

void ReverseLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

ReverseLightRequest::~ReverseLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.ReverseLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReverseLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReverseLightRequest::ArenaDtor(void* object) {
  ReverseLightRequest* _this = reinterpret_cast< ReverseLightRequest* >(object);
  (void)_this;
}
void ReverseLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReverseLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReverseLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ReverseLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReverseLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReverseLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ReverseLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ReverseLightRequest)
  return target;
}

size_t ReverseLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ReverseLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReverseLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ReverseLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReverseLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReverseLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ReverseLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ReverseLightRequest)
    MergeFrom(*source);
  }
}

void ReverseLightRequest::MergeFrom(const ReverseLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ReverseLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void ReverseLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ReverseLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReverseLightRequest::CopyFrom(const ReverseLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ReverseLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReverseLightRequest::IsInitialized() const {
  return true;
}

void ReverseLightRequest::InternalSwap(ReverseLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReverseLightRequest, flag_)
      + sizeof(ReverseLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(ReverseLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReverseLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontFogLightRequest::_Internal {
 public:
};

FrontFogLightRequest::FrontFogLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontFogLightRequest)
}
FrontFogLightRequest::FrontFogLightRequest(const FrontFogLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontFogLightRequest)
}

void FrontFogLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontFogLightRequest::~FrontFogLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontFogLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontFogLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontFogLightRequest::ArenaDtor(void* object) {
  FrontFogLightRequest* _this = reinterpret_cast< FrontFogLightRequest* >(object);
  (void)_this;
}
void FrontFogLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontFogLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontFogLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontFogLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontFogLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontFogLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontFogLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontFogLightRequest)
  return target;
}

size_t FrontFogLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontFogLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontFogLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontFogLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontFogLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontFogLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontFogLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontFogLightRequest)
    MergeFrom(*source);
  }
}

void FrontFogLightRequest::MergeFrom(const FrontFogLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontFogLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontFogLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontFogLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontFogLightRequest::CopyFrom(const FrontFogLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontFogLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontFogLightRequest::IsInitialized() const {
  return true;
}

void FrontFogLightRequest::InternalSwap(FrontFogLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontFogLightRequest, flag_)
      + sizeof(FrontFogLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontFogLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontFogLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearFogLightRequest::_Internal {
 public:
};

RearFogLightRequest::RearFogLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearFogLightRequest)
}
RearFogLightRequest::RearFogLightRequest(const RearFogLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearFogLightRequest)
}

void RearFogLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearFogLightRequest::~RearFogLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearFogLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearFogLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearFogLightRequest::ArenaDtor(void* object) {
  RearFogLightRequest* _this = reinterpret_cast< RearFogLightRequest* >(object);
  (void)_this;
}
void RearFogLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearFogLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearFogLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearFogLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearFogLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearFogLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearFogLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearFogLightRequest)
  return target;
}

size_t RearFogLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearFogLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearFogLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearFogLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearFogLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearFogLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearFogLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearFogLightRequest)
    MergeFrom(*source);
  }
}

void RearFogLightRequest::MergeFrom(const RearFogLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearFogLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearFogLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearFogLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearFogLightRequest::CopyFrom(const RearFogLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearFogLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearFogLightRequest::IsInitialized() const {
  return true;
}

void RearFogLightRequest::InternalSwap(RearFogLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearFogLightRequest, flag_)
      + sizeof(RearFogLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearFogLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearFogLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClearanceLampRequest::_Internal {
 public:
};

ClearanceLampRequest::ClearanceLampRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ClearanceLampRequest)
}
ClearanceLampRequest::ClearanceLampRequest(const ClearanceLampRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ClearanceLampRequest)
}

void ClearanceLampRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

ClearanceLampRequest::~ClearanceLampRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.ClearanceLampRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearanceLampRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearanceLampRequest::ArenaDtor(void* object) {
  ClearanceLampRequest* _this = reinterpret_cast< ClearanceLampRequest* >(object);
  (void)_this;
}
void ClearanceLampRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearanceLampRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClearanceLampRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ClearanceLampRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearanceLampRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearanceLampRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ClearanceLampRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ClearanceLampRequest)
  return target;
}

size_t ClearanceLampRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ClearanceLampRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearanceLampRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ClearanceLampRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearanceLampRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearanceLampRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ClearanceLampRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ClearanceLampRequest)
    MergeFrom(*source);
  }
}

void ClearanceLampRequest::MergeFrom(const ClearanceLampRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ClearanceLampRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void ClearanceLampRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ClearanceLampRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearanceLampRequest::CopyFrom(const ClearanceLampRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ClearanceLampRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearanceLampRequest::IsInitialized() const {
  return true;
}

void ClearanceLampRequest::InternalSwap(ClearanceLampRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClearanceLampRequest, flag_)
      + sizeof(ClearanceLampRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(ClearanceLampRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearanceLampRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftBlinkerLightRequest::_Internal {
 public:
};

FrontLeftBlinkerLightRequest::FrontLeftBlinkerLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftBlinkerLightRequest)
}
FrontLeftBlinkerLightRequest::FrontLeftBlinkerLightRequest(const FrontLeftBlinkerLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftBlinkerLightRequest)
}

void FrontLeftBlinkerLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontLeftBlinkerLightRequest::~FrontLeftBlinkerLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftBlinkerLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftBlinkerLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftBlinkerLightRequest::ArenaDtor(void* object) {
  FrontLeftBlinkerLightRequest* _this = reinterpret_cast< FrontLeftBlinkerLightRequest* >(object);
  (void)_this;
}
void FrontLeftBlinkerLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftBlinkerLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftBlinkerLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftBlinkerLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftBlinkerLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftBlinkerLightRequest)
  return target;
}

size_t FrontLeftBlinkerLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftBlinkerLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftBlinkerLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftBlinkerLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftBlinkerLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftBlinkerLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftBlinkerLightRequest)
    MergeFrom(*source);
  }
}

void FrontLeftBlinkerLightRequest::MergeFrom(const FrontLeftBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontLeftBlinkerLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftBlinkerLightRequest::CopyFrom(const FrontLeftBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftBlinkerLightRequest::IsInitialized() const {
  return true;
}

void FrontLeftBlinkerLightRequest::InternalSwap(FrontLeftBlinkerLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontLeftBlinkerLightRequest, flag_)
      + sizeof(FrontLeftBlinkerLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontLeftBlinkerLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftBlinkerLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightBlinkerLightRequest::_Internal {
 public:
};

FrontRightBlinkerLightRequest::FrontRightBlinkerLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightBlinkerLightRequest)
}
FrontRightBlinkerLightRequest::FrontRightBlinkerLightRequest(const FrontRightBlinkerLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightBlinkerLightRequest)
}

void FrontRightBlinkerLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontRightBlinkerLightRequest::~FrontRightBlinkerLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightBlinkerLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightBlinkerLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightBlinkerLightRequest::ArenaDtor(void* object) {
  FrontRightBlinkerLightRequest* _this = reinterpret_cast< FrontRightBlinkerLightRequest* >(object);
  (void)_this;
}
void FrontRightBlinkerLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightBlinkerLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightBlinkerLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightBlinkerLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightBlinkerLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightBlinkerLightRequest)
  return target;
}

size_t FrontRightBlinkerLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightBlinkerLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightBlinkerLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightBlinkerLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightBlinkerLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightBlinkerLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightBlinkerLightRequest)
    MergeFrom(*source);
  }
}

void FrontRightBlinkerLightRequest::MergeFrom(const FrontRightBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontRightBlinkerLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightBlinkerLightRequest::CopyFrom(const FrontRightBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightBlinkerLightRequest::IsInitialized() const {
  return true;
}

void FrontRightBlinkerLightRequest::InternalSwap(FrontRightBlinkerLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontRightBlinkerLightRequest, flag_)
      + sizeof(FrontRightBlinkerLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontRightBlinkerLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightBlinkerLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftBlinkerLightRequest::_Internal {
 public:
};

RearLeftBlinkerLightRequest::RearLeftBlinkerLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftBlinkerLightRequest)
}
RearLeftBlinkerLightRequest::RearLeftBlinkerLightRequest(const RearLeftBlinkerLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftBlinkerLightRequest)
}

void RearLeftBlinkerLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearLeftBlinkerLightRequest::~RearLeftBlinkerLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftBlinkerLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftBlinkerLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftBlinkerLightRequest::ArenaDtor(void* object) {
  RearLeftBlinkerLightRequest* _this = reinterpret_cast< RearLeftBlinkerLightRequest* >(object);
  (void)_this;
}
void RearLeftBlinkerLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftBlinkerLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftBlinkerLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftBlinkerLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftBlinkerLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftBlinkerLightRequest)
  return target;
}

size_t RearLeftBlinkerLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftBlinkerLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftBlinkerLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftBlinkerLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftBlinkerLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftBlinkerLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftBlinkerLightRequest)
    MergeFrom(*source);
  }
}

void RearLeftBlinkerLightRequest::MergeFrom(const RearLeftBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearLeftBlinkerLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftBlinkerLightRequest::CopyFrom(const RearLeftBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftBlinkerLightRequest::IsInitialized() const {
  return true;
}

void RearLeftBlinkerLightRequest::InternalSwap(RearLeftBlinkerLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearLeftBlinkerLightRequest, flag_)
      + sizeof(RearLeftBlinkerLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearLeftBlinkerLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftBlinkerLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightBlinkerLightRequest::_Internal {
 public:
};

RearRightBlinkerLightRequest::RearRightBlinkerLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightBlinkerLightRequest)
}
RearRightBlinkerLightRequest::RearRightBlinkerLightRequest(const RearRightBlinkerLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightBlinkerLightRequest)
}

void RearRightBlinkerLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearRightBlinkerLightRequest::~RearRightBlinkerLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightBlinkerLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightBlinkerLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightBlinkerLightRequest::ArenaDtor(void* object) {
  RearRightBlinkerLightRequest* _this = reinterpret_cast< RearRightBlinkerLightRequest* >(object);
  (void)_this;
}
void RearRightBlinkerLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightBlinkerLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightBlinkerLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightBlinkerLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightBlinkerLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightBlinkerLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightBlinkerLightRequest)
  return target;
}

size_t RearRightBlinkerLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightBlinkerLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightBlinkerLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightBlinkerLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightBlinkerLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightBlinkerLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightBlinkerLightRequest)
    MergeFrom(*source);
  }
}

void RearRightBlinkerLightRequest::MergeFrom(const RearRightBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightBlinkerLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearRightBlinkerLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightBlinkerLightRequest::CopyFrom(const RearRightBlinkerLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightBlinkerLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightBlinkerLightRequest::IsInitialized() const {
  return true;
}

void RearRightBlinkerLightRequest::InternalSwap(RearRightBlinkerLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearRightBlinkerLightRequest, flag_)
      + sizeof(RearRightBlinkerLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearRightBlinkerLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightBlinkerLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontWiperRequest::_Internal {
 public:
};

FrontWiperRequest::FrontWiperRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontWiperRequest)
}
FrontWiperRequest::FrontWiperRequest(const FrontWiperRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontWiperRequest)
}

void FrontWiperRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontWiperRequest::~FrontWiperRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontWiperRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontWiperRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontWiperRequest::ArenaDtor(void* object) {
  FrontWiperRequest* _this = reinterpret_cast< FrontWiperRequest* >(object);
  (void)_this;
}
void FrontWiperRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontWiperRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontWiperRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontWiperRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontWiperRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontWiperRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontWiperRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontWiperRequest)
  return target;
}

size_t FrontWiperRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontWiperRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontWiperRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontWiperRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontWiperRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontWiperRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontWiperRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontWiperRequest)
    MergeFrom(*source);
  }
}

void FrontWiperRequest::MergeFrom(const FrontWiperRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontWiperRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontWiperRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontWiperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontWiperRequest::CopyFrom(const FrontWiperRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontWiperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontWiperRequest::IsInitialized() const {
  return true;
}

void FrontWiperRequest::InternalSwap(FrontWiperRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontWiperRequest, flag_)
      + sizeof(FrontWiperRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontWiperRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontWiperRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearWiperRequest::_Internal {
 public:
};

RearWiperRequest::RearWiperRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearWiperRequest)
}
RearWiperRequest::RearWiperRequest(const RearWiperRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearWiperRequest)
}

void RearWiperRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearWiperRequest::~RearWiperRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearWiperRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearWiperRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearWiperRequest::ArenaDtor(void* object) {
  RearWiperRequest* _this = reinterpret_cast< RearWiperRequest* >(object);
  (void)_this;
}
void RearWiperRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearWiperRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearWiperRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearWiperRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearWiperRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearWiperRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearWiperRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearWiperRequest)
  return target;
}

size_t RearWiperRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearWiperRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearWiperRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearWiperRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearWiperRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearWiperRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearWiperRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearWiperRequest)
    MergeFrom(*source);
  }
}

void RearWiperRequest::MergeFrom(const RearWiperRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearWiperRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearWiperRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearWiperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearWiperRequest::CopyFrom(const RearWiperRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearWiperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearWiperRequest::IsInitialized() const {
  return true;
}

void RearWiperRequest::InternalSwap(RearWiperRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearWiperRequest, flag_)
      + sizeof(RearWiperRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearWiperRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearWiperRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LeftSideMirrorRequest::_Internal {
 public:
};

LeftSideMirrorRequest::LeftSideMirrorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.LeftSideMirrorRequest)
}
LeftSideMirrorRequest::LeftSideMirrorRequest(const LeftSideMirrorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&angle_, &from.angle_,
    static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&angle_)) + sizeof(setmode_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.LeftSideMirrorRequest)
}

void LeftSideMirrorRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&angle_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&angle_)) + sizeof(setmode_));
}

LeftSideMirrorRequest::~LeftSideMirrorRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.LeftSideMirrorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LeftSideMirrorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LeftSideMirrorRequest::ArenaDtor(void* object) {
  LeftSideMirrorRequest* _this = reinterpret_cast< LeftSideMirrorRequest* >(object);
  (void)_this;
}
void LeftSideMirrorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LeftSideMirrorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LeftSideMirrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.LeftSideMirrorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setmode_) -
      reinterpret_cast<char*>(&angle_)) + sizeof(setmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeftSideMirrorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double angle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LeftSideMirrorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.LeftSideMirrorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // double angle = 2;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.LeftSideMirrorRequest)
  return target;
}

size_t LeftSideMirrorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.LeftSideMirrorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double angle = 2;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    total_size += 1 + 8;
  }

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeftSideMirrorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.LeftSideMirrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeftSideMirrorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LeftSideMirrorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.LeftSideMirrorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.LeftSideMirrorRequest)
    MergeFrom(*source);
  }
}

void LeftSideMirrorRequest::MergeFrom(const LeftSideMirrorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.LeftSideMirrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.angle() <= 0 && from.angle() >= 0)) {
    _internal_set_angle(from._internal_angle());
  }
  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
}

void LeftSideMirrorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.LeftSideMirrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeftSideMirrorRequest::CopyFrom(const LeftSideMirrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.LeftSideMirrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeftSideMirrorRequest::IsInitialized() const {
  return true;
}

void LeftSideMirrorRequest::InternalSwap(LeftSideMirrorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeftSideMirrorRequest, setmode_)
      + sizeof(LeftSideMirrorRequest::setmode_)
      - PROTOBUF_FIELD_OFFSET(LeftSideMirrorRequest, angle_)>(
          reinterpret_cast<char*>(&angle_),
          reinterpret_cast<char*>(&other->angle_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LeftSideMirrorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RightSideMirrorRequest::_Internal {
 public:
};

RightSideMirrorRequest::RightSideMirrorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RightSideMirrorRequest)
}
RightSideMirrorRequest::RightSideMirrorRequest(const RightSideMirrorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&angle_, &from.angle_,
    static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&angle_)) + sizeof(setmode_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RightSideMirrorRequest)
}

void RightSideMirrorRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&angle_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&angle_)) + sizeof(setmode_));
}

RightSideMirrorRequest::~RightSideMirrorRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RightSideMirrorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RightSideMirrorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RightSideMirrorRequest::ArenaDtor(void* object) {
  RightSideMirrorRequest* _this = reinterpret_cast< RightSideMirrorRequest* >(object);
  (void)_this;
}
void RightSideMirrorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RightSideMirrorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RightSideMirrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RightSideMirrorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setmode_) -
      reinterpret_cast<char*>(&angle_)) + sizeof(setmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RightSideMirrorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double angle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RightSideMirrorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RightSideMirrorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // double angle = 2;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RightSideMirrorRequest)
  return target;
}

size_t RightSideMirrorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RightSideMirrorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double angle = 2;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    total_size += 1 + 8;
  }

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RightSideMirrorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RightSideMirrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RightSideMirrorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RightSideMirrorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RightSideMirrorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RightSideMirrorRequest)
    MergeFrom(*source);
  }
}

void RightSideMirrorRequest::MergeFrom(const RightSideMirrorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RightSideMirrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.angle() <= 0 && from.angle() >= 0)) {
    _internal_set_angle(from._internal_angle());
  }
  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
}

void RightSideMirrorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RightSideMirrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RightSideMirrorRequest::CopyFrom(const RightSideMirrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RightSideMirrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RightSideMirrorRequest::IsInitialized() const {
  return true;
}

void RightSideMirrorRequest::InternalSwap(RightSideMirrorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RightSideMirrorRequest, setmode_)
      + sizeof(RightSideMirrorRequest::setmode_)
      - PROTOBUF_FIELD_OFFSET(RightSideMirrorRequest, angle_)>(
          reinterpret_cast<char*>(&angle_),
          reinterpret_cast<char*>(&other->angle_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RightSideMirrorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightDoorRequest::_Internal {
 public:
};

FrontRightDoorRequest::FrontRightDoorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightDoorRequest)
}
FrontRightDoorRequest::FrontRightDoorRequest(const FrontRightDoorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightDoorRequest)
}

void FrontRightDoorRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontRightDoorRequest::~FrontRightDoorRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightDoorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightDoorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightDoorRequest::ArenaDtor(void* object) {
  FrontRightDoorRequest* _this = reinterpret_cast< FrontRightDoorRequest* >(object);
  (void)_this;
}
void FrontRightDoorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightDoorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightDoorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightDoorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightDoorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightDoorRequest)
  return target;
}

size_t FrontRightDoorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightDoorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightDoorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightDoorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightDoorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightDoorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightDoorRequest)
    MergeFrom(*source);
  }
}

void FrontRightDoorRequest::MergeFrom(const FrontRightDoorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontRightDoorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightDoorRequest::CopyFrom(const FrontRightDoorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightDoorRequest::IsInitialized() const {
  return true;
}

void FrontRightDoorRequest::InternalSwap(FrontRightDoorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontRightDoorRequest, flag_)
      + sizeof(FrontRightDoorRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontRightDoorRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightDoorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftDoorRequest::_Internal {
 public:
};

FrontLeftDoorRequest::FrontLeftDoorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftDoorRequest)
}
FrontLeftDoorRequest::FrontLeftDoorRequest(const FrontLeftDoorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftDoorRequest)
}

void FrontLeftDoorRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontLeftDoorRequest::~FrontLeftDoorRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftDoorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftDoorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftDoorRequest::ArenaDtor(void* object) {
  FrontLeftDoorRequest* _this = reinterpret_cast< FrontLeftDoorRequest* >(object);
  (void)_this;
}
void FrontLeftDoorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftDoorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftDoorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftDoorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftDoorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftDoorRequest)
  return target;
}

size_t FrontLeftDoorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftDoorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftDoorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftDoorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftDoorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftDoorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftDoorRequest)
    MergeFrom(*source);
  }
}

void FrontLeftDoorRequest::MergeFrom(const FrontLeftDoorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontLeftDoorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftDoorRequest::CopyFrom(const FrontLeftDoorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftDoorRequest::IsInitialized() const {
  return true;
}

void FrontLeftDoorRequest::InternalSwap(FrontLeftDoorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontLeftDoorRequest, flag_)
      + sizeof(FrontLeftDoorRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontLeftDoorRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftDoorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightDoorRequest::_Internal {
 public:
};

RearRightDoorRequest::RearRightDoorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightDoorRequest)
}
RearRightDoorRequest::RearRightDoorRequest(const RearRightDoorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightDoorRequest)
}

void RearRightDoorRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearRightDoorRequest::~RearRightDoorRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightDoorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightDoorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightDoorRequest::ArenaDtor(void* object) {
  RearRightDoorRequest* _this = reinterpret_cast< RearRightDoorRequest* >(object);
  (void)_this;
}
void RearRightDoorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightDoorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightDoorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightDoorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightDoorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightDoorRequest)
  return target;
}

size_t RearRightDoorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightDoorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightDoorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightDoorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightDoorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightDoorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightDoorRequest)
    MergeFrom(*source);
  }
}

void RearRightDoorRequest::MergeFrom(const RearRightDoorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearRightDoorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightDoorRequest::CopyFrom(const RearRightDoorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightDoorRequest::IsInitialized() const {
  return true;
}

void RearRightDoorRequest::InternalSwap(RearRightDoorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearRightDoorRequest, flag_)
      + sizeof(RearRightDoorRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearRightDoorRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightDoorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftDoorRequest::_Internal {
 public:
};

RearLeftDoorRequest::RearLeftDoorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftDoorRequest)
}
RearLeftDoorRequest::RearLeftDoorRequest(const RearLeftDoorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftDoorRequest)
}

void RearLeftDoorRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearLeftDoorRequest::~RearLeftDoorRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftDoorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftDoorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftDoorRequest::ArenaDtor(void* object) {
  RearLeftDoorRequest* _this = reinterpret_cast< RearLeftDoorRequest* >(object);
  (void)_this;
}
void RearLeftDoorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftDoorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftDoorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftDoorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftDoorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftDoorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftDoorRequest)
  return target;
}

size_t RearLeftDoorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftDoorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftDoorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftDoorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftDoorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftDoorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftDoorRequest)
    MergeFrom(*source);
  }
}

void RearLeftDoorRequest::MergeFrom(const RearLeftDoorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftDoorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearLeftDoorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftDoorRequest::CopyFrom(const RearLeftDoorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftDoorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftDoorRequest::IsInitialized() const {
  return true;
}

void RearLeftDoorRequest::InternalSwap(RearLeftDoorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearLeftDoorRequest, flag_)
      + sizeof(RearLeftDoorRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearLeftDoorRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftDoorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TrunkRequest::_Internal {
 public:
};

TrunkRequest::TrunkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.TrunkRequest)
}
TrunkRequest::TrunkRequest(const TrunkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.TrunkRequest)
}

void TrunkRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

TrunkRequest::~TrunkRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.TrunkRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TrunkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TrunkRequest::ArenaDtor(void* object) {
  TrunkRequest* _this = reinterpret_cast< TrunkRequest* >(object);
  (void)_this;
}
void TrunkRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TrunkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TrunkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.TrunkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrunkRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrunkRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.TrunkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.TrunkRequest)
  return target;
}

size_t TrunkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.TrunkRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrunkRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.TrunkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TrunkRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrunkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.TrunkRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.TrunkRequest)
    MergeFrom(*source);
  }
}

void TrunkRequest::MergeFrom(const TrunkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.TrunkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void TrunkRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.TrunkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrunkRequest::CopyFrom(const TrunkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.TrunkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrunkRequest::IsInitialized() const {
  return true;
}

void TrunkRequest::InternalSwap(TrunkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrunkRequest, flag_)
      + sizeof(TrunkRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(TrunkRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TrunkRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SunRoofRequest::_Internal {
 public:
};

SunRoofRequest::SunRoofRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.SunRoofRequest)
}
SunRoofRequest::SunRoofRequest(const SunRoofRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.SunRoofRequest)
}

void SunRoofRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

SunRoofRequest::~SunRoofRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.SunRoofRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SunRoofRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SunRoofRequest::ArenaDtor(void* object) {
  SunRoofRequest* _this = reinterpret_cast< SunRoofRequest* >(object);
  (void)_this;
}
void SunRoofRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SunRoofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SunRoofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.SunRoofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SunRoofRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SunRoofRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.SunRoofRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.SunRoofRequest)
  return target;
}

size_t SunRoofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.SunRoofRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SunRoofRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.SunRoofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SunRoofRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SunRoofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.SunRoofRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.SunRoofRequest)
    MergeFrom(*source);
  }
}

void SunRoofRequest::MergeFrom(const SunRoofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.SunRoofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void SunRoofRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.SunRoofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SunRoofRequest::CopyFrom(const SunRoofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.SunRoofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SunRoofRequest::IsInitialized() const {
  return true;
}

void SunRoofRequest::InternalSwap(SunRoofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SunRoofRequest, flag_)
      + sizeof(SunRoofRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(SunRoofRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SunRoofRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightPowerWindowsRequest::_Internal {
 public:
};

FrontRightPowerWindowsRequest::FrontRightPowerWindowsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightPowerWindowsRequest)
}
FrontRightPowerWindowsRequest::FrontRightPowerWindowsRequest(const FrontRightPowerWindowsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&highlevel_, &from.highlevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightPowerWindowsRequest)
}

void FrontRightPowerWindowsRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&highlevel_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
}

FrontRightPowerWindowsRequest::~FrontRightPowerWindowsRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightPowerWindowsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightPowerWindowsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightPowerWindowsRequest::ArenaDtor(void* object) {
  FrontRightPowerWindowsRequest* _this = reinterpret_cast< FrontRightPowerWindowsRequest* >(object);
  (void)_this;
}
void FrontRightPowerWindowsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightPowerWindowsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightPowerWindowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&highlevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setmode_) -
      reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightPowerWindowsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double highLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightPowerWindowsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightPowerWindowsRequest)
  return target;
}

size_t FrontRightPowerWindowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightPowerWindowsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightPowerWindowsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightPowerWindowsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightPowerWindowsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightPowerWindowsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightPowerWindowsRequest)
    MergeFrom(*source);
  }
}

void FrontRightPowerWindowsRequest::MergeFrom(const FrontRightPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
}

void FrontRightPowerWindowsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightPowerWindowsRequest::CopyFrom(const FrontRightPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightPowerWindowsRequest::IsInitialized() const {
  return true;
}

void FrontRightPowerWindowsRequest::InternalSwap(FrontRightPowerWindowsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontRightPowerWindowsRequest, setmode_)
      + sizeof(FrontRightPowerWindowsRequest::setmode_)
      - PROTOBUF_FIELD_OFFSET(FrontRightPowerWindowsRequest, highlevel_)>(
          reinterpret_cast<char*>(&highlevel_),
          reinterpret_cast<char*>(&other->highlevel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightPowerWindowsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftPowerWindowsRequest::_Internal {
 public:
};

FrontLeftPowerWindowsRequest::FrontLeftPowerWindowsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftPowerWindowsRequest)
}
FrontLeftPowerWindowsRequest::FrontLeftPowerWindowsRequest(const FrontLeftPowerWindowsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&highlevel_, &from.highlevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftPowerWindowsRequest)
}

void FrontLeftPowerWindowsRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&highlevel_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
}

FrontLeftPowerWindowsRequest::~FrontLeftPowerWindowsRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftPowerWindowsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftPowerWindowsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftPowerWindowsRequest::ArenaDtor(void* object) {
  FrontLeftPowerWindowsRequest* _this = reinterpret_cast< FrontLeftPowerWindowsRequest* >(object);
  (void)_this;
}
void FrontLeftPowerWindowsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftPowerWindowsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftPowerWindowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&highlevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setmode_) -
      reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftPowerWindowsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double highLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftPowerWindowsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftPowerWindowsRequest)
  return target;
}

size_t FrontLeftPowerWindowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftPowerWindowsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftPowerWindowsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftPowerWindowsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftPowerWindowsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftPowerWindowsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftPowerWindowsRequest)
    MergeFrom(*source);
  }
}

void FrontLeftPowerWindowsRequest::MergeFrom(const FrontLeftPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
}

void FrontLeftPowerWindowsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftPowerWindowsRequest::CopyFrom(const FrontLeftPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftPowerWindowsRequest::IsInitialized() const {
  return true;
}

void FrontLeftPowerWindowsRequest::InternalSwap(FrontLeftPowerWindowsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontLeftPowerWindowsRequest, setmode_)
      + sizeof(FrontLeftPowerWindowsRequest::setmode_)
      - PROTOBUF_FIELD_OFFSET(FrontLeftPowerWindowsRequest, highlevel_)>(
          reinterpret_cast<char*>(&highlevel_),
          reinterpret_cast<char*>(&other->highlevel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftPowerWindowsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightPowerWindowsRequest::_Internal {
 public:
};

RearRightPowerWindowsRequest::RearRightPowerWindowsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightPowerWindowsRequest)
}
RearRightPowerWindowsRequest::RearRightPowerWindowsRequest(const RearRightPowerWindowsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&highlevel_, &from.highlevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightPowerWindowsRequest)
}

void RearRightPowerWindowsRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&highlevel_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
}

RearRightPowerWindowsRequest::~RearRightPowerWindowsRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightPowerWindowsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightPowerWindowsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightPowerWindowsRequest::ArenaDtor(void* object) {
  RearRightPowerWindowsRequest* _this = reinterpret_cast< RearRightPowerWindowsRequest* >(object);
  (void)_this;
}
void RearRightPowerWindowsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightPowerWindowsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightPowerWindowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&highlevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setmode_) -
      reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightPowerWindowsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double highLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightPowerWindowsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightPowerWindowsRequest)
  return target;
}

size_t RearRightPowerWindowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightPowerWindowsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightPowerWindowsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightPowerWindowsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightPowerWindowsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightPowerWindowsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightPowerWindowsRequest)
    MergeFrom(*source);
  }
}

void RearRightPowerWindowsRequest::MergeFrom(const RearRightPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
}

void RearRightPowerWindowsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightPowerWindowsRequest::CopyFrom(const RearRightPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightPowerWindowsRequest::IsInitialized() const {
  return true;
}

void RearRightPowerWindowsRequest::InternalSwap(RearRightPowerWindowsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearRightPowerWindowsRequest, setmode_)
      + sizeof(RearRightPowerWindowsRequest::setmode_)
      - PROTOBUF_FIELD_OFFSET(RearRightPowerWindowsRequest, highlevel_)>(
          reinterpret_cast<char*>(&highlevel_),
          reinterpret_cast<char*>(&other->highlevel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightPowerWindowsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftPowerWindowsRequest::_Internal {
 public:
};

RearLeftPowerWindowsRequest::RearLeftPowerWindowsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftPowerWindowsRequest)
}
RearLeftPowerWindowsRequest::RearLeftPowerWindowsRequest(const RearLeftPowerWindowsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&highlevel_, &from.highlevel_,
    static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftPowerWindowsRequest)
}

void RearLeftPowerWindowsRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&highlevel_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
}

RearLeftPowerWindowsRequest::~RearLeftPowerWindowsRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftPowerWindowsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftPowerWindowsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftPowerWindowsRequest::ArenaDtor(void* object) {
  RearLeftPowerWindowsRequest* _this = reinterpret_cast< RearLeftPowerWindowsRequest* >(object);
  (void)_this;
}
void RearLeftPowerWindowsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftPowerWindowsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftPowerWindowsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&highlevel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setmode_) -
      reinterpret_cast<char*>(&highlevel_)) + sizeof(setmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftPowerWindowsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double highLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftPowerWindowsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftPowerWindowsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftPowerWindowsRequest)
  return target;
}

size_t RearLeftPowerWindowsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftPowerWindowsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 2;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftPowerWindowsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftPowerWindowsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftPowerWindowsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftPowerWindowsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftPowerWindowsRequest)
    MergeFrom(*source);
  }
}

void RearLeftPowerWindowsRequest::MergeFrom(const RearLeftPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftPowerWindowsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
}

void RearLeftPowerWindowsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftPowerWindowsRequest::CopyFrom(const RearLeftPowerWindowsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftPowerWindowsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftPowerWindowsRequest::IsInitialized() const {
  return true;
}

void RearLeftPowerWindowsRequest::InternalSwap(RearLeftPowerWindowsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearLeftPowerWindowsRequest, setmode_)
      + sizeof(RearLeftPowerWindowsRequest::setmode_)
      - PROTOBUF_FIELD_OFFSET(RearLeftPowerWindowsRequest, highlevel_)>(
          reinterpret_cast<char*>(&highlevel_),
          reinterpret_cast<char*>(&other->highlevel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftPowerWindowsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SideMirrorSwitchRequest::_Internal {
 public:
};

SideMirrorSwitchRequest::SideMirrorSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.SideMirrorSwitchRequest)
}
SideMirrorSwitchRequest::SideMirrorSwitchRequest(const SideMirrorSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.SideMirrorSwitchRequest)
}

void SideMirrorSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

SideMirrorSwitchRequest::~SideMirrorSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.SideMirrorSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SideMirrorSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SideMirrorSwitchRequest::ArenaDtor(void* object) {
  SideMirrorSwitchRequest* _this = reinterpret_cast< SideMirrorSwitchRequest* >(object);
  (void)_this;
}
void SideMirrorSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SideMirrorSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SideMirrorSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.SideMirrorSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SideMirrorSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SideMirrorSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.SideMirrorSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.SideMirrorSwitchRequest)
  return target;
}

size_t SideMirrorSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.SideMirrorSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SideMirrorSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.SideMirrorSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SideMirrorSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SideMirrorSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.SideMirrorSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.SideMirrorSwitchRequest)
    MergeFrom(*source);
  }
}

void SideMirrorSwitchRequest::MergeFrom(const SideMirrorSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.SideMirrorSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void SideMirrorSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.SideMirrorSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SideMirrorSwitchRequest::CopyFrom(const SideMirrorSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.SideMirrorSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SideMirrorSwitchRequest::IsInitialized() const {
  return true;
}

void SideMirrorSwitchRequest::InternalSwap(SideMirrorSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SideMirrorSwitchRequest, flag_)
      + sizeof(SideMirrorSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(SideMirrorSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SideMirrorSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InstrumentLightRequest::_Internal {
 public:
};

InstrumentLightRequest::InstrumentLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.InstrumentLightRequest)
}
InstrumentLightRequest::InstrumentLightRequest(const InstrumentLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.InstrumentLightRequest)
}

void InstrumentLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

InstrumentLightRequest::~InstrumentLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.InstrumentLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InstrumentLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InstrumentLightRequest::ArenaDtor(void* object) {
  InstrumentLightRequest* _this = reinterpret_cast< InstrumentLightRequest* >(object);
  (void)_this;
}
void InstrumentLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InstrumentLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InstrumentLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.InstrumentLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InstrumentLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InstrumentLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.InstrumentLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.InstrumentLightRequest)
  return target;
}

size_t InstrumentLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.InstrumentLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstrumentLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.InstrumentLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InstrumentLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InstrumentLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.InstrumentLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.InstrumentLightRequest)
    MergeFrom(*source);
  }
}

void InstrumentLightRequest::MergeFrom(const InstrumentLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.InstrumentLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void InstrumentLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.InstrumentLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstrumentLightRequest::CopyFrom(const InstrumentLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.InstrumentLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstrumentLightRequest::IsInitialized() const {
  return true;
}

void InstrumentLightRequest::InternalSwap(InstrumentLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstrumentLightRequest, flag_)
      + sizeof(InstrumentLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(InstrumentLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InstrumentLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PassgenerRoomDomeLightRequest::_Internal {
 public:
};

PassgenerRoomDomeLightRequest::PassgenerRoomDomeLightRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.PassgenerRoomDomeLightRequest)
}
PassgenerRoomDomeLightRequest::PassgenerRoomDomeLightRequest(const PassgenerRoomDomeLightRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.PassgenerRoomDomeLightRequest)
}

void PassgenerRoomDomeLightRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

PassgenerRoomDomeLightRequest::~PassgenerRoomDomeLightRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.PassgenerRoomDomeLightRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PassgenerRoomDomeLightRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PassgenerRoomDomeLightRequest::ArenaDtor(void* object) {
  PassgenerRoomDomeLightRequest* _this = reinterpret_cast< PassgenerRoomDomeLightRequest* >(object);
  (void)_this;
}
void PassgenerRoomDomeLightRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PassgenerRoomDomeLightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PassgenerRoomDomeLightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.PassgenerRoomDomeLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PassgenerRoomDomeLightRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PassgenerRoomDomeLightRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.PassgenerRoomDomeLightRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.PassgenerRoomDomeLightRequest)
  return target;
}

size_t PassgenerRoomDomeLightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.PassgenerRoomDomeLightRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PassgenerRoomDomeLightRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.PassgenerRoomDomeLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PassgenerRoomDomeLightRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PassgenerRoomDomeLightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.PassgenerRoomDomeLightRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.PassgenerRoomDomeLightRequest)
    MergeFrom(*source);
  }
}

void PassgenerRoomDomeLightRequest::MergeFrom(const PassgenerRoomDomeLightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.PassgenerRoomDomeLightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void PassgenerRoomDomeLightRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.PassgenerRoomDomeLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassgenerRoomDomeLightRequest::CopyFrom(const PassgenerRoomDomeLightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.PassgenerRoomDomeLightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassgenerRoomDomeLightRequest::IsInitialized() const {
  return true;
}

void PassgenerRoomDomeLightRequest::InternalSwap(PassgenerRoomDomeLightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PassgenerRoomDomeLightRequest, flag_)
      + sizeof(PassgenerRoomDomeLightRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(PassgenerRoomDomeLightRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PassgenerRoomDomeLightRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReadingLightDriverSideRequest::_Internal {
 public:
};

ReadingLightDriverSideRequest::ReadingLightDriverSideRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ReadingLightDriverSideRequest)
}
ReadingLightDriverSideRequest::ReadingLightDriverSideRequest(const ReadingLightDriverSideRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ReadingLightDriverSideRequest)
}

void ReadingLightDriverSideRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

ReadingLightDriverSideRequest::~ReadingLightDriverSideRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.ReadingLightDriverSideRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadingLightDriverSideRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReadingLightDriverSideRequest::ArenaDtor(void* object) {
  ReadingLightDriverSideRequest* _this = reinterpret_cast< ReadingLightDriverSideRequest* >(object);
  (void)_this;
}
void ReadingLightDriverSideRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadingLightDriverSideRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadingLightDriverSideRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ReadingLightDriverSideRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadingLightDriverSideRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadingLightDriverSideRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ReadingLightDriverSideRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ReadingLightDriverSideRequest)
  return target;
}

size_t ReadingLightDriverSideRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ReadingLightDriverSideRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingLightDriverSideRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ReadingLightDriverSideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingLightDriverSideRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadingLightDriverSideRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ReadingLightDriverSideRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ReadingLightDriverSideRequest)
    MergeFrom(*source);
  }
}

void ReadingLightDriverSideRequest::MergeFrom(const ReadingLightDriverSideRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ReadingLightDriverSideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void ReadingLightDriverSideRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ReadingLightDriverSideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingLightDriverSideRequest::CopyFrom(const ReadingLightDriverSideRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ReadingLightDriverSideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingLightDriverSideRequest::IsInitialized() const {
  return true;
}

void ReadingLightDriverSideRequest::InternalSwap(ReadingLightDriverSideRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadingLightDriverSideRequest, flag_)
      + sizeof(ReadingLightDriverSideRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(ReadingLightDriverSideRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadingLightDriverSideRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReadingLightPassgenerSideRequest::_Internal {
 public:
};

ReadingLightPassgenerSideRequest::ReadingLightPassgenerSideRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ReadingLightPassgenerSideRequest)
}
ReadingLightPassgenerSideRequest::ReadingLightPassgenerSideRequest(const ReadingLightPassgenerSideRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ReadingLightPassgenerSideRequest)
}

void ReadingLightPassgenerSideRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

ReadingLightPassgenerSideRequest::~ReadingLightPassgenerSideRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.ReadingLightPassgenerSideRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadingLightPassgenerSideRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReadingLightPassgenerSideRequest::ArenaDtor(void* object) {
  ReadingLightPassgenerSideRequest* _this = reinterpret_cast< ReadingLightPassgenerSideRequest* >(object);
  (void)_this;
}
void ReadingLightPassgenerSideRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadingLightPassgenerSideRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadingLightPassgenerSideRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ReadingLightPassgenerSideRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadingLightPassgenerSideRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadingLightPassgenerSideRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ReadingLightPassgenerSideRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ReadingLightPassgenerSideRequest)
  return target;
}

size_t ReadingLightPassgenerSideRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ReadingLightPassgenerSideRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingLightPassgenerSideRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ReadingLightPassgenerSideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingLightPassgenerSideRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadingLightPassgenerSideRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ReadingLightPassgenerSideRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ReadingLightPassgenerSideRequest)
    MergeFrom(*source);
  }
}

void ReadingLightPassgenerSideRequest::MergeFrom(const ReadingLightPassgenerSideRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ReadingLightPassgenerSideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void ReadingLightPassgenerSideRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ReadingLightPassgenerSideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingLightPassgenerSideRequest::CopyFrom(const ReadingLightPassgenerSideRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ReadingLightPassgenerSideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingLightPassgenerSideRequest::IsInitialized() const {
  return true;
}

void ReadingLightPassgenerSideRequest::InternalSwap(ReadingLightPassgenerSideRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadingLightPassgenerSideRequest, flag_)
      + sizeof(ReadingLightPassgenerSideRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(ReadingLightPassgenerSideRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadingLightPassgenerSideRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightPowerWindowsSwitchRequest::_Internal {
 public:
};

FrontRightPowerWindowsSwitchRequest::FrontRightPowerWindowsSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightPowerWindowsSwitchRequest)
}
FrontRightPowerWindowsSwitchRequest::FrontRightPowerWindowsSwitchRequest(const FrontRightPowerWindowsSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightPowerWindowsSwitchRequest)
}

void FrontRightPowerWindowsSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontRightPowerWindowsSwitchRequest::~FrontRightPowerWindowsSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightPowerWindowsSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightPowerWindowsSwitchRequest::ArenaDtor(void* object) {
  FrontRightPowerWindowsSwitchRequest* _this = reinterpret_cast< FrontRightPowerWindowsSwitchRequest* >(object);
  (void)_this;
}
void FrontRightPowerWindowsSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightPowerWindowsSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightPowerWindowsSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightPowerWindowsSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightPowerWindowsSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  return target;
}

size_t FrontRightPowerWindowsSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightPowerWindowsSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightPowerWindowsSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightPowerWindowsSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightPowerWindowsSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightPowerWindowsSwitchRequest)
    MergeFrom(*source);
  }
}

void FrontRightPowerWindowsSwitchRequest::MergeFrom(const FrontRightPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontRightPowerWindowsSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightPowerWindowsSwitchRequest::CopyFrom(const FrontRightPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightPowerWindowsSwitchRequest::IsInitialized() const {
  return true;
}

void FrontRightPowerWindowsSwitchRequest::InternalSwap(FrontRightPowerWindowsSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontRightPowerWindowsSwitchRequest, flag_)
      + sizeof(FrontRightPowerWindowsSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontRightPowerWindowsSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightPowerWindowsSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftPowerWindowsSwitchRequest::_Internal {
 public:
};

FrontLeftPowerWindowsSwitchRequest::FrontLeftPowerWindowsSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
}
FrontLeftPowerWindowsSwitchRequest::FrontLeftPowerWindowsSwitchRequest(const FrontLeftPowerWindowsSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
}

void FrontLeftPowerWindowsSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontLeftPowerWindowsSwitchRequest::~FrontLeftPowerWindowsSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftPowerWindowsSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftPowerWindowsSwitchRequest::ArenaDtor(void* object) {
  FrontLeftPowerWindowsSwitchRequest* _this = reinterpret_cast< FrontLeftPowerWindowsSwitchRequest* >(object);
  (void)_this;
}
void FrontLeftPowerWindowsSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftPowerWindowsSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftPowerWindowsSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftPowerWindowsSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftPowerWindowsSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  return target;
}

size_t FrontLeftPowerWindowsSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftPowerWindowsSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftPowerWindowsSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftPowerWindowsSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
    MergeFrom(*source);
  }
}

void FrontLeftPowerWindowsSwitchRequest::MergeFrom(const FrontLeftPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontLeftPowerWindowsSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftPowerWindowsSwitchRequest::CopyFrom(const FrontLeftPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftPowerWindowsSwitchRequest::IsInitialized() const {
  return true;
}

void FrontLeftPowerWindowsSwitchRequest::InternalSwap(FrontLeftPowerWindowsSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontLeftPowerWindowsSwitchRequest, flag_)
      + sizeof(FrontLeftPowerWindowsSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontLeftPowerWindowsSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftPowerWindowsSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightPowerWindowsSwitchRequest::_Internal {
 public:
};

RearRightPowerWindowsSwitchRequest::RearRightPowerWindowsSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightPowerWindowsSwitchRequest)
}
RearRightPowerWindowsSwitchRequest::RearRightPowerWindowsSwitchRequest(const RearRightPowerWindowsSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightPowerWindowsSwitchRequest)
}

void RearRightPowerWindowsSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearRightPowerWindowsSwitchRequest::~RearRightPowerWindowsSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightPowerWindowsSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightPowerWindowsSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightPowerWindowsSwitchRequest::ArenaDtor(void* object) {
  RearRightPowerWindowsSwitchRequest* _this = reinterpret_cast< RearRightPowerWindowsSwitchRequest* >(object);
  (void)_this;
}
void RearRightPowerWindowsSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightPowerWindowsSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightPowerWindowsSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightPowerWindowsSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightPowerWindowsSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightPowerWindowsSwitchRequest)
  return target;
}

size_t RearRightPowerWindowsSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightPowerWindowsSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightPowerWindowsSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightPowerWindowsSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightPowerWindowsSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightPowerWindowsSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightPowerWindowsSwitchRequest)
    MergeFrom(*source);
  }
}

void RearRightPowerWindowsSwitchRequest::MergeFrom(const RearRightPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearRightPowerWindowsSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightPowerWindowsSwitchRequest::CopyFrom(const RearRightPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightPowerWindowsSwitchRequest::IsInitialized() const {
  return true;
}

void RearRightPowerWindowsSwitchRequest::InternalSwap(RearRightPowerWindowsSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearRightPowerWindowsSwitchRequest, flag_)
      + sizeof(RearRightPowerWindowsSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearRightPowerWindowsSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightPowerWindowsSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftPowerWindowsSwitchRequest::_Internal {
 public:
};

RearLeftPowerWindowsSwitchRequest::RearLeftPowerWindowsSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftPowerWindowsSwitchRequest)
}
RearLeftPowerWindowsSwitchRequest::RearLeftPowerWindowsSwitchRequest(const RearLeftPowerWindowsSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftPowerWindowsSwitchRequest)
}

void RearLeftPowerWindowsSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearLeftPowerWindowsSwitchRequest::~RearLeftPowerWindowsSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftPowerWindowsSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftPowerWindowsSwitchRequest::ArenaDtor(void* object) {
  RearLeftPowerWindowsSwitchRequest* _this = reinterpret_cast< RearLeftPowerWindowsSwitchRequest* >(object);
  (void)_this;
}
void RearLeftPowerWindowsSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftPowerWindowsSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftPowerWindowsSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftPowerWindowsSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftPowerWindowsSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  return target;
}

size_t RearLeftPowerWindowsSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftPowerWindowsSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftPowerWindowsSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftPowerWindowsSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftPowerWindowsSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftPowerWindowsSwitchRequest)
    MergeFrom(*source);
  }
}

void RearLeftPowerWindowsSwitchRequest::MergeFrom(const RearLeftPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearLeftPowerWindowsSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftPowerWindowsSwitchRequest::CopyFrom(const RearLeftPowerWindowsSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftPowerWindowsSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftPowerWindowsSwitchRequest::IsInitialized() const {
  return true;
}

void RearLeftPowerWindowsSwitchRequest::InternalSwap(RearLeftPowerWindowsSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearLeftPowerWindowsSwitchRequest, flag_)
      + sizeof(RearLeftPowerWindowsSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearLeftPowerWindowsSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftPowerWindowsSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HornRequest::_Internal {
 public:
};

HornRequest::HornRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.HornRequest)
}
HornRequest::HornRequest(const HornRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.HornRequest)
}

void HornRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

HornRequest::~HornRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.HornRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HornRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HornRequest::ArenaDtor(void* object) {
  HornRequest* _this = reinterpret_cast< HornRequest* >(object);
  (void)_this;
}
void HornRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HornRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HornRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.HornRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HornRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HornRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.HornRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.HornRequest)
  return target;
}

size_t HornRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.HornRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HornRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.HornRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HornRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HornRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.HornRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.HornRequest)
    MergeFrom(*source);
  }
}

void HornRequest::MergeFrom(const HornRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.HornRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void HornRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.HornRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HornRequest::CopyFrom(const HornRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.HornRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HornRequest::IsInitialized() const {
  return true;
}

void HornRequest::InternalSwap(HornRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HornRequest, flag_)
      + sizeof(HornRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(HornRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HornRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuzzerRequest::_Internal {
 public:
};

BuzzerRequest::BuzzerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.BuzzerRequest)
}
BuzzerRequest::BuzzerRequest(const BuzzerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.BuzzerRequest)
}

void BuzzerRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

BuzzerRequest::~BuzzerRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.BuzzerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuzzerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuzzerRequest::ArenaDtor(void* object) {
  BuzzerRequest* _this = reinterpret_cast< BuzzerRequest* >(object);
  (void)_this;
}
void BuzzerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuzzerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuzzerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.BuzzerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuzzerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuzzerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.BuzzerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.BuzzerRequest)
  return target;
}

size_t BuzzerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.BuzzerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuzzerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.BuzzerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BuzzerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuzzerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.BuzzerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.BuzzerRequest)
    MergeFrom(*source);
  }
}

void BuzzerRequest::MergeFrom(const BuzzerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.BuzzerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void BuzzerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.BuzzerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuzzerRequest::CopyFrom(const BuzzerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.BuzzerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuzzerRequest::IsInitialized() const {
  return true;
}

void BuzzerRequest::InternalSwap(BuzzerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuzzerRequest, flag_)
      + sizeof(BuzzerRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(BuzzerRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuzzerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AirConditionerRequest::_Internal {
 public:
};

AirConditionerRequest::AirConditionerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.AirConditionerRequest)
}
AirConditionerRequest::AirConditionerRequest(const AirConditionerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.AirConditionerRequest)
}

void AirConditionerRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

AirConditionerRequest::~AirConditionerRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.AirConditionerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirConditionerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AirConditionerRequest::ArenaDtor(void* object) {
  AirConditionerRequest* _this = reinterpret_cast< AirConditionerRequest* >(object);
  (void)_this;
}
void AirConditionerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirConditionerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AirConditionerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.AirConditionerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirConditionerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirConditionerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.AirConditionerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.AirConditionerRequest)
  return target;
}

size_t AirConditionerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.AirConditionerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirConditionerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.AirConditionerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AirConditionerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirConditionerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.AirConditionerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.AirConditionerRequest)
    MergeFrom(*source);
  }
}

void AirConditionerRequest::MergeFrom(const AirConditionerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.AirConditionerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void AirConditionerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.AirConditionerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirConditionerRequest::CopyFrom(const AirConditionerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.AirConditionerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirConditionerRequest::IsInitialized() const {
  return true;
}

void AirConditionerRequest::InternalSwap(AirConditionerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AirConditionerRequest, flag_)
      + sizeof(AirConditionerRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(AirConditionerRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AirConditionerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AirCondTemperatureRequest::_Internal {
 public:
};

AirCondTemperatureRequest::AirCondTemperatureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.AirCondTemperatureRequest)
}
AirCondTemperatureRequest::AirCondTemperatureRequest(const AirCondTemperatureRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&temperature_, &from.temperature_,
    static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&temperature_)) + sizeof(setmode_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.AirCondTemperatureRequest)
}

void AirCondTemperatureRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&temperature_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&setmode_) -
    reinterpret_cast<char*>(&temperature_)) + sizeof(setmode_));
}

AirCondTemperatureRequest::~AirCondTemperatureRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.AirCondTemperatureRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirCondTemperatureRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AirCondTemperatureRequest::ArenaDtor(void* object) {
  AirCondTemperatureRequest* _this = reinterpret_cast< AirCondTemperatureRequest* >(object);
  (void)_this;
}
void AirCondTemperatureRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirCondTemperatureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AirCondTemperatureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.AirCondTemperatureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&temperature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setmode_) -
      reinterpret_cast<char*>(&temperature_)) + sizeof(setmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirCondTemperatureRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double temperature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirCondTemperatureRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.AirCondTemperatureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // double temperature = 2;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_temperature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.AirCondTemperatureRequest)
  return target;
}

size_t AirCondTemperatureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.AirCondTemperatureRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double temperature = 2;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    total_size += 1 + 8;
  }

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirCondTemperatureRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.AirCondTemperatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AirCondTemperatureRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirCondTemperatureRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.AirCondTemperatureRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.AirCondTemperatureRequest)
    MergeFrom(*source);
  }
}

void AirCondTemperatureRequest::MergeFrom(const AirCondTemperatureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.AirCondTemperatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.temperature() <= 0 && from.temperature() >= 0)) {
    _internal_set_temperature(from._internal_temperature());
  }
  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
}

void AirCondTemperatureRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.AirCondTemperatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirCondTemperatureRequest::CopyFrom(const AirCondTemperatureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.AirCondTemperatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirCondTemperatureRequest::IsInitialized() const {
  return true;
}

void AirCondTemperatureRequest::InternalSwap(AirCondTemperatureRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AirCondTemperatureRequest, setmode_)
      + sizeof(AirCondTemperatureRequest::setmode_)
      - PROTOBUF_FIELD_OFFSET(AirCondTemperatureRequest, temperature_)>(
          reinterpret_cast<char*>(&temperature_),
          reinterpret_cast<char*>(&other->temperature_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AirCondTemperatureRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AirConditionerFanSpeedRequest::_Internal {
 public:
};

AirConditionerFanSpeedRequest::AirConditionerFanSpeedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.AirConditionerFanSpeedRequest)
}
AirConditionerFanSpeedRequest::AirConditionerFanSpeedRequest(const AirConditionerFanSpeedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&fanspeed_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(fanspeed_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.AirConditionerFanSpeedRequest)
}

void AirConditionerFanSpeedRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&fanspeed_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(fanspeed_));
}

AirConditionerFanSpeedRequest::~AirConditionerFanSpeedRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.AirConditionerFanSpeedRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirConditionerFanSpeedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AirConditionerFanSpeedRequest::ArenaDtor(void* object) {
  AirConditionerFanSpeedRequest* _this = reinterpret_cast< AirConditionerFanSpeedRequest* >(object);
  (void)_this;
}
void AirConditionerFanSpeedRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirConditionerFanSpeedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AirConditionerFanSpeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.AirConditionerFanSpeedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fanspeed_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(fanspeed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirConditionerFanSpeedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 fanSpeed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          fanspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirConditionerFanSpeedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.AirConditionerFanSpeedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // int32 fanSpeed = 2;
  if (this->fanspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_fanspeed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.AirConditionerFanSpeedRequest)
  return target;
}

size_t AirConditionerFanSpeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.AirConditionerFanSpeedRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // int32 fanSpeed = 2;
  if (this->fanspeed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fanspeed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirConditionerFanSpeedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.AirConditionerFanSpeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AirConditionerFanSpeedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirConditionerFanSpeedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.AirConditionerFanSpeedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.AirConditionerFanSpeedRequest)
    MergeFrom(*source);
  }
}

void AirConditionerFanSpeedRequest::MergeFrom(const AirConditionerFanSpeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.AirConditionerFanSpeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.fanspeed() != 0) {
    _internal_set_fanspeed(from._internal_fanspeed());
  }
}

void AirConditionerFanSpeedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.AirConditionerFanSpeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirConditionerFanSpeedRequest::CopyFrom(const AirConditionerFanSpeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.AirConditionerFanSpeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirConditionerFanSpeedRequest::IsInitialized() const {
  return true;
}

void AirConditionerFanSpeedRequest::InternalSwap(AirConditionerFanSpeedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AirConditionerFanSpeedRequest, fanspeed_)
      + sizeof(AirConditionerFanSpeedRequest::fanspeed_)
      - PROTOBUF_FIELD_OFFSET(AirConditionerFanSpeedRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AirConditionerFanSpeedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HandlingRequest::_Internal {
 public:
};

HandlingRequest::HandlingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.HandlingRequest)
}
HandlingRequest::HandlingRequest(const HandlingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.HandlingRequest)
}

void HandlingRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

HandlingRequest::~HandlingRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.HandlingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandlingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HandlingRequest::ArenaDtor(void* object) {
  HandlingRequest* _this = reinterpret_cast< HandlingRequest* >(object);
  (void)_this;
}
void HandlingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandlingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HandlingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.HandlingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandlingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandlingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.HandlingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.HandlingRequest)
  return target;
}

size_t HandlingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.HandlingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandlingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.HandlingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HandlingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandlingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.HandlingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.HandlingRequest)
    MergeFrom(*source);
  }
}

void HandlingRequest::MergeFrom(const HandlingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.HandlingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void HandlingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.HandlingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandlingRequest::CopyFrom(const HandlingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.HandlingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlingRequest::IsInitialized() const {
  return true;
}

void HandlingRequest::InternalSwap(HandlingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HandlingRequest, flag_)
      + sizeof(HandlingRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(HandlingRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HandlingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CentralDoorLockSwitchRequest::_Internal {
 public:
};

CentralDoorLockSwitchRequest::CentralDoorLockSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.CentralDoorLockSwitchRequest)
}
CentralDoorLockSwitchRequest::CentralDoorLockSwitchRequest(const CentralDoorLockSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.CentralDoorLockSwitchRequest)
}

void CentralDoorLockSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

CentralDoorLockSwitchRequest::~CentralDoorLockSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.CentralDoorLockSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CentralDoorLockSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CentralDoorLockSwitchRequest::ArenaDtor(void* object) {
  CentralDoorLockSwitchRequest* _this = reinterpret_cast< CentralDoorLockSwitchRequest* >(object);
  (void)_this;
}
void CentralDoorLockSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CentralDoorLockSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CentralDoorLockSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.CentralDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CentralDoorLockSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CentralDoorLockSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.CentralDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.CentralDoorLockSwitchRequest)
  return target;
}

size_t CentralDoorLockSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.CentralDoorLockSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CentralDoorLockSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.CentralDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CentralDoorLockSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CentralDoorLockSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.CentralDoorLockSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.CentralDoorLockSwitchRequest)
    MergeFrom(*source);
  }
}

void CentralDoorLockSwitchRequest::MergeFrom(const CentralDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.CentralDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void CentralDoorLockSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.CentralDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CentralDoorLockSwitchRequest::CopyFrom(const CentralDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.CentralDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CentralDoorLockSwitchRequest::IsInitialized() const {
  return true;
}

void CentralDoorLockSwitchRequest::InternalSwap(CentralDoorLockSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CentralDoorLockSwitchRequest, flag_)
      + sizeof(CentralDoorLockSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(CentralDoorLockSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CentralDoorLockSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightDoorLockSwitchRequest::_Internal {
 public:
};

FrontRightDoorLockSwitchRequest::FrontRightDoorLockSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightDoorLockSwitchRequest)
}
FrontRightDoorLockSwitchRequest::FrontRightDoorLockSwitchRequest(const FrontRightDoorLockSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightDoorLockSwitchRequest)
}

void FrontRightDoorLockSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontRightDoorLockSwitchRequest::~FrontRightDoorLockSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightDoorLockSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightDoorLockSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightDoorLockSwitchRequest::ArenaDtor(void* object) {
  FrontRightDoorLockSwitchRequest* _this = reinterpret_cast< FrontRightDoorLockSwitchRequest* >(object);
  (void)_this;
}
void FrontRightDoorLockSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightDoorLockSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightDoorLockSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightDoorLockSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightDoorLockSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightDoorLockSwitchRequest)
  return target;
}

size_t FrontRightDoorLockSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightDoorLockSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightDoorLockSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightDoorLockSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightDoorLockSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightDoorLockSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightDoorLockSwitchRequest)
    MergeFrom(*source);
  }
}

void FrontRightDoorLockSwitchRequest::MergeFrom(const FrontRightDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontRightDoorLockSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightDoorLockSwitchRequest::CopyFrom(const FrontRightDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightDoorLockSwitchRequest::IsInitialized() const {
  return true;
}

void FrontRightDoorLockSwitchRequest::InternalSwap(FrontRightDoorLockSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontRightDoorLockSwitchRequest, flag_)
      + sizeof(FrontRightDoorLockSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontRightDoorLockSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightDoorLockSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftDoorLockSwitchRequest::_Internal {
 public:
};

FrontLeftDoorLockSwitchRequest::FrontLeftDoorLockSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftDoorLockSwitchRequest)
}
FrontLeftDoorLockSwitchRequest::FrontLeftDoorLockSwitchRequest(const FrontLeftDoorLockSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftDoorLockSwitchRequest)
}

void FrontLeftDoorLockSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

FrontLeftDoorLockSwitchRequest::~FrontLeftDoorLockSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftDoorLockSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftDoorLockSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftDoorLockSwitchRequest::ArenaDtor(void* object) {
  FrontLeftDoorLockSwitchRequest* _this = reinterpret_cast< FrontLeftDoorLockSwitchRequest* >(object);
  (void)_this;
}
void FrontLeftDoorLockSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftDoorLockSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftDoorLockSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftDoorLockSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftDoorLockSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftDoorLockSwitchRequest)
  return target;
}

size_t FrontLeftDoorLockSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftDoorLockSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftDoorLockSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftDoorLockSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftDoorLockSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftDoorLockSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftDoorLockSwitchRequest)
    MergeFrom(*source);
  }
}

void FrontLeftDoorLockSwitchRequest::MergeFrom(const FrontLeftDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void FrontLeftDoorLockSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftDoorLockSwitchRequest::CopyFrom(const FrontLeftDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftDoorLockSwitchRequest::IsInitialized() const {
  return true;
}

void FrontLeftDoorLockSwitchRequest::InternalSwap(FrontLeftDoorLockSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrontLeftDoorLockSwitchRequest, flag_)
      + sizeof(FrontLeftDoorLockSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(FrontLeftDoorLockSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftDoorLockSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightDoorLockSwitchRequest::_Internal {
 public:
};

RearRightDoorLockSwitchRequest::RearRightDoorLockSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightDoorLockSwitchRequest)
}
RearRightDoorLockSwitchRequest::RearRightDoorLockSwitchRequest(const RearRightDoorLockSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightDoorLockSwitchRequest)
}

void RearRightDoorLockSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearRightDoorLockSwitchRequest::~RearRightDoorLockSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightDoorLockSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightDoorLockSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightDoorLockSwitchRequest::ArenaDtor(void* object) {
  RearRightDoorLockSwitchRequest* _this = reinterpret_cast< RearRightDoorLockSwitchRequest* >(object);
  (void)_this;
}
void RearRightDoorLockSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightDoorLockSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightDoorLockSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightDoorLockSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightDoorLockSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightDoorLockSwitchRequest)
  return target;
}

size_t RearRightDoorLockSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightDoorLockSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightDoorLockSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightDoorLockSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightDoorLockSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightDoorLockSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightDoorLockSwitchRequest)
    MergeFrom(*source);
  }
}

void RearRightDoorLockSwitchRequest::MergeFrom(const RearRightDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearRightDoorLockSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightDoorLockSwitchRequest::CopyFrom(const RearRightDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightDoorLockSwitchRequest::IsInitialized() const {
  return true;
}

void RearRightDoorLockSwitchRequest::InternalSwap(RearRightDoorLockSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearRightDoorLockSwitchRequest, flag_)
      + sizeof(RearRightDoorLockSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearRightDoorLockSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightDoorLockSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftDoorLockSwitchRequest::_Internal {
 public:
};

RearLeftDoorLockSwitchRequest::RearLeftDoorLockSwitchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftDoorLockSwitchRequest)
}
RearLeftDoorLockSwitchRequest::RearLeftDoorLockSwitchRequest(const RearLeftDoorLockSwitchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&setmode_, &from.setmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftDoorLockSwitchRequest)
}

void RearLeftDoorLockSwitchRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&setmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
}

RearLeftDoorLockSwitchRequest::~RearLeftDoorLockSwitchRequest() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftDoorLockSwitchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftDoorLockSwitchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftDoorLockSwitchRequest::ArenaDtor(void* object) {
  RearLeftDoorLockSwitchRequest* _this = reinterpret_cast< RearLeftDoorLockSwitchRequest* >(object);
  (void)_this;
}
void RearLeftDoorLockSwitchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftDoorLockSwitchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftDoorLockSwitchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&setmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&setmode_)) + sizeof(flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftDoorLockSwitchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool setMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          setmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftDoorLockSwitchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftDoorLockSwitchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_setmode(), target);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftDoorLockSwitchRequest)
  return target;
}

size_t RearLeftDoorLockSwitchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftDoorLockSwitchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool setMode = 1;
  if (this->setmode() != 0) {
    total_size += 1 + 1;
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftDoorLockSwitchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftDoorLockSwitchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftDoorLockSwitchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftDoorLockSwitchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftDoorLockSwitchRequest)
    MergeFrom(*source);
  }
}

void RearLeftDoorLockSwitchRequest::MergeFrom(const RearLeftDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftDoorLockSwitchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setmode() != 0) {
    _internal_set_setmode(from._internal_setmode());
  }
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void RearLeftDoorLockSwitchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftDoorLockSwitchRequest::CopyFrom(const RearLeftDoorLockSwitchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftDoorLockSwitchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftDoorLockSwitchRequest::IsInitialized() const {
  return true;
}

void RearLeftDoorLockSwitchRequest::InternalSwap(RearLeftDoorLockSwitchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RearLeftDoorLockSwitchRequest, flag_)
      + sizeof(RearLeftDoorLockSwitchRequest::flag_)
      - PROTOBUF_FIELD_OFFSET(RearLeftDoorLockSwitchRequest, setmode_)>(
          reinterpret_cast<char*>(&setmode_),
          reinterpret_cast<char*>(&other->setmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftDoorLockSwitchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLowLightReply::_Internal {
 public:
};

FrontLowLightReply::FrontLowLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLowLightReply)
}
FrontLowLightReply::FrontLowLightReply(const FrontLowLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLowLightReply)
}

void FrontLowLightReply::SharedCtor() {
status_ = false;
}

FrontLowLightReply::~FrontLowLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLowLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLowLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLowLightReply::ArenaDtor(void* object) {
  FrontLowLightReply* _this = reinterpret_cast< FrontLowLightReply* >(object);
  (void)_this;
}
void FrontLowLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLowLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLowLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLowLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLowLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLowLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLowLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLowLightReply)
  return target;
}

size_t FrontLowLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLowLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLowLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLowLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLowLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLowLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLowLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLowLightReply)
    MergeFrom(*source);
  }
}

void FrontLowLightReply::MergeFrom(const FrontLowLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLowLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontLowLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLowLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLowLightReply::CopyFrom(const FrontLowLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLowLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLowLightReply::IsInitialized() const {
  return true;
}

void FrontLowLightReply::InternalSwap(FrontLowLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLowLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontHighLightReply::_Internal {
 public:
};

FrontHighLightReply::FrontHighLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontHighLightReply)
}
FrontHighLightReply::FrontHighLightReply(const FrontHighLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontHighLightReply)
}

void FrontHighLightReply::SharedCtor() {
status_ = false;
}

FrontHighLightReply::~FrontHighLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontHighLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontHighLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontHighLightReply::ArenaDtor(void* object) {
  FrontHighLightReply* _this = reinterpret_cast< FrontHighLightReply* >(object);
  (void)_this;
}
void FrontHighLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontHighLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontHighLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontHighLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontHighLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontHighLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontHighLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontHighLightReply)
  return target;
}

size_t FrontHighLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontHighLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontHighLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontHighLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontHighLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontHighLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontHighLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontHighLightReply)
    MergeFrom(*source);
  }
}

void FrontHighLightReply::MergeFrom(const FrontHighLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontHighLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontHighLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontHighLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontHighLightReply::CopyFrom(const FrontHighLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontHighLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontHighLightReply::IsInitialized() const {
  return true;
}

void FrontHighLightReply::InternalSwap(FrontHighLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontHighLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLightReply::_Internal {
 public:
};

RearLightReply::RearLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLightReply)
}
RearLightReply::RearLightReply(const RearLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLightReply)
}

void RearLightReply::SharedCtor() {
status_ = false;
}

RearLightReply::~RearLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLightReply::ArenaDtor(void* object) {
  RearLightReply* _this = reinterpret_cast< RearLightReply* >(object);
  (void)_this;
}
void RearLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLightReply)
  return target;
}

size_t RearLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLightReply)
    MergeFrom(*source);
  }
}

void RearLightReply::MergeFrom(const RearLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLightReply::CopyFrom(const RearLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLightReply::IsInitialized() const {
  return true;
}

void RearLightReply::InternalSwap(RearLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontDaytimeLightReply::_Internal {
 public:
};

FrontDaytimeLightReply::FrontDaytimeLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontDaytimeLightReply)
}
FrontDaytimeLightReply::FrontDaytimeLightReply(const FrontDaytimeLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontDaytimeLightReply)
}

void FrontDaytimeLightReply::SharedCtor() {
status_ = false;
}

FrontDaytimeLightReply::~FrontDaytimeLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontDaytimeLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontDaytimeLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontDaytimeLightReply::ArenaDtor(void* object) {
  FrontDaytimeLightReply* _this = reinterpret_cast< FrontDaytimeLightReply* >(object);
  (void)_this;
}
void FrontDaytimeLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontDaytimeLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontDaytimeLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontDaytimeLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontDaytimeLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontDaytimeLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontDaytimeLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontDaytimeLightReply)
  return target;
}

size_t FrontDaytimeLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontDaytimeLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontDaytimeLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontDaytimeLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontDaytimeLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontDaytimeLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontDaytimeLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontDaytimeLightReply)
    MergeFrom(*source);
  }
}

void FrontDaytimeLightReply::MergeFrom(const FrontDaytimeLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontDaytimeLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontDaytimeLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontDaytimeLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontDaytimeLightReply::CopyFrom(const FrontDaytimeLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontDaytimeLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontDaytimeLightReply::IsInitialized() const {
  return true;
}

void FrontDaytimeLightReply::InternalSwap(FrontDaytimeLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontDaytimeLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BrakeLightReply::_Internal {
 public:
};

BrakeLightReply::BrakeLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.BrakeLightReply)
}
BrakeLightReply::BrakeLightReply(const BrakeLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.BrakeLightReply)
}

void BrakeLightReply::SharedCtor() {
status_ = false;
}

BrakeLightReply::~BrakeLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.BrakeLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BrakeLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BrakeLightReply::ArenaDtor(void* object) {
  BrakeLightReply* _this = reinterpret_cast< BrakeLightReply* >(object);
  (void)_this;
}
void BrakeLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BrakeLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BrakeLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.BrakeLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BrakeLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BrakeLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.BrakeLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.BrakeLightReply)
  return target;
}

size_t BrakeLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.BrakeLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BrakeLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.BrakeLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BrakeLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BrakeLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.BrakeLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.BrakeLightReply)
    MergeFrom(*source);
  }
}

void BrakeLightReply::MergeFrom(const BrakeLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.BrakeLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void BrakeLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.BrakeLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrakeLightReply::CopyFrom(const BrakeLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.BrakeLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrakeLightReply::IsInitialized() const {
  return true;
}

void BrakeLightReply::InternalSwap(BrakeLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BrakeLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReverseLightReply::_Internal {
 public:
};

ReverseLightReply::ReverseLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ReverseLightReply)
}
ReverseLightReply::ReverseLightReply(const ReverseLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ReverseLightReply)
}

void ReverseLightReply::SharedCtor() {
status_ = false;
}

ReverseLightReply::~ReverseLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.ReverseLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReverseLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReverseLightReply::ArenaDtor(void* object) {
  ReverseLightReply* _this = reinterpret_cast< ReverseLightReply* >(object);
  (void)_this;
}
void ReverseLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReverseLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReverseLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ReverseLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReverseLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReverseLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ReverseLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ReverseLightReply)
  return target;
}

size_t ReverseLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ReverseLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReverseLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ReverseLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ReverseLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReverseLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ReverseLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ReverseLightReply)
    MergeFrom(*source);
  }
}

void ReverseLightReply::MergeFrom(const ReverseLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ReverseLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ReverseLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ReverseLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReverseLightReply::CopyFrom(const ReverseLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ReverseLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReverseLightReply::IsInitialized() const {
  return true;
}

void ReverseLightReply::InternalSwap(ReverseLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReverseLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontFogLightReply::_Internal {
 public:
};

FrontFogLightReply::FrontFogLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontFogLightReply)
}
FrontFogLightReply::FrontFogLightReply(const FrontFogLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontFogLightReply)
}

void FrontFogLightReply::SharedCtor() {
status_ = false;
}

FrontFogLightReply::~FrontFogLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontFogLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontFogLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontFogLightReply::ArenaDtor(void* object) {
  FrontFogLightReply* _this = reinterpret_cast< FrontFogLightReply* >(object);
  (void)_this;
}
void FrontFogLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontFogLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontFogLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontFogLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontFogLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontFogLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontFogLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontFogLightReply)
  return target;
}

size_t FrontFogLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontFogLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontFogLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontFogLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontFogLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontFogLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontFogLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontFogLightReply)
    MergeFrom(*source);
  }
}

void FrontFogLightReply::MergeFrom(const FrontFogLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontFogLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontFogLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontFogLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontFogLightReply::CopyFrom(const FrontFogLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontFogLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontFogLightReply::IsInitialized() const {
  return true;
}

void FrontFogLightReply::InternalSwap(FrontFogLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontFogLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearFogLightReply::_Internal {
 public:
};

RearFogLightReply::RearFogLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearFogLightReply)
}
RearFogLightReply::RearFogLightReply(const RearFogLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearFogLightReply)
}

void RearFogLightReply::SharedCtor() {
status_ = false;
}

RearFogLightReply::~RearFogLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearFogLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearFogLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearFogLightReply::ArenaDtor(void* object) {
  RearFogLightReply* _this = reinterpret_cast< RearFogLightReply* >(object);
  (void)_this;
}
void RearFogLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearFogLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearFogLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearFogLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearFogLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearFogLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearFogLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearFogLightReply)
  return target;
}

size_t RearFogLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearFogLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearFogLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearFogLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearFogLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearFogLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearFogLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearFogLightReply)
    MergeFrom(*source);
  }
}

void RearFogLightReply::MergeFrom(const RearFogLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearFogLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearFogLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearFogLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearFogLightReply::CopyFrom(const RearFogLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearFogLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearFogLightReply::IsInitialized() const {
  return true;
}

void RearFogLightReply::InternalSwap(RearFogLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearFogLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClearanceLampReply::_Internal {
 public:
};

ClearanceLampReply::ClearanceLampReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ClearanceLampReply)
}
ClearanceLampReply::ClearanceLampReply(const ClearanceLampReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ClearanceLampReply)
}

void ClearanceLampReply::SharedCtor() {
status_ = false;
}

ClearanceLampReply::~ClearanceLampReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.ClearanceLampReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearanceLampReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearanceLampReply::ArenaDtor(void* object) {
  ClearanceLampReply* _this = reinterpret_cast< ClearanceLampReply* >(object);
  (void)_this;
}
void ClearanceLampReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearanceLampReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClearanceLampReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ClearanceLampReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearanceLampReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearanceLampReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ClearanceLampReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ClearanceLampReply)
  return target;
}

size_t ClearanceLampReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ClearanceLampReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearanceLampReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ClearanceLampReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearanceLampReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearanceLampReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ClearanceLampReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ClearanceLampReply)
    MergeFrom(*source);
  }
}

void ClearanceLampReply::MergeFrom(const ClearanceLampReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ClearanceLampReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ClearanceLampReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ClearanceLampReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearanceLampReply::CopyFrom(const ClearanceLampReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ClearanceLampReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearanceLampReply::IsInitialized() const {
  return true;
}

void ClearanceLampReply::InternalSwap(ClearanceLampReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearanceLampReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftBlinkerLightReply::_Internal {
 public:
};

FrontLeftBlinkerLightReply::FrontLeftBlinkerLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftBlinkerLightReply)
}
FrontLeftBlinkerLightReply::FrontLeftBlinkerLightReply(const FrontLeftBlinkerLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftBlinkerLightReply)
}

void FrontLeftBlinkerLightReply::SharedCtor() {
status_ = false;
}

FrontLeftBlinkerLightReply::~FrontLeftBlinkerLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftBlinkerLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftBlinkerLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftBlinkerLightReply::ArenaDtor(void* object) {
  FrontLeftBlinkerLightReply* _this = reinterpret_cast< FrontLeftBlinkerLightReply* >(object);
  (void)_this;
}
void FrontLeftBlinkerLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftBlinkerLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftBlinkerLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftBlinkerLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftBlinkerLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftBlinkerLightReply)
  return target;
}

size_t FrontLeftBlinkerLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftBlinkerLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftBlinkerLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftBlinkerLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftBlinkerLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftBlinkerLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftBlinkerLightReply)
    MergeFrom(*source);
  }
}

void FrontLeftBlinkerLightReply::MergeFrom(const FrontLeftBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontLeftBlinkerLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftBlinkerLightReply::CopyFrom(const FrontLeftBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftBlinkerLightReply::IsInitialized() const {
  return true;
}

void FrontLeftBlinkerLightReply::InternalSwap(FrontLeftBlinkerLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftBlinkerLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightBlinkerLightReply::_Internal {
 public:
};

FrontRightBlinkerLightReply::FrontRightBlinkerLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightBlinkerLightReply)
}
FrontRightBlinkerLightReply::FrontRightBlinkerLightReply(const FrontRightBlinkerLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightBlinkerLightReply)
}

void FrontRightBlinkerLightReply::SharedCtor() {
status_ = false;
}

FrontRightBlinkerLightReply::~FrontRightBlinkerLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightBlinkerLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightBlinkerLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightBlinkerLightReply::ArenaDtor(void* object) {
  FrontRightBlinkerLightReply* _this = reinterpret_cast< FrontRightBlinkerLightReply* >(object);
  (void)_this;
}
void FrontRightBlinkerLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightBlinkerLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightBlinkerLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightBlinkerLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightBlinkerLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightBlinkerLightReply)
  return target;
}

size_t FrontRightBlinkerLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightBlinkerLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightBlinkerLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightBlinkerLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightBlinkerLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightBlinkerLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightBlinkerLightReply)
    MergeFrom(*source);
  }
}

void FrontRightBlinkerLightReply::MergeFrom(const FrontRightBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontRightBlinkerLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightBlinkerLightReply::CopyFrom(const FrontRightBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightBlinkerLightReply::IsInitialized() const {
  return true;
}

void FrontRightBlinkerLightReply::InternalSwap(FrontRightBlinkerLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightBlinkerLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftBlinkerLightReply::_Internal {
 public:
};

RearLeftBlinkerLightReply::RearLeftBlinkerLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftBlinkerLightReply)
}
RearLeftBlinkerLightReply::RearLeftBlinkerLightReply(const RearLeftBlinkerLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftBlinkerLightReply)
}

void RearLeftBlinkerLightReply::SharedCtor() {
status_ = false;
}

RearLeftBlinkerLightReply::~RearLeftBlinkerLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftBlinkerLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftBlinkerLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftBlinkerLightReply::ArenaDtor(void* object) {
  RearLeftBlinkerLightReply* _this = reinterpret_cast< RearLeftBlinkerLightReply* >(object);
  (void)_this;
}
void RearLeftBlinkerLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftBlinkerLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftBlinkerLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftBlinkerLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftBlinkerLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftBlinkerLightReply)
  return target;
}

size_t RearLeftBlinkerLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftBlinkerLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftBlinkerLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftBlinkerLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftBlinkerLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftBlinkerLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftBlinkerLightReply)
    MergeFrom(*source);
  }
}

void RearLeftBlinkerLightReply::MergeFrom(const RearLeftBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearLeftBlinkerLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftBlinkerLightReply::CopyFrom(const RearLeftBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftBlinkerLightReply::IsInitialized() const {
  return true;
}

void RearLeftBlinkerLightReply::InternalSwap(RearLeftBlinkerLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftBlinkerLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightBlinkerLightReply::_Internal {
 public:
};

RearRightBlinkerLightReply::RearRightBlinkerLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightBlinkerLightReply)
}
RearRightBlinkerLightReply::RearRightBlinkerLightReply(const RearRightBlinkerLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightBlinkerLightReply)
}

void RearRightBlinkerLightReply::SharedCtor() {
status_ = false;
}

RearRightBlinkerLightReply::~RearRightBlinkerLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightBlinkerLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightBlinkerLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightBlinkerLightReply::ArenaDtor(void* object) {
  RearRightBlinkerLightReply* _this = reinterpret_cast< RearRightBlinkerLightReply* >(object);
  (void)_this;
}
void RearRightBlinkerLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightBlinkerLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightBlinkerLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightBlinkerLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightBlinkerLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightBlinkerLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightBlinkerLightReply)
  return target;
}

size_t RearRightBlinkerLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightBlinkerLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightBlinkerLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightBlinkerLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightBlinkerLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightBlinkerLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightBlinkerLightReply)
    MergeFrom(*source);
  }
}

void RearRightBlinkerLightReply::MergeFrom(const RearRightBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightBlinkerLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearRightBlinkerLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightBlinkerLightReply::CopyFrom(const RearRightBlinkerLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightBlinkerLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightBlinkerLightReply::IsInitialized() const {
  return true;
}

void RearRightBlinkerLightReply::InternalSwap(RearRightBlinkerLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightBlinkerLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontWiperReply::_Internal {
 public:
};

FrontWiperReply::FrontWiperReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontWiperReply)
}
FrontWiperReply::FrontWiperReply(const FrontWiperReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontWiperReply)
}

void FrontWiperReply::SharedCtor() {
status_ = false;
}

FrontWiperReply::~FrontWiperReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontWiperReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontWiperReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontWiperReply::ArenaDtor(void* object) {
  FrontWiperReply* _this = reinterpret_cast< FrontWiperReply* >(object);
  (void)_this;
}
void FrontWiperReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontWiperReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontWiperReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontWiperReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontWiperReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontWiperReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontWiperReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontWiperReply)
  return target;
}

size_t FrontWiperReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontWiperReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontWiperReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontWiperReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontWiperReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontWiperReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontWiperReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontWiperReply)
    MergeFrom(*source);
  }
}

void FrontWiperReply::MergeFrom(const FrontWiperReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontWiperReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontWiperReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontWiperReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontWiperReply::CopyFrom(const FrontWiperReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontWiperReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontWiperReply::IsInitialized() const {
  return true;
}

void FrontWiperReply::InternalSwap(FrontWiperReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontWiperReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearWiperReply::_Internal {
 public:
};

RearWiperReply::RearWiperReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearWiperReply)
}
RearWiperReply::RearWiperReply(const RearWiperReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearWiperReply)
}

void RearWiperReply::SharedCtor() {
status_ = false;
}

RearWiperReply::~RearWiperReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearWiperReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearWiperReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearWiperReply::ArenaDtor(void* object) {
  RearWiperReply* _this = reinterpret_cast< RearWiperReply* >(object);
  (void)_this;
}
void RearWiperReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearWiperReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearWiperReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearWiperReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearWiperReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearWiperReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearWiperReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearWiperReply)
  return target;
}

size_t RearWiperReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearWiperReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearWiperReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearWiperReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearWiperReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearWiperReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearWiperReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearWiperReply)
    MergeFrom(*source);
  }
}

void RearWiperReply::MergeFrom(const RearWiperReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearWiperReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearWiperReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearWiperReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearWiperReply::CopyFrom(const RearWiperReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearWiperReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearWiperReply::IsInitialized() const {
  return true;
}

void RearWiperReply::InternalSwap(RearWiperReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearWiperReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LeftSideMirrorReply::_Internal {
 public:
};

LeftSideMirrorReply::LeftSideMirrorReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.LeftSideMirrorReply)
}
LeftSideMirrorReply::LeftSideMirrorReply(const LeftSideMirrorReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  angle_ = from.angle_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.LeftSideMirrorReply)
}

void LeftSideMirrorReply::SharedCtor() {
angle_ = 0;
}

LeftSideMirrorReply::~LeftSideMirrorReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.LeftSideMirrorReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LeftSideMirrorReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LeftSideMirrorReply::ArenaDtor(void* object) {
  LeftSideMirrorReply* _this = reinterpret_cast< LeftSideMirrorReply* >(object);
  (void)_this;
}
void LeftSideMirrorReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LeftSideMirrorReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LeftSideMirrorReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.LeftSideMirrorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  angle_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeftSideMirrorReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double angle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LeftSideMirrorReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.LeftSideMirrorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double angle = 1;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.LeftSideMirrorReply)
  return target;
}

size_t LeftSideMirrorReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.LeftSideMirrorReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double angle = 1;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeftSideMirrorReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.LeftSideMirrorReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LeftSideMirrorReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LeftSideMirrorReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.LeftSideMirrorReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.LeftSideMirrorReply)
    MergeFrom(*source);
  }
}

void LeftSideMirrorReply::MergeFrom(const LeftSideMirrorReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.LeftSideMirrorReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.angle() <= 0 && from.angle() >= 0)) {
    _internal_set_angle(from._internal_angle());
  }
}

void LeftSideMirrorReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.LeftSideMirrorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeftSideMirrorReply::CopyFrom(const LeftSideMirrorReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.LeftSideMirrorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeftSideMirrorReply::IsInitialized() const {
  return true;
}

void LeftSideMirrorReply::InternalSwap(LeftSideMirrorReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(angle_, other->angle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LeftSideMirrorReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RightSideMirrorReply::_Internal {
 public:
};

RightSideMirrorReply::RightSideMirrorReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RightSideMirrorReply)
}
RightSideMirrorReply::RightSideMirrorReply(const RightSideMirrorReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  angle_ = from.angle_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RightSideMirrorReply)
}

void RightSideMirrorReply::SharedCtor() {
angle_ = 0;
}

RightSideMirrorReply::~RightSideMirrorReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RightSideMirrorReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RightSideMirrorReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RightSideMirrorReply::ArenaDtor(void* object) {
  RightSideMirrorReply* _this = reinterpret_cast< RightSideMirrorReply* >(object);
  (void)_this;
}
void RightSideMirrorReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RightSideMirrorReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RightSideMirrorReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RightSideMirrorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  angle_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RightSideMirrorReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double angle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RightSideMirrorReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RightSideMirrorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double angle = 1;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RightSideMirrorReply)
  return target;
}

size_t RightSideMirrorReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RightSideMirrorReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double angle = 1;
  if (!(this->angle() <= 0 && this->angle() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RightSideMirrorReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RightSideMirrorReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RightSideMirrorReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RightSideMirrorReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RightSideMirrorReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RightSideMirrorReply)
    MergeFrom(*source);
  }
}

void RightSideMirrorReply::MergeFrom(const RightSideMirrorReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RightSideMirrorReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.angle() <= 0 && from.angle() >= 0)) {
    _internal_set_angle(from._internal_angle());
  }
}

void RightSideMirrorReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RightSideMirrorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RightSideMirrorReply::CopyFrom(const RightSideMirrorReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RightSideMirrorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RightSideMirrorReply::IsInitialized() const {
  return true;
}

void RightSideMirrorReply::InternalSwap(RightSideMirrorReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(angle_, other->angle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RightSideMirrorReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightDoorReply::_Internal {
 public:
};

FrontRightDoorReply::FrontRightDoorReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightDoorReply)
}
FrontRightDoorReply::FrontRightDoorReply(const FrontRightDoorReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightDoorReply)
}

void FrontRightDoorReply::SharedCtor() {
status_ = false;
}

FrontRightDoorReply::~FrontRightDoorReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightDoorReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightDoorReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightDoorReply::ArenaDtor(void* object) {
  FrontRightDoorReply* _this = reinterpret_cast< FrontRightDoorReply* >(object);
  (void)_this;
}
void FrontRightDoorReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightDoorReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightDoorReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightDoorReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightDoorReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightDoorReply)
  return target;
}

size_t FrontRightDoorReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightDoorReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightDoorReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightDoorReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightDoorReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightDoorReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightDoorReply)
    MergeFrom(*source);
  }
}

void FrontRightDoorReply::MergeFrom(const FrontRightDoorReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontRightDoorReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightDoorReply::CopyFrom(const FrontRightDoorReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightDoorReply::IsInitialized() const {
  return true;
}

void FrontRightDoorReply::InternalSwap(FrontRightDoorReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightDoorReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftDoorReply::_Internal {
 public:
};

FrontLeftDoorReply::FrontLeftDoorReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftDoorReply)
}
FrontLeftDoorReply::FrontLeftDoorReply(const FrontLeftDoorReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftDoorReply)
}

void FrontLeftDoorReply::SharedCtor() {
status_ = false;
}

FrontLeftDoorReply::~FrontLeftDoorReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftDoorReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftDoorReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftDoorReply::ArenaDtor(void* object) {
  FrontLeftDoorReply* _this = reinterpret_cast< FrontLeftDoorReply* >(object);
  (void)_this;
}
void FrontLeftDoorReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftDoorReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftDoorReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftDoorReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftDoorReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftDoorReply)
  return target;
}

size_t FrontLeftDoorReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftDoorReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftDoorReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftDoorReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftDoorReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftDoorReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftDoorReply)
    MergeFrom(*source);
  }
}

void FrontLeftDoorReply::MergeFrom(const FrontLeftDoorReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontLeftDoorReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftDoorReply::CopyFrom(const FrontLeftDoorReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftDoorReply::IsInitialized() const {
  return true;
}

void FrontLeftDoorReply::InternalSwap(FrontLeftDoorReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftDoorReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightDoorReply::_Internal {
 public:
};

RearRightDoorReply::RearRightDoorReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightDoorReply)
}
RearRightDoorReply::RearRightDoorReply(const RearRightDoorReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightDoorReply)
}

void RearRightDoorReply::SharedCtor() {
status_ = false;
}

RearRightDoorReply::~RearRightDoorReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightDoorReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightDoorReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightDoorReply::ArenaDtor(void* object) {
  RearRightDoorReply* _this = reinterpret_cast< RearRightDoorReply* >(object);
  (void)_this;
}
void RearRightDoorReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightDoorReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightDoorReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightDoorReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightDoorReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightDoorReply)
  return target;
}

size_t RearRightDoorReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightDoorReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightDoorReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightDoorReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightDoorReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightDoorReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightDoorReply)
    MergeFrom(*source);
  }
}

void RearRightDoorReply::MergeFrom(const RearRightDoorReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearRightDoorReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightDoorReply::CopyFrom(const RearRightDoorReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightDoorReply::IsInitialized() const {
  return true;
}

void RearRightDoorReply::InternalSwap(RearRightDoorReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightDoorReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftDoorReply::_Internal {
 public:
};

RearLeftDoorReply::RearLeftDoorReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftDoorReply)
}
RearLeftDoorReply::RearLeftDoorReply(const RearLeftDoorReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftDoorReply)
}

void RearLeftDoorReply::SharedCtor() {
status_ = false;
}

RearLeftDoorReply::~RearLeftDoorReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftDoorReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftDoorReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftDoorReply::ArenaDtor(void* object) {
  RearLeftDoorReply* _this = reinterpret_cast< RearLeftDoorReply* >(object);
  (void)_this;
}
void RearLeftDoorReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftDoorReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftDoorReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftDoorReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftDoorReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftDoorReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftDoorReply)
  return target;
}

size_t RearLeftDoorReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftDoorReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftDoorReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftDoorReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftDoorReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftDoorReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftDoorReply)
    MergeFrom(*source);
  }
}

void RearLeftDoorReply::MergeFrom(const RearLeftDoorReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftDoorReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearLeftDoorReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftDoorReply::CopyFrom(const RearLeftDoorReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftDoorReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftDoorReply::IsInitialized() const {
  return true;
}

void RearLeftDoorReply::InternalSwap(RearLeftDoorReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftDoorReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TrunkReply::_Internal {
 public:
};

TrunkReply::TrunkReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.TrunkReply)
}
TrunkReply::TrunkReply(const TrunkReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.TrunkReply)
}

void TrunkReply::SharedCtor() {
status_ = false;
}

TrunkReply::~TrunkReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.TrunkReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TrunkReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TrunkReply::ArenaDtor(void* object) {
  TrunkReply* _this = reinterpret_cast< TrunkReply* >(object);
  (void)_this;
}
void TrunkReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TrunkReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TrunkReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.TrunkReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TrunkReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrunkReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.TrunkReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.TrunkReply)
  return target;
}

size_t TrunkReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.TrunkReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrunkReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.TrunkReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TrunkReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrunkReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.TrunkReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.TrunkReply)
    MergeFrom(*source);
  }
}

void TrunkReply::MergeFrom(const TrunkReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.TrunkReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void TrunkReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.TrunkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrunkReply::CopyFrom(const TrunkReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.TrunkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrunkReply::IsInitialized() const {
  return true;
}

void TrunkReply::InternalSwap(TrunkReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrunkReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SunRoofReply::_Internal {
 public:
};

SunRoofReply::SunRoofReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.SunRoofReply)
}
SunRoofReply::SunRoofReply(const SunRoofReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.SunRoofReply)
}

void SunRoofReply::SharedCtor() {
status_ = false;
}

SunRoofReply::~SunRoofReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.SunRoofReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SunRoofReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SunRoofReply::ArenaDtor(void* object) {
  SunRoofReply* _this = reinterpret_cast< SunRoofReply* >(object);
  (void)_this;
}
void SunRoofReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SunRoofReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SunRoofReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.SunRoofReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SunRoofReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SunRoofReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.SunRoofReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.SunRoofReply)
  return target;
}

size_t SunRoofReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.SunRoofReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SunRoofReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.SunRoofReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SunRoofReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SunRoofReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.SunRoofReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.SunRoofReply)
    MergeFrom(*source);
  }
}

void SunRoofReply::MergeFrom(const SunRoofReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.SunRoofReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SunRoofReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.SunRoofReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SunRoofReply::CopyFrom(const SunRoofReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.SunRoofReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SunRoofReply::IsInitialized() const {
  return true;
}

void SunRoofReply::InternalSwap(SunRoofReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SunRoofReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightPowerWindowsReply::_Internal {
 public:
};

FrontRightPowerWindowsReply::FrontRightPowerWindowsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightPowerWindowsReply)
}
FrontRightPowerWindowsReply::FrontRightPowerWindowsReply(const FrontRightPowerWindowsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  highlevel_ = from.highlevel_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightPowerWindowsReply)
}

void FrontRightPowerWindowsReply::SharedCtor() {
highlevel_ = 0;
}

FrontRightPowerWindowsReply::~FrontRightPowerWindowsReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightPowerWindowsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightPowerWindowsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightPowerWindowsReply::ArenaDtor(void* object) {
  FrontRightPowerWindowsReply* _this = reinterpret_cast< FrontRightPowerWindowsReply* >(object);
  (void)_this;
}
void FrontRightPowerWindowsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightPowerWindowsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightPowerWindowsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  highlevel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightPowerWindowsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double highLevel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightPowerWindowsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightPowerWindowsReply)
  return target;
}

size_t FrontRightPowerWindowsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightPowerWindowsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightPowerWindowsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightPowerWindowsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightPowerWindowsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightPowerWindowsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightPowerWindowsReply)
    MergeFrom(*source);
  }
}

void FrontRightPowerWindowsReply::MergeFrom(const FrontRightPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
}

void FrontRightPowerWindowsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightPowerWindowsReply::CopyFrom(const FrontRightPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightPowerWindowsReply::IsInitialized() const {
  return true;
}

void FrontRightPowerWindowsReply::InternalSwap(FrontRightPowerWindowsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(highlevel_, other->highlevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightPowerWindowsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftPowerWindowsReply::_Internal {
 public:
};

FrontLeftPowerWindowsReply::FrontLeftPowerWindowsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftPowerWindowsReply)
}
FrontLeftPowerWindowsReply::FrontLeftPowerWindowsReply(const FrontLeftPowerWindowsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  highlevel_ = from.highlevel_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftPowerWindowsReply)
}

void FrontLeftPowerWindowsReply::SharedCtor() {
highlevel_ = 0;
}

FrontLeftPowerWindowsReply::~FrontLeftPowerWindowsReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftPowerWindowsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftPowerWindowsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftPowerWindowsReply::ArenaDtor(void* object) {
  FrontLeftPowerWindowsReply* _this = reinterpret_cast< FrontLeftPowerWindowsReply* >(object);
  (void)_this;
}
void FrontLeftPowerWindowsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftPowerWindowsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftPowerWindowsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  highlevel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftPowerWindowsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double highLevel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftPowerWindowsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftPowerWindowsReply)
  return target;
}

size_t FrontLeftPowerWindowsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftPowerWindowsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftPowerWindowsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftPowerWindowsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftPowerWindowsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftPowerWindowsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftPowerWindowsReply)
    MergeFrom(*source);
  }
}

void FrontLeftPowerWindowsReply::MergeFrom(const FrontLeftPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
}

void FrontLeftPowerWindowsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftPowerWindowsReply::CopyFrom(const FrontLeftPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftPowerWindowsReply::IsInitialized() const {
  return true;
}

void FrontLeftPowerWindowsReply::InternalSwap(FrontLeftPowerWindowsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(highlevel_, other->highlevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftPowerWindowsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightPowerWindowsReply::_Internal {
 public:
};

RearRightPowerWindowsReply::RearRightPowerWindowsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightPowerWindowsReply)
}
RearRightPowerWindowsReply::RearRightPowerWindowsReply(const RearRightPowerWindowsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  highlevel_ = from.highlevel_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightPowerWindowsReply)
}

void RearRightPowerWindowsReply::SharedCtor() {
highlevel_ = 0;
}

RearRightPowerWindowsReply::~RearRightPowerWindowsReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightPowerWindowsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightPowerWindowsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightPowerWindowsReply::ArenaDtor(void* object) {
  RearRightPowerWindowsReply* _this = reinterpret_cast< RearRightPowerWindowsReply* >(object);
  (void)_this;
}
void RearRightPowerWindowsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightPowerWindowsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightPowerWindowsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  highlevel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightPowerWindowsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double highLevel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightPowerWindowsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightPowerWindowsReply)
  return target;
}

size_t RearRightPowerWindowsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightPowerWindowsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightPowerWindowsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightPowerWindowsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightPowerWindowsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightPowerWindowsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightPowerWindowsReply)
    MergeFrom(*source);
  }
}

void RearRightPowerWindowsReply::MergeFrom(const RearRightPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
}

void RearRightPowerWindowsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightPowerWindowsReply::CopyFrom(const RearRightPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightPowerWindowsReply::IsInitialized() const {
  return true;
}

void RearRightPowerWindowsReply::InternalSwap(RearRightPowerWindowsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(highlevel_, other->highlevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightPowerWindowsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftPowerWindowsReply::_Internal {
 public:
};

RearLeftPowerWindowsReply::RearLeftPowerWindowsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftPowerWindowsReply)
}
RearLeftPowerWindowsReply::RearLeftPowerWindowsReply(const RearLeftPowerWindowsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  highlevel_ = from.highlevel_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftPowerWindowsReply)
}

void RearLeftPowerWindowsReply::SharedCtor() {
highlevel_ = 0;
}

RearLeftPowerWindowsReply::~RearLeftPowerWindowsReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftPowerWindowsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftPowerWindowsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftPowerWindowsReply::ArenaDtor(void* object) {
  RearLeftPowerWindowsReply* _this = reinterpret_cast< RearLeftPowerWindowsReply* >(object);
  (void)_this;
}
void RearLeftPowerWindowsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftPowerWindowsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftPowerWindowsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  highlevel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftPowerWindowsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double highLevel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          highlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftPowerWindowsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftPowerWindowsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_highlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftPowerWindowsReply)
  return target;
}

size_t RearLeftPowerWindowsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftPowerWindowsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double highLevel = 1;
  if (!(this->highlevel() <= 0 && this->highlevel() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftPowerWindowsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftPowerWindowsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftPowerWindowsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftPowerWindowsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftPowerWindowsReply)
    MergeFrom(*source);
  }
}

void RearLeftPowerWindowsReply::MergeFrom(const RearLeftPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftPowerWindowsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.highlevel() <= 0 && from.highlevel() >= 0)) {
    _internal_set_highlevel(from._internal_highlevel());
  }
}

void RearLeftPowerWindowsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftPowerWindowsReply::CopyFrom(const RearLeftPowerWindowsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftPowerWindowsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftPowerWindowsReply::IsInitialized() const {
  return true;
}

void RearLeftPowerWindowsReply::InternalSwap(RearLeftPowerWindowsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(highlevel_, other->highlevel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftPowerWindowsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SideMirrorSwitchReply::_Internal {
 public:
};

SideMirrorSwitchReply::SideMirrorSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.SideMirrorSwitchReply)
}
SideMirrorSwitchReply::SideMirrorSwitchReply(const SideMirrorSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.SideMirrorSwitchReply)
}

void SideMirrorSwitchReply::SharedCtor() {
status_ = false;
}

SideMirrorSwitchReply::~SideMirrorSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.SideMirrorSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SideMirrorSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SideMirrorSwitchReply::ArenaDtor(void* object) {
  SideMirrorSwitchReply* _this = reinterpret_cast< SideMirrorSwitchReply* >(object);
  (void)_this;
}
void SideMirrorSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SideMirrorSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SideMirrorSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.SideMirrorSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SideMirrorSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SideMirrorSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.SideMirrorSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.SideMirrorSwitchReply)
  return target;
}

size_t SideMirrorSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.SideMirrorSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SideMirrorSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.SideMirrorSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SideMirrorSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SideMirrorSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.SideMirrorSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.SideMirrorSwitchReply)
    MergeFrom(*source);
  }
}

void SideMirrorSwitchReply::MergeFrom(const SideMirrorSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.SideMirrorSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SideMirrorSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.SideMirrorSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SideMirrorSwitchReply::CopyFrom(const SideMirrorSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.SideMirrorSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SideMirrorSwitchReply::IsInitialized() const {
  return true;
}

void SideMirrorSwitchReply::InternalSwap(SideMirrorSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SideMirrorSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InstrumentLightReply::_Internal {
 public:
};

InstrumentLightReply::InstrumentLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.InstrumentLightReply)
}
InstrumentLightReply::InstrumentLightReply(const InstrumentLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.InstrumentLightReply)
}

void InstrumentLightReply::SharedCtor() {
status_ = false;
}

InstrumentLightReply::~InstrumentLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.InstrumentLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InstrumentLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InstrumentLightReply::ArenaDtor(void* object) {
  InstrumentLightReply* _this = reinterpret_cast< InstrumentLightReply* >(object);
  (void)_this;
}
void InstrumentLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InstrumentLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InstrumentLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.InstrumentLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InstrumentLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InstrumentLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.InstrumentLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.InstrumentLightReply)
  return target;
}

size_t InstrumentLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.InstrumentLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstrumentLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.InstrumentLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const InstrumentLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InstrumentLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.InstrumentLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.InstrumentLightReply)
    MergeFrom(*source);
  }
}

void InstrumentLightReply::MergeFrom(const InstrumentLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.InstrumentLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void InstrumentLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.InstrumentLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstrumentLightReply::CopyFrom(const InstrumentLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.InstrumentLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstrumentLightReply::IsInitialized() const {
  return true;
}

void InstrumentLightReply::InternalSwap(InstrumentLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InstrumentLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PassgenerRoomDomeLightReply::_Internal {
 public:
};

PassgenerRoomDomeLightReply::PassgenerRoomDomeLightReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.PassgenerRoomDomeLightReply)
}
PassgenerRoomDomeLightReply::PassgenerRoomDomeLightReply(const PassgenerRoomDomeLightReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.PassgenerRoomDomeLightReply)
}

void PassgenerRoomDomeLightReply::SharedCtor() {
status_ = false;
}

PassgenerRoomDomeLightReply::~PassgenerRoomDomeLightReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.PassgenerRoomDomeLightReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PassgenerRoomDomeLightReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PassgenerRoomDomeLightReply::ArenaDtor(void* object) {
  PassgenerRoomDomeLightReply* _this = reinterpret_cast< PassgenerRoomDomeLightReply* >(object);
  (void)_this;
}
void PassgenerRoomDomeLightReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PassgenerRoomDomeLightReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PassgenerRoomDomeLightReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.PassgenerRoomDomeLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PassgenerRoomDomeLightReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PassgenerRoomDomeLightReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.PassgenerRoomDomeLightReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.PassgenerRoomDomeLightReply)
  return target;
}

size_t PassgenerRoomDomeLightReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.PassgenerRoomDomeLightReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PassgenerRoomDomeLightReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.PassgenerRoomDomeLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PassgenerRoomDomeLightReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PassgenerRoomDomeLightReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.PassgenerRoomDomeLightReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.PassgenerRoomDomeLightReply)
    MergeFrom(*source);
  }
}

void PassgenerRoomDomeLightReply::MergeFrom(const PassgenerRoomDomeLightReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.PassgenerRoomDomeLightReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void PassgenerRoomDomeLightReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.PassgenerRoomDomeLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassgenerRoomDomeLightReply::CopyFrom(const PassgenerRoomDomeLightReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.PassgenerRoomDomeLightReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassgenerRoomDomeLightReply::IsInitialized() const {
  return true;
}

void PassgenerRoomDomeLightReply::InternalSwap(PassgenerRoomDomeLightReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PassgenerRoomDomeLightReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReadingLightDriverSideReply::_Internal {
 public:
};

ReadingLightDriverSideReply::ReadingLightDriverSideReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ReadingLightDriverSideReply)
}
ReadingLightDriverSideReply::ReadingLightDriverSideReply(const ReadingLightDriverSideReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ReadingLightDriverSideReply)
}

void ReadingLightDriverSideReply::SharedCtor() {
status_ = false;
}

ReadingLightDriverSideReply::~ReadingLightDriverSideReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.ReadingLightDriverSideReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadingLightDriverSideReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReadingLightDriverSideReply::ArenaDtor(void* object) {
  ReadingLightDriverSideReply* _this = reinterpret_cast< ReadingLightDriverSideReply* >(object);
  (void)_this;
}
void ReadingLightDriverSideReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadingLightDriverSideReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadingLightDriverSideReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ReadingLightDriverSideReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadingLightDriverSideReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadingLightDriverSideReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ReadingLightDriverSideReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ReadingLightDriverSideReply)
  return target;
}

size_t ReadingLightDriverSideReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ReadingLightDriverSideReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingLightDriverSideReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ReadingLightDriverSideReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingLightDriverSideReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadingLightDriverSideReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ReadingLightDriverSideReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ReadingLightDriverSideReply)
    MergeFrom(*source);
  }
}

void ReadingLightDriverSideReply::MergeFrom(const ReadingLightDriverSideReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ReadingLightDriverSideReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ReadingLightDriverSideReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ReadingLightDriverSideReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingLightDriverSideReply::CopyFrom(const ReadingLightDriverSideReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ReadingLightDriverSideReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingLightDriverSideReply::IsInitialized() const {
  return true;
}

void ReadingLightDriverSideReply::InternalSwap(ReadingLightDriverSideReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadingLightDriverSideReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReadingLightPassgenerSideReply::_Internal {
 public:
};

ReadingLightPassgenerSideReply::ReadingLightPassgenerSideReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.ReadingLightPassgenerSideReply)
}
ReadingLightPassgenerSideReply::ReadingLightPassgenerSideReply(const ReadingLightPassgenerSideReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.ReadingLightPassgenerSideReply)
}

void ReadingLightPassgenerSideReply::SharedCtor() {
status_ = false;
}

ReadingLightPassgenerSideReply::~ReadingLightPassgenerSideReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.ReadingLightPassgenerSideReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReadingLightPassgenerSideReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReadingLightPassgenerSideReply::ArenaDtor(void* object) {
  ReadingLightPassgenerSideReply* _this = reinterpret_cast< ReadingLightPassgenerSideReply* >(object);
  (void)_this;
}
void ReadingLightPassgenerSideReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadingLightPassgenerSideReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadingLightPassgenerSideReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.ReadingLightPassgenerSideReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadingLightPassgenerSideReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReadingLightPassgenerSideReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.ReadingLightPassgenerSideReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.ReadingLightPassgenerSideReply)
  return target;
}

size_t ReadingLightPassgenerSideReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.ReadingLightPassgenerSideReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingLightPassgenerSideReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.ReadingLightPassgenerSideReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingLightPassgenerSideReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReadingLightPassgenerSideReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.ReadingLightPassgenerSideReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.ReadingLightPassgenerSideReply)
    MergeFrom(*source);
  }
}

void ReadingLightPassgenerSideReply::MergeFrom(const ReadingLightPassgenerSideReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.ReadingLightPassgenerSideReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void ReadingLightPassgenerSideReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.ReadingLightPassgenerSideReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingLightPassgenerSideReply::CopyFrom(const ReadingLightPassgenerSideReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.ReadingLightPassgenerSideReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingLightPassgenerSideReply::IsInitialized() const {
  return true;
}

void ReadingLightPassgenerSideReply::InternalSwap(ReadingLightPassgenerSideReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadingLightPassgenerSideReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightPowerWindowsSwitchReply::_Internal {
 public:
};

FrontRightPowerWindowsSwitchReply::FrontRightPowerWindowsSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightPowerWindowsSwitchReply)
}
FrontRightPowerWindowsSwitchReply::FrontRightPowerWindowsSwitchReply(const FrontRightPowerWindowsSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightPowerWindowsSwitchReply)
}

void FrontRightPowerWindowsSwitchReply::SharedCtor() {
status_ = false;
}

FrontRightPowerWindowsSwitchReply::~FrontRightPowerWindowsSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightPowerWindowsSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightPowerWindowsSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightPowerWindowsSwitchReply::ArenaDtor(void* object) {
  FrontRightPowerWindowsSwitchReply* _this = reinterpret_cast< FrontRightPowerWindowsSwitchReply* >(object);
  (void)_this;
}
void FrontRightPowerWindowsSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightPowerWindowsSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightPowerWindowsSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightPowerWindowsSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightPowerWindowsSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightPowerWindowsSwitchReply)
  return target;
}

size_t FrontRightPowerWindowsSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightPowerWindowsSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightPowerWindowsSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightPowerWindowsSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightPowerWindowsSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightPowerWindowsSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightPowerWindowsSwitchReply)
    MergeFrom(*source);
  }
}

void FrontRightPowerWindowsSwitchReply::MergeFrom(const FrontRightPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontRightPowerWindowsSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightPowerWindowsSwitchReply::CopyFrom(const FrontRightPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightPowerWindowsSwitchReply::IsInitialized() const {
  return true;
}

void FrontRightPowerWindowsSwitchReply::InternalSwap(FrontRightPowerWindowsSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightPowerWindowsSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftPowerWindowsSwitchReply::_Internal {
 public:
};

FrontLeftPowerWindowsSwitchReply::FrontLeftPowerWindowsSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftPowerWindowsSwitchReply)
}
FrontLeftPowerWindowsSwitchReply::FrontLeftPowerWindowsSwitchReply(const FrontLeftPowerWindowsSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftPowerWindowsSwitchReply)
}

void FrontLeftPowerWindowsSwitchReply::SharedCtor() {
status_ = false;
}

FrontLeftPowerWindowsSwitchReply::~FrontLeftPowerWindowsSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftPowerWindowsSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftPowerWindowsSwitchReply::ArenaDtor(void* object) {
  FrontLeftPowerWindowsSwitchReply* _this = reinterpret_cast< FrontLeftPowerWindowsSwitchReply* >(object);
  (void)_this;
}
void FrontLeftPowerWindowsSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftPowerWindowsSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftPowerWindowsSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftPowerWindowsSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftPowerWindowsSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  return target;
}

size_t FrontLeftPowerWindowsSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftPowerWindowsSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftPowerWindowsSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftPowerWindowsSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftPowerWindowsSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftPowerWindowsSwitchReply)
    MergeFrom(*source);
  }
}

void FrontLeftPowerWindowsSwitchReply::MergeFrom(const FrontLeftPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontLeftPowerWindowsSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftPowerWindowsSwitchReply::CopyFrom(const FrontLeftPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftPowerWindowsSwitchReply::IsInitialized() const {
  return true;
}

void FrontLeftPowerWindowsSwitchReply::InternalSwap(FrontLeftPowerWindowsSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftPowerWindowsSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightPowerWindowsSwitchReply::_Internal {
 public:
};

RearRightPowerWindowsSwitchReply::RearRightPowerWindowsSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightPowerWindowsSwitchReply)
}
RearRightPowerWindowsSwitchReply::RearRightPowerWindowsSwitchReply(const RearRightPowerWindowsSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightPowerWindowsSwitchReply)
}

void RearRightPowerWindowsSwitchReply::SharedCtor() {
status_ = false;
}

RearRightPowerWindowsSwitchReply::~RearRightPowerWindowsSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightPowerWindowsSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightPowerWindowsSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightPowerWindowsSwitchReply::ArenaDtor(void* object) {
  RearRightPowerWindowsSwitchReply* _this = reinterpret_cast< RearRightPowerWindowsSwitchReply* >(object);
  (void)_this;
}
void RearRightPowerWindowsSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightPowerWindowsSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightPowerWindowsSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightPowerWindowsSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightPowerWindowsSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightPowerWindowsSwitchReply)
  return target;
}

size_t RearRightPowerWindowsSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightPowerWindowsSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightPowerWindowsSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightPowerWindowsSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightPowerWindowsSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightPowerWindowsSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightPowerWindowsSwitchReply)
    MergeFrom(*source);
  }
}

void RearRightPowerWindowsSwitchReply::MergeFrom(const RearRightPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearRightPowerWindowsSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightPowerWindowsSwitchReply::CopyFrom(const RearRightPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightPowerWindowsSwitchReply::IsInitialized() const {
  return true;
}

void RearRightPowerWindowsSwitchReply::InternalSwap(RearRightPowerWindowsSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightPowerWindowsSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftPowerWindowsSwitchReply::_Internal {
 public:
};

RearLeftPowerWindowsSwitchReply::RearLeftPowerWindowsSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftPowerWindowsSwitchReply)
}
RearLeftPowerWindowsSwitchReply::RearLeftPowerWindowsSwitchReply(const RearLeftPowerWindowsSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftPowerWindowsSwitchReply)
}

void RearLeftPowerWindowsSwitchReply::SharedCtor() {
status_ = false;
}

RearLeftPowerWindowsSwitchReply::~RearLeftPowerWindowsSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftPowerWindowsSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftPowerWindowsSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftPowerWindowsSwitchReply::ArenaDtor(void* object) {
  RearLeftPowerWindowsSwitchReply* _this = reinterpret_cast< RearLeftPowerWindowsSwitchReply* >(object);
  (void)_this;
}
void RearLeftPowerWindowsSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftPowerWindowsSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftPowerWindowsSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftPowerWindowsSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftPowerWindowsSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftPowerWindowsSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftPowerWindowsSwitchReply)
  return target;
}

size_t RearLeftPowerWindowsSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftPowerWindowsSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftPowerWindowsSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftPowerWindowsSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftPowerWindowsSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftPowerWindowsSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftPowerWindowsSwitchReply)
    MergeFrom(*source);
  }
}

void RearLeftPowerWindowsSwitchReply::MergeFrom(const RearLeftPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftPowerWindowsSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearLeftPowerWindowsSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftPowerWindowsSwitchReply::CopyFrom(const RearLeftPowerWindowsSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftPowerWindowsSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftPowerWindowsSwitchReply::IsInitialized() const {
  return true;
}

void RearLeftPowerWindowsSwitchReply::InternalSwap(RearLeftPowerWindowsSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftPowerWindowsSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HornReply::_Internal {
 public:
};

HornReply::HornReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.HornReply)
}
HornReply::HornReply(const HornReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.HornReply)
}

void HornReply::SharedCtor() {
status_ = false;
}

HornReply::~HornReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.HornReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HornReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HornReply::ArenaDtor(void* object) {
  HornReply* _this = reinterpret_cast< HornReply* >(object);
  (void)_this;
}
void HornReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HornReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HornReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.HornReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HornReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HornReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.HornReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.HornReply)
  return target;
}

size_t HornReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.HornReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HornReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.HornReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HornReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HornReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.HornReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.HornReply)
    MergeFrom(*source);
  }
}

void HornReply::MergeFrom(const HornReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.HornReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void HornReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.HornReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HornReply::CopyFrom(const HornReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.HornReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HornReply::IsInitialized() const {
  return true;
}

void HornReply::InternalSwap(HornReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HornReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BuzzerReply::_Internal {
 public:
};

BuzzerReply::BuzzerReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.BuzzerReply)
}
BuzzerReply::BuzzerReply(const BuzzerReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.BuzzerReply)
}

void BuzzerReply::SharedCtor() {
status_ = false;
}

BuzzerReply::~BuzzerReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.BuzzerReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BuzzerReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BuzzerReply::ArenaDtor(void* object) {
  BuzzerReply* _this = reinterpret_cast< BuzzerReply* >(object);
  (void)_this;
}
void BuzzerReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BuzzerReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BuzzerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.BuzzerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuzzerReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BuzzerReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.BuzzerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.BuzzerReply)
  return target;
}

size_t BuzzerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.BuzzerReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuzzerReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.BuzzerReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BuzzerReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BuzzerReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.BuzzerReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.BuzzerReply)
    MergeFrom(*source);
  }
}

void BuzzerReply::MergeFrom(const BuzzerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.BuzzerReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void BuzzerReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.BuzzerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuzzerReply::CopyFrom(const BuzzerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.BuzzerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuzzerReply::IsInitialized() const {
  return true;
}

void BuzzerReply::InternalSwap(BuzzerReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuzzerReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AirConditionerReply::_Internal {
 public:
};

AirConditionerReply::AirConditionerReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.AirConditionerReply)
}
AirConditionerReply::AirConditionerReply(const AirConditionerReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.AirConditionerReply)
}

void AirConditionerReply::SharedCtor() {
status_ = false;
}

AirConditionerReply::~AirConditionerReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.AirConditionerReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirConditionerReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AirConditionerReply::ArenaDtor(void* object) {
  AirConditionerReply* _this = reinterpret_cast< AirConditionerReply* >(object);
  (void)_this;
}
void AirConditionerReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirConditionerReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AirConditionerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.AirConditionerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirConditionerReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirConditionerReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.AirConditionerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.AirConditionerReply)
  return target;
}

size_t AirConditionerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.AirConditionerReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirConditionerReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.AirConditionerReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AirConditionerReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirConditionerReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.AirConditionerReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.AirConditionerReply)
    MergeFrom(*source);
  }
}

void AirConditionerReply::MergeFrom(const AirConditionerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.AirConditionerReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void AirConditionerReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.AirConditionerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirConditionerReply::CopyFrom(const AirConditionerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.AirConditionerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirConditionerReply::IsInitialized() const {
  return true;
}

void AirConditionerReply::InternalSwap(AirConditionerReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AirConditionerReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AirCondTemperatureReply::_Internal {
 public:
};

AirCondTemperatureReply::AirCondTemperatureReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.AirCondTemperatureReply)
}
AirCondTemperatureReply::AirCondTemperatureReply(const AirCondTemperatureReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  temperature_ = from.temperature_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.AirCondTemperatureReply)
}

void AirCondTemperatureReply::SharedCtor() {
temperature_ = 0;
}

AirCondTemperatureReply::~AirCondTemperatureReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.AirCondTemperatureReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirCondTemperatureReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AirCondTemperatureReply::ArenaDtor(void* object) {
  AirCondTemperatureReply* _this = reinterpret_cast< AirCondTemperatureReply* >(object);
  (void)_this;
}
void AirCondTemperatureReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirCondTemperatureReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AirCondTemperatureReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.AirCondTemperatureReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temperature_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirCondTemperatureReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double temperature = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirCondTemperatureReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.AirCondTemperatureReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double temperature = 1;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_temperature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.AirCondTemperatureReply)
  return target;
}

size_t AirCondTemperatureReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.AirCondTemperatureReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double temperature = 1;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirCondTemperatureReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.AirCondTemperatureReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AirCondTemperatureReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirCondTemperatureReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.AirCondTemperatureReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.AirCondTemperatureReply)
    MergeFrom(*source);
  }
}

void AirCondTemperatureReply::MergeFrom(const AirCondTemperatureReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.AirCondTemperatureReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.temperature() <= 0 && from.temperature() >= 0)) {
    _internal_set_temperature(from._internal_temperature());
  }
}

void AirCondTemperatureReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.AirCondTemperatureReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirCondTemperatureReply::CopyFrom(const AirCondTemperatureReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.AirCondTemperatureReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirCondTemperatureReply::IsInitialized() const {
  return true;
}

void AirCondTemperatureReply::InternalSwap(AirCondTemperatureReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(temperature_, other->temperature_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AirCondTemperatureReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AirConditionerFanSpeedReply::_Internal {
 public:
};

AirConditionerFanSpeedReply::AirConditionerFanSpeedReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.AirConditionerFanSpeedReply)
}
AirConditionerFanSpeedReply::AirConditionerFanSpeedReply(const AirConditionerFanSpeedReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fanspeed_ = from.fanspeed_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.AirConditionerFanSpeedReply)
}

void AirConditionerFanSpeedReply::SharedCtor() {
fanspeed_ = 0;
}

AirConditionerFanSpeedReply::~AirConditionerFanSpeedReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.AirConditionerFanSpeedReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirConditionerFanSpeedReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AirConditionerFanSpeedReply::ArenaDtor(void* object) {
  AirConditionerFanSpeedReply* _this = reinterpret_cast< AirConditionerFanSpeedReply* >(object);
  (void)_this;
}
void AirConditionerFanSpeedReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirConditionerFanSpeedReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AirConditionerFanSpeedReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.AirConditionerFanSpeedReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fanspeed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirConditionerFanSpeedReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 fanSpeed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          fanspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirConditionerFanSpeedReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.AirConditionerFanSpeedReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fanSpeed = 1;
  if (this->fanspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_fanspeed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.AirConditionerFanSpeedReply)
  return target;
}

size_t AirConditionerFanSpeedReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.AirConditionerFanSpeedReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 fanSpeed = 1;
  if (this->fanspeed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fanspeed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirConditionerFanSpeedReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.AirConditionerFanSpeedReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AirConditionerFanSpeedReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirConditionerFanSpeedReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.AirConditionerFanSpeedReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.AirConditionerFanSpeedReply)
    MergeFrom(*source);
  }
}

void AirConditionerFanSpeedReply::MergeFrom(const AirConditionerFanSpeedReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.AirConditionerFanSpeedReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fanspeed() != 0) {
    _internal_set_fanspeed(from._internal_fanspeed());
  }
}

void AirConditionerFanSpeedReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.AirConditionerFanSpeedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirConditionerFanSpeedReply::CopyFrom(const AirConditionerFanSpeedReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.AirConditionerFanSpeedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirConditionerFanSpeedReply::IsInitialized() const {
  return true;
}

void AirConditionerFanSpeedReply::InternalSwap(AirConditionerFanSpeedReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(fanspeed_, other->fanspeed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AirConditionerFanSpeedReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HandlingReply::_Internal {
 public:
};

HandlingReply::HandlingReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.HandlingReply)
}
HandlingReply::HandlingReply(const HandlingReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.HandlingReply)
}

void HandlingReply::SharedCtor() {
status_ = false;
}

HandlingReply::~HandlingReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.HandlingReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HandlingReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HandlingReply::ArenaDtor(void* object) {
  HandlingReply* _this = reinterpret_cast< HandlingReply* >(object);
  (void)_this;
}
void HandlingReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandlingReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HandlingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.HandlingReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandlingReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HandlingReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.HandlingReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.HandlingReply)
  return target;
}

size_t HandlingReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.HandlingReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandlingReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.HandlingReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HandlingReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HandlingReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.HandlingReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.HandlingReply)
    MergeFrom(*source);
  }
}

void HandlingReply::MergeFrom(const HandlingReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.HandlingReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void HandlingReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.HandlingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandlingReply::CopyFrom(const HandlingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.HandlingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlingReply::IsInitialized() const {
  return true;
}

void HandlingReply::InternalSwap(HandlingReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandlingReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CentralDoorLockSwitchReply::_Internal {
 public:
};

CentralDoorLockSwitchReply::CentralDoorLockSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.CentralDoorLockSwitchReply)
}
CentralDoorLockSwitchReply::CentralDoorLockSwitchReply(const CentralDoorLockSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.CentralDoorLockSwitchReply)
}

void CentralDoorLockSwitchReply::SharedCtor() {
status_ = false;
}

CentralDoorLockSwitchReply::~CentralDoorLockSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.CentralDoorLockSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CentralDoorLockSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CentralDoorLockSwitchReply::ArenaDtor(void* object) {
  CentralDoorLockSwitchReply* _this = reinterpret_cast< CentralDoorLockSwitchReply* >(object);
  (void)_this;
}
void CentralDoorLockSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CentralDoorLockSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CentralDoorLockSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.CentralDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CentralDoorLockSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CentralDoorLockSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.CentralDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.CentralDoorLockSwitchReply)
  return target;
}

size_t CentralDoorLockSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.CentralDoorLockSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CentralDoorLockSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.CentralDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CentralDoorLockSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CentralDoorLockSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.CentralDoorLockSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.CentralDoorLockSwitchReply)
    MergeFrom(*source);
  }
}

void CentralDoorLockSwitchReply::MergeFrom(const CentralDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.CentralDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void CentralDoorLockSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.CentralDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CentralDoorLockSwitchReply::CopyFrom(const CentralDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.CentralDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CentralDoorLockSwitchReply::IsInitialized() const {
  return true;
}

void CentralDoorLockSwitchReply::InternalSwap(CentralDoorLockSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CentralDoorLockSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontRightDoorLockSwitchReply::_Internal {
 public:
};

FrontRightDoorLockSwitchReply::FrontRightDoorLockSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontRightDoorLockSwitchReply)
}
FrontRightDoorLockSwitchReply::FrontRightDoorLockSwitchReply(const FrontRightDoorLockSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontRightDoorLockSwitchReply)
}

void FrontRightDoorLockSwitchReply::SharedCtor() {
status_ = false;
}

FrontRightDoorLockSwitchReply::~FrontRightDoorLockSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontRightDoorLockSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontRightDoorLockSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontRightDoorLockSwitchReply::ArenaDtor(void* object) {
  FrontRightDoorLockSwitchReply* _this = reinterpret_cast< FrontRightDoorLockSwitchReply* >(object);
  (void)_this;
}
void FrontRightDoorLockSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontRightDoorLockSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontRightDoorLockSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontRightDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontRightDoorLockSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontRightDoorLockSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontRightDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontRightDoorLockSwitchReply)
  return target;
}

size_t FrontRightDoorLockSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontRightDoorLockSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontRightDoorLockSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontRightDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontRightDoorLockSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontRightDoorLockSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontRightDoorLockSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontRightDoorLockSwitchReply)
    MergeFrom(*source);
  }
}

void FrontRightDoorLockSwitchReply::MergeFrom(const FrontRightDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontRightDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontRightDoorLockSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontRightDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontRightDoorLockSwitchReply::CopyFrom(const FrontRightDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontRightDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontRightDoorLockSwitchReply::IsInitialized() const {
  return true;
}

void FrontRightDoorLockSwitchReply::InternalSwap(FrontRightDoorLockSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontRightDoorLockSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FrontLeftDoorLockSwitchReply::_Internal {
 public:
};

FrontLeftDoorLockSwitchReply::FrontLeftDoorLockSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.FrontLeftDoorLockSwitchReply)
}
FrontLeftDoorLockSwitchReply::FrontLeftDoorLockSwitchReply(const FrontLeftDoorLockSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.FrontLeftDoorLockSwitchReply)
}

void FrontLeftDoorLockSwitchReply::SharedCtor() {
status_ = false;
}

FrontLeftDoorLockSwitchReply::~FrontLeftDoorLockSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.FrontLeftDoorLockSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrontLeftDoorLockSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrontLeftDoorLockSwitchReply::ArenaDtor(void* object) {
  FrontLeftDoorLockSwitchReply* _this = reinterpret_cast< FrontLeftDoorLockSwitchReply* >(object);
  (void)_this;
}
void FrontLeftDoorLockSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrontLeftDoorLockSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrontLeftDoorLockSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.FrontLeftDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrontLeftDoorLockSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrontLeftDoorLockSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.FrontLeftDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.FrontLeftDoorLockSwitchReply)
  return target;
}

size_t FrontLeftDoorLockSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.FrontLeftDoorLockSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrontLeftDoorLockSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.FrontLeftDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FrontLeftDoorLockSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrontLeftDoorLockSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.FrontLeftDoorLockSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.FrontLeftDoorLockSwitchReply)
    MergeFrom(*source);
  }
}

void FrontLeftDoorLockSwitchReply::MergeFrom(const FrontLeftDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.FrontLeftDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void FrontLeftDoorLockSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.FrontLeftDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrontLeftDoorLockSwitchReply::CopyFrom(const FrontLeftDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.FrontLeftDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrontLeftDoorLockSwitchReply::IsInitialized() const {
  return true;
}

void FrontLeftDoorLockSwitchReply::InternalSwap(FrontLeftDoorLockSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrontLeftDoorLockSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearRightDoorLockSwitchReply::_Internal {
 public:
};

RearRightDoorLockSwitchReply::RearRightDoorLockSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearRightDoorLockSwitchReply)
}
RearRightDoorLockSwitchReply::RearRightDoorLockSwitchReply(const RearRightDoorLockSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearRightDoorLockSwitchReply)
}

void RearRightDoorLockSwitchReply::SharedCtor() {
status_ = false;
}

RearRightDoorLockSwitchReply::~RearRightDoorLockSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearRightDoorLockSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearRightDoorLockSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearRightDoorLockSwitchReply::ArenaDtor(void* object) {
  RearRightDoorLockSwitchReply* _this = reinterpret_cast< RearRightDoorLockSwitchReply* >(object);
  (void)_this;
}
void RearRightDoorLockSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearRightDoorLockSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearRightDoorLockSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearRightDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearRightDoorLockSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearRightDoorLockSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearRightDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearRightDoorLockSwitchReply)
  return target;
}

size_t RearRightDoorLockSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearRightDoorLockSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearRightDoorLockSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearRightDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearRightDoorLockSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearRightDoorLockSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearRightDoorLockSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearRightDoorLockSwitchReply)
    MergeFrom(*source);
  }
}

void RearRightDoorLockSwitchReply::MergeFrom(const RearRightDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearRightDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearRightDoorLockSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearRightDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearRightDoorLockSwitchReply::CopyFrom(const RearRightDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearRightDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearRightDoorLockSwitchReply::IsInitialized() const {
  return true;
}

void RearRightDoorLockSwitchReply::InternalSwap(RearRightDoorLockSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearRightDoorLockSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RearLeftDoorLockSwitchReply::_Internal {
 public:
};

RearLeftDoorLockSwitchReply::RearLeftDoorLockSwitchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:UnityAPI.RearLeftDoorLockSwitchReply)
}
RearLeftDoorLockSwitchReply::RearLeftDoorLockSwitchReply(const RearLeftDoorLockSwitchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnityAPI.RearLeftDoorLockSwitchReply)
}

void RearLeftDoorLockSwitchReply::SharedCtor() {
status_ = false;
}

RearLeftDoorLockSwitchReply::~RearLeftDoorLockSwitchReply() {
  // @@protoc_insertion_point(destructor:UnityAPI.RearLeftDoorLockSwitchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RearLeftDoorLockSwitchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RearLeftDoorLockSwitchReply::ArenaDtor(void* object) {
  RearLeftDoorLockSwitchReply* _this = reinterpret_cast< RearLeftDoorLockSwitchReply* >(object);
  (void)_this;
}
void RearLeftDoorLockSwitchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RearLeftDoorLockSwitchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RearLeftDoorLockSwitchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:UnityAPI.RearLeftDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RearLeftDoorLockSwitchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearLeftDoorLockSwitchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnityAPI.RearLeftDoorLockSwitchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnityAPI.RearLeftDoorLockSwitchReply)
  return target;
}

size_t RearLeftDoorLockSwitchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnityAPI.RearLeftDoorLockSwitchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearLeftDoorLockSwitchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnityAPI.RearLeftDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RearLeftDoorLockSwitchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearLeftDoorLockSwitchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnityAPI.RearLeftDoorLockSwitchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnityAPI.RearLeftDoorLockSwitchReply)
    MergeFrom(*source);
  }
}

void RearLeftDoorLockSwitchReply::MergeFrom(const RearLeftDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnityAPI.RearLeftDoorLockSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RearLeftDoorLockSwitchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnityAPI.RearLeftDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearLeftDoorLockSwitchReply::CopyFrom(const RearLeftDoorLockSwitchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnityAPI.RearLeftDoorLockSwitchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearLeftDoorLockSwitchReply::IsInitialized() const {
  return true;
}

void RearLeftDoorLockSwitchReply::InternalSwap(RearLeftDoorLockSwitchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearLeftDoorLockSwitchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace UnityAPI
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::UnityAPI::setDBRequest* Arena::CreateMaybeMessage< ::UnityAPI::setDBRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::setDBRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::setDBReply* Arena::CreateMaybeMessage< ::UnityAPI::setDBReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::setDBReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::getDBRequest* Arena::CreateMaybeMessage< ::UnityAPI::getDBRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::getDBRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::getDBReply* Arena::CreateMaybeMessage< ::UnityAPI::getDBReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::getDBReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLowLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontLowLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLowLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontHighLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontHighLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontHighLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontDaytimeLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontDaytimeLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontDaytimeLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::BrakeLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::BrakeLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::BrakeLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ReverseLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::ReverseLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ReverseLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontFogLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontFogLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontFogLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearFogLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearFogLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearFogLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ClearanceLampRequest* Arena::CreateMaybeMessage< ::UnityAPI::ClearanceLampRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ClearanceLampRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftBlinkerLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftBlinkerLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftBlinkerLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightBlinkerLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightBlinkerLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightBlinkerLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftBlinkerLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftBlinkerLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftBlinkerLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightBlinkerLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearRightBlinkerLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightBlinkerLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontWiperRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontWiperRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontWiperRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearWiperRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearWiperRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearWiperRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::LeftSideMirrorRequest* Arena::CreateMaybeMessage< ::UnityAPI::LeftSideMirrorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::LeftSideMirrorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RightSideMirrorRequest* Arena::CreateMaybeMessage< ::UnityAPI::RightSideMirrorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RightSideMirrorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightDoorRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightDoorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightDoorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftDoorRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftDoorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftDoorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightDoorRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearRightDoorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightDoorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftDoorRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftDoorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftDoorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::TrunkRequest* Arena::CreateMaybeMessage< ::UnityAPI::TrunkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::TrunkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::SunRoofRequest* Arena::CreateMaybeMessage< ::UnityAPI::SunRoofRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::SunRoofRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightPowerWindowsRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightPowerWindowsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightPowerWindowsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftPowerWindowsRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftPowerWindowsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftPowerWindowsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightPowerWindowsRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearRightPowerWindowsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightPowerWindowsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftPowerWindowsRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftPowerWindowsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftPowerWindowsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::SideMirrorSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::SideMirrorSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::SideMirrorSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::InstrumentLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::InstrumentLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::InstrumentLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::PassgenerRoomDomeLightRequest* Arena::CreateMaybeMessage< ::UnityAPI::PassgenerRoomDomeLightRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::PassgenerRoomDomeLightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ReadingLightDriverSideRequest* Arena::CreateMaybeMessage< ::UnityAPI::ReadingLightDriverSideRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ReadingLightDriverSideRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ReadingLightPassgenerSideRequest* Arena::CreateMaybeMessage< ::UnityAPI::ReadingLightPassgenerSideRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ReadingLightPassgenerSideRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightPowerWindowsSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightPowerWindowsSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightPowerWindowsSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftPowerWindowsSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftPowerWindowsSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftPowerWindowsSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightPowerWindowsSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearRightPowerWindowsSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightPowerWindowsSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftPowerWindowsSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftPowerWindowsSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftPowerWindowsSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::HornRequest* Arena::CreateMaybeMessage< ::UnityAPI::HornRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::HornRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::BuzzerRequest* Arena::CreateMaybeMessage< ::UnityAPI::BuzzerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::BuzzerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::AirConditionerRequest* Arena::CreateMaybeMessage< ::UnityAPI::AirConditionerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::AirConditionerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::AirCondTemperatureRequest* Arena::CreateMaybeMessage< ::UnityAPI::AirCondTemperatureRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::AirCondTemperatureRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::AirConditionerFanSpeedRequest* Arena::CreateMaybeMessage< ::UnityAPI::AirConditionerFanSpeedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::AirConditionerFanSpeedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::HandlingRequest* Arena::CreateMaybeMessage< ::UnityAPI::HandlingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::HandlingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::CentralDoorLockSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::CentralDoorLockSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::CentralDoorLockSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightDoorLockSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightDoorLockSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightDoorLockSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftDoorLockSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftDoorLockSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftDoorLockSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightDoorLockSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearRightDoorLockSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightDoorLockSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftDoorLockSwitchRequest* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftDoorLockSwitchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftDoorLockSwitchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLowLightReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontLowLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLowLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontHighLightReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontHighLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontHighLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLightReply* Arena::CreateMaybeMessage< ::UnityAPI::RearLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontDaytimeLightReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontDaytimeLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontDaytimeLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::BrakeLightReply* Arena::CreateMaybeMessage< ::UnityAPI::BrakeLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::BrakeLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ReverseLightReply* Arena::CreateMaybeMessage< ::UnityAPI::ReverseLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ReverseLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontFogLightReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontFogLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontFogLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearFogLightReply* Arena::CreateMaybeMessage< ::UnityAPI::RearFogLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearFogLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ClearanceLampReply* Arena::CreateMaybeMessage< ::UnityAPI::ClearanceLampReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ClearanceLampReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftBlinkerLightReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftBlinkerLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftBlinkerLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightBlinkerLightReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightBlinkerLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightBlinkerLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftBlinkerLightReply* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftBlinkerLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftBlinkerLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightBlinkerLightReply* Arena::CreateMaybeMessage< ::UnityAPI::RearRightBlinkerLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightBlinkerLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontWiperReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontWiperReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontWiperReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearWiperReply* Arena::CreateMaybeMessage< ::UnityAPI::RearWiperReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearWiperReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::LeftSideMirrorReply* Arena::CreateMaybeMessage< ::UnityAPI::LeftSideMirrorReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::LeftSideMirrorReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RightSideMirrorReply* Arena::CreateMaybeMessage< ::UnityAPI::RightSideMirrorReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RightSideMirrorReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightDoorReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightDoorReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightDoorReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftDoorReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftDoorReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftDoorReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightDoorReply* Arena::CreateMaybeMessage< ::UnityAPI::RearRightDoorReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightDoorReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftDoorReply* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftDoorReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftDoorReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::TrunkReply* Arena::CreateMaybeMessage< ::UnityAPI::TrunkReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::TrunkReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::SunRoofReply* Arena::CreateMaybeMessage< ::UnityAPI::SunRoofReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::SunRoofReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightPowerWindowsReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightPowerWindowsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightPowerWindowsReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftPowerWindowsReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftPowerWindowsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftPowerWindowsReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightPowerWindowsReply* Arena::CreateMaybeMessage< ::UnityAPI::RearRightPowerWindowsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightPowerWindowsReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftPowerWindowsReply* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftPowerWindowsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftPowerWindowsReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::SideMirrorSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::SideMirrorSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::SideMirrorSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::InstrumentLightReply* Arena::CreateMaybeMessage< ::UnityAPI::InstrumentLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::InstrumentLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::PassgenerRoomDomeLightReply* Arena::CreateMaybeMessage< ::UnityAPI::PassgenerRoomDomeLightReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::PassgenerRoomDomeLightReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ReadingLightDriverSideReply* Arena::CreateMaybeMessage< ::UnityAPI::ReadingLightDriverSideReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ReadingLightDriverSideReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::ReadingLightPassgenerSideReply* Arena::CreateMaybeMessage< ::UnityAPI::ReadingLightPassgenerSideReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::ReadingLightPassgenerSideReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightPowerWindowsSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightPowerWindowsSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightPowerWindowsSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftPowerWindowsSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftPowerWindowsSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftPowerWindowsSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightPowerWindowsSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::RearRightPowerWindowsSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightPowerWindowsSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftPowerWindowsSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftPowerWindowsSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftPowerWindowsSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::HornReply* Arena::CreateMaybeMessage< ::UnityAPI::HornReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::HornReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::BuzzerReply* Arena::CreateMaybeMessage< ::UnityAPI::BuzzerReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::BuzzerReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::AirConditionerReply* Arena::CreateMaybeMessage< ::UnityAPI::AirConditionerReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::AirConditionerReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::AirCondTemperatureReply* Arena::CreateMaybeMessage< ::UnityAPI::AirCondTemperatureReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::AirCondTemperatureReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::AirConditionerFanSpeedReply* Arena::CreateMaybeMessage< ::UnityAPI::AirConditionerFanSpeedReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::AirConditionerFanSpeedReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::HandlingReply* Arena::CreateMaybeMessage< ::UnityAPI::HandlingReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::HandlingReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::CentralDoorLockSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::CentralDoorLockSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::CentralDoorLockSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontRightDoorLockSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontRightDoorLockSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontRightDoorLockSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::FrontLeftDoorLockSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::FrontLeftDoorLockSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::FrontLeftDoorLockSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearRightDoorLockSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::RearRightDoorLockSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearRightDoorLockSwitchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::UnityAPI::RearLeftDoorLockSwitchReply* Arena::CreateMaybeMessage< ::UnityAPI::RearLeftDoorLockSwitchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UnityAPI::RearLeftDoorLockSwitchReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
